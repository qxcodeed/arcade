{
    "title": "L2 - @padroes2 - Descobrindo quantas pecinhas",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>L2 - @padroes2 - Descobrindo quantas pecinhas</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"l2---padroes2---descobrindo-quantas-pecinhas\">L2 - <span\nclass=\"citation\" data-cites=\"padroes2\">@padroes2</span> - Descobrindo\nquantas pecinhas</h1>\n<ul>\n<li>Veja a vers\u00e3o online: <a\nhref=\"https://github.com/qxcodeed/arcade/blob/master/base/padroes2/Readme.md\">aqui.</a></li>\n<li>Para programar na sua m\u00e1quina (local/virtual) use:\n<ul>\n<li><code>tko down ed padroes2</code></li>\n</ul></li>\n<li>Se n\u00e3o tem o <code>tko</code>, instale pelo <a\nhref=\"https://github.com/senapk/tko#tko\">LINK</a>.</li>\n</ul>\n<hr />\n<p>Considere a seguinte sequ\u00eancia de imagem:</p>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/padroes2/seq1.png\"\nalt=\"Padr\u00f5es\" />\n<figcaption aria-hidden=\"true\">Padr\u00f5es</figcaption>\n</figure>\n<p>Cada imagem na sequ\u00eancia \u00e9 formada por um n\u00famero de pe\u00e7as (uma pe\u00e7a\npode ser um quadrado ou tri\u00e2ngulo).</p>\n<p>A tabela seguinte apresenta uma rela\u00e7\u00e3o entre a ordem da imagem na\nsequ\u00eancia e o n\u00famero total de pe\u00e7as utilizadas:</p>\n<table>\n<thead>\n<tr class=\"header\">\n<th>ordem</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>n\u00famero de pe\u00e7as</td>\n<td>3</td>\n<td>8</td>\n<td>15</td>\n</tr>\n</tbody>\n</table>\n<p>Fa\u00e7a um programa que recebe um inteiro <code>n</code> e devolve o\nn\u00famero total de pe\u00e7as da n-\u00e9sima imagem da sequ\u00eancia.</p>\n<h2 id=\"entrada\">Entrada</h2>\n<p>A entrada \u00e9 composta por uma \u00fanica linha contendo um inteiro\n<code>n</code> representando a posi\u00e7\u00e3o de um padr\u00e3o na sequ\u00eancia.</p>\n<h2 id=\"sa\u00edda\">Sa\u00edda</h2>\n<p>A sa\u00edda \u00e9 composta por uma \u00fanica linha contendo o total de pe\u00e7as da\nn-\u00e9sima imagem da sequ\u00eancia.</p>\n<h2 id=\"exemplo-de-entrada\">Exemplo de Entrada</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>3</span></code></pre></div>\n<h2 id=\"exemplo-de-sa\u00edda\">Exemplo de Sa\u00edda</h2>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>15</span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>>\n1\n========\n3\n<<<<<<<<\n\n>>>>>>>>\n2\n========\n8\n<<<<<<<<\n\n>>>>>>>>\n3\n========\n15\n<<<<<<<<\n\n>>>>>>>>\n4\n========\n24\n<<<<<<<<\n\n>>>>>>>>\n5\n========\n35\n<<<<<<<<\n\n>>>>>>>>\n6\n========\n48\n<<<<<<<<\n\n>>>>>>>>\n7\n========\n63\n<<<<<<<<\n\n>>>>>>>>\n8\n========\n80\n<<<<<<<<\n\n>>>>>>>>\n9\n========\n99\n<<<<<<<<\n\n>>>>>>>>\n10\n========\n120\n<<<<<<<<\n\n>>>>>>>>\n11\n========\n143\n<<<<<<<<\n\n>>>>>>>>\n12\n========\n168\n<<<<<<<<\n\n>>>>>>>>\n13\n========\n195\n<<<<<<<<\n\n>>>>>>>>\n14\n========\n224\n<<<<<<<<\n\n>>>>>>>>\n15\n========\n255\n<<<<<<<<\n\n>>>>>>>>\n16\n========\n288\n<<<<<<<<\n\n>>>>>>>>\n17\n========\n323\n<<<<<<<<\n\n>>>>>>>>\n18\n========\n360\n<<<<<<<<\n\n>>>>>>>>\n19\n========\n399\n<<<<<<<<\n\n>>>>>>>>\n20\n========\n440\n<<<<<<<<\n\n>>>>>>>>\n21\n========\n483\n<<<<<<<<\n\n>>>>>>>>\n22\n========\n528\n<<<<<<<<\n\n>>>>>>>>\n23\n========\n575\n<<<<<<<<\n\n>>>>>>>>\n24\n========\n624\n<<<<<<<<\n\n>>>>>>>>\n25\n========\n675\n<<<<<<<<\n\n>>>>>>>>\n26\n========\n728\n<<<<<<<<\n\n>>>>>>>>\n27\n========\n783\n<<<<<<<<\n\n>>>>>>>>\n28\n========\n840\n<<<<<<<<\n\n>>>>>>>>\n29\n========\n899\n<<<<<<<<\n\n>>>>>>>>\n30\n========\n960\n<<<<<<<<\n\n>>>>>>>>\n31\n========\n1023\n<<<<<<<<\n\n>>>>>>>>\n32\n========\n1088\n<<<<<<<<\n\n>>>>>>>>\n33\n========\n1155\n<<<<<<<<\n\n>>>>>>>>\n34\n========\n1224\n<<<<<<<<\n\n>>>>>>>>\n35\n========\n1295\n<<<<<<<<\n\n>>>>>>>>\n36\n========\n1368\n<<<<<<<<\n\n>>>>>>>>\n37\n========\n1443\n<<<<<<<<\n\n>>>>>>>>\n38\n========\n1520\n<<<<<<<<\n\n>>>>>>>>\n39\n========\n1599\n<<<<<<<<\n\n>>>>>>>>\n40\n========\n1680\n<<<<<<<<\n\n>>>>>>>>\n41\n========\n1763\n<<<<<<<<\n\n>>>>>>>>\n42\n========\n1848\n<<<<<<<<\n\n>>>>>>>>\n43\n========\n1935\n<<<<<<<<\n\n>>>>>>>>\n44\n========\n2024\n<<<<<<<<\n\n>>>>>>>>\n45\n========\n2115\n<<<<<<<<\n\n>>>>>>>>\n46\n========\n2208\n<<<<<<<<\n\n>>>>>>>>\n47\n========\n2303\n<<<<<<<<\n\n>>>>>>>>\n48\n========\n2400\n<<<<<<<<\n\n>>>>>>>>\n49\n========\n2499\n<<<<<<<<\n\n>>>>>>>>\n50\n========\n2600\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
