{
    "title": "@altura: Altura e profundidade da \u00e1rvore",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@altura: Altura e profundidade da \u00e1rvore</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@altura: Altura e profundidade da \u00e1rvore</h1>\n            <h1 id=\"altura-e-profundidade-da-arvore\">Altura e profundidade da \u00e1rvore</h1>\n<!--TOC_BEGIN-->\n<ul>\n<li><a href=\"#descri\u00e7\u00e3o\">Descri\u00e7\u00e3o</a></li>\n<li><a href=\"#c\u00f3digo-base\">C\u00f3digo base</a></li>\n<li><a href=\"#testes\">Testes</a></li>\n</ul>\n<!--TOC_END-->\n\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/altura/cover.jpg\" /></p>\n<h2 id=\"descricao\">Descri\u00e7\u00e3o</h2>\n<p>Dado o modelo de \u00e1rvore utilizado nas quest\u00f5es anteriores, implemente os seguintes m\u00e9todos.</p>\n<pre class=\"codehilite\"><code class=\"language-cpp\">Node * find(int value); //retorna o n\u00f3 dado o valor ou retorna null\nint getAltura(Node * node);\nint getProfundidade(Node * node);\n</code></pre>\n\n<ul>\n<li>Entrada</li>\n<li>linha 1: o serial de uma \u00e1rvore</li>\n<li>linha 2: uma lista de valores de n\u00f3</li>\n<li>Sa\u00edda</li>\n<li>Para cada n\u00f3 da lista, um n\u00f3 por linha, altura e profundidade do n\u00f3 ou -1 se o n\u00f3 n\u00e3o for encontrado</li>\n</ul>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/altura/__altura.jpg\" /></p>\n<h2 id=\"codigo-base\">C\u00f3digo base</h2>\n<pre class=\"codehilite\"><code class=\"language-cpp\">int main(){\n    string line;\n    getline(cin, line);\n    BTree bt(line);\n    getline(cin, line);\n    stringstream ss(line);\n    int value;\n        while(ss &gt;&gt; value){ //enquanto houver elementos no buffer\n        Node * node = bt.find(value);\n        if(node != nullptr)\n            cout &lt;&lt; bt.getAltura(node) &lt;&lt; &quot; &quot; &lt;&lt; bt.getProfundidade(value) &lt;&lt; &quot;\\n&quot;;\n        else\n            cout &lt;&lt; &quot;-1\\n&quot;;\n    }\n}\n</code></pre>\n\n<h2 id=\"testes\">Testes</h2>\n<pre class=\"codehilite\"><code class=\"language-txt\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01 um\n4 # # \n4\n========\n1 1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02 dois\n1 # 0 # # \n0 1\n========\n1 2\n2 1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03 tres\n4 # 8 2 # # # \n2 8 4\n========\n1 3\n2 2\n3 1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04 quatro\n0 9 4 # # # 5 # # \n5 4 3 0 9\n========\n1 2\n1 3\n-1\n3 1\n2 2\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05 cinco\n8 4 # # 2 0 # # 3 # # \n0 4 8 2 3 7\n========\n1 3\n1 2\n3 1\n2 2\n1 3\n-1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06 seis\n2 1 0 # # # 3 # 7 # 9 # # \n9 7 3 6 1 2 0\n========\n1 4\n2 3\n3 2\n-1\n2 2\n4 1\n1 3\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 07 dez\n1 8 7 # # 4 # 6 # # 5 0 # # 9 # 3 2 # # # \n1 2 3 4 5 6 7 8 9\n========\n5 1\n1 5\n2 4\n2 3\n4 2\n1 4\n1 3\n3 2\n3 3\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01 um\n4 # # \n4\n======== EXPECT\n1 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02 dois\n1 # 0 # # \n0 1\n======== EXPECT\n1 2\n2 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03 tres\n4 # 8 2 # # # \n2 8 4\n======== EXPECT\n1 3\n2 2\n3 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04 quatro\n0 9 4 # # # 5 # # \n5 4 3 0 9\n======== EXPECT\n1 2\n1 3\n-1\n3 1\n2 2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05 cinco\n8 4 # # 2 0 # # 3 # # \n0 4 8 2 3 7\n======== EXPECT\n1 3\n1 2\n3 1\n2 2\n1 3\n-1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06 seis\n2 1 0 # # # 3 # 7 # 9 # # \n9 7 3 6 1 2 0\n======== EXPECT\n1 4\n2 3\n3 2\n-1\n2 2\n4 1\n1 3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07 dez\n1 8 7 # # 4 # 6 # # 5 0 # # 9 # 3 2 # # # \n1 2 3 4 5 6 7 8 9\n======== EXPECT\n5 1\n1 5\n2 4\n2 3\n4 2\n1 4\n1 3\n3 2\n3 3\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
