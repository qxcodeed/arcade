{
    "title": "@prin_list1: Princesa com lista ligada",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@prin_list1: Princesa com lista ligada</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"princesa-com-lista-ligada\">Princesa com lista ligada</h1>\n<p><a href=\"https://www.youtube.com/watch?v=uCsD3ZGzMgE\"><img\nsrc=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/prin_list1/../princesa-lista/cover.jpg\"\nalt=\"_\" /></a></p>\n<p>Um problema bem interessante e antigo da matem\u00e1tica \u00e9 conhecido como\nJosephus Problem. No link da imagem voc\u00ea pode, por curiosidades aprender\nbastantes sobre ele e o modelo matem\u00e1tico que se prop\u00f5e a model\u00e1-lo.</p>\n<p>Nosso objetivo aqui ser\u00e1 apenas implementar seu funcionamento.</p>\n<hr />\n<p>No problema, <strong>N</strong> pessoas se colocam numa fila circular\ne assumem valores de 1 at\u00e9 <strong>N</strong>. Um n\u00famero\n<strong>E</strong> \u00e9 escolhido para iniciar o jogo. <strong>E</strong>\npega a espada, mata o elemento \u00e0 sua frente e passa a espada uma posi\u00e7\u00e3o\n\u00e0 frente. O jogo continua at\u00e9 que um \u00fanico elemento permane\u00e7a vivo.</p>\n<hr />\n<ul>\n<li>Entrada:\n<ul>\n<li>Os valores de <strong>N</strong> e <strong>E</strong> na primeira\nlinha.</li>\n</ul></li>\n<li>Sa\u00edda:\n<ul>\n<li>Etapa a etapa, os elementos que est\u00e3o vivos na fila circular,\nindicando com um &gt; quem est\u00e1 com a espada.</li>\n</ul></li>\n</ul>\n<hr />\n<h2 id=\"implementa\u00e7\u00e3o-usando-listas\">Implementa\u00e7\u00e3o usando listas</h2>\n<p>Resolva novamente o problema utilizando</p>\n<ul>\n<li>a lista do c++ para colocar os elementos</li>\n<li>um iterator para rastrear a posi\u00e7\u00e3o da espada</li>\n<li>o m\u00e9todo erase da lista para matar os elementos</li>\n</ul>\n<h2 id=\"ajuda\">Ajuda</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode cpp\"><code class=\"sourceCode cpp\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//uma lista de inteiros pode ser criada com</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>list<span class=\"op\">&lt;</span><span class=\"dt\">int</span><span class=\"op\">&gt;</span> lista<span class=\"op\">;</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//a lista possui fun\u00e7\u00f5es para inserir ou remover do come\u00e7o ou do fim</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista<span class=\"op\">.</span>push_front<span class=\"op\">(</span><span class=\"dv\">4</span><span class=\"op\">);</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista<span class=\"op\">.</span>push_back<span class=\"op\">(</span><span class=\"dv\">5</span><span class=\"op\">);</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista<span class=\"op\">.</span>pop_front<span class=\"op\">();</span></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>lista<span class=\"op\">.</span>pop_back<span class=\"op\">();</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//containers em c++ possui iteradores que s\u00e3o classes </span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//que servem pra percorrer as estrururas de dados</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//elas funcionam com uma sintaxe parecida com ponteiros</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//it aponta para o primeiro elemento v\u00e1lido da lista</span></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//list&lt;list&gt;::iterator \u00e9 o tipo de dado</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>list<span class=\"op\">&lt;</span>list<span class=\"op\">&gt;::</span>iterator it <span class=\"op\">=</span> lista<span class=\"op\">.</span>begin<span class=\"op\">();</span></span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//andar para o pr\u00f3ximo elemento da lista pode ser feito com</span></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>it<span class=\"op\">++;</span></span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//andar pra tr\u00e1s com </span></span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>it<span class=\"op\">--;</span></span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//lista.end() aponta para o n\u00f3 de marca\u00e7\u00e3o no fim da lista, </span></span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//que \u00e9 um n\u00f3 depois do \u00faltimo v\u00e1lido</span></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//D\u00e1 pra percorrer imprimindo usando iteradores tamb\u00e9m</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"cf\">for</span><span class=\"op\">(</span><span class=\"kw\">auto</span> it <span class=\"op\">=</span> lista<span class=\"op\">.</span>begin<span class=\"op\">();</span> it <span class=\"op\">!=</span> lista<span class=\"op\">.</span>end<span class=\"op\">();</span> <span class=\"op\">++</span>it<span class=\"op\">)</span></span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>    cout <span class=\"op\">&lt;&lt;</span> <span class=\"op\">*</span>it<span class=\"op\">;</span></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//para remover um elemento voce usa a opera\u00e7\u00e3o erase</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//ela apaga o n\u00f3 que est\u00e1 sob o iterador e retorna o n\u00f3</span></span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">//que ficou no lugar dele</span></span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>it <span class=\"op\">=</span> lista<span class=\"op\">.</span>erase<span class=\"op\">(</span>it<span class=\"op\">);</span></span></code></pre></div>\n<hr />\n<p>Testes:</p>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>3 1</span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; 2 3 ]</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3&gt; ]</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 3&gt; ]</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02</span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>3 2</span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 2&gt; 3 ]</span>\n<span id=\"cb2-13\"><a href=\"#cb2-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; 2 ]</span>\n<span id=\"cb2-14\"><a href=\"#cb2-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; ]</span>\n<span id=\"cb2-15\"><a href=\"#cb2-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n<span id=\"cb2-16\"><a href=\"#cb2-16\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-17\"><a href=\"#cb2-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03</span>\n<span id=\"cb2-18\"><a href=\"#cb2-18\" aria-hidden=\"true\" tabindex=\"-1\"></a>3 3</span>\n<span id=\"cb2-19\"><a href=\"#cb2-19\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-20\"><a href=\"#cb2-20\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 2 3&gt; ]</span>\n<span id=\"cb2-21\"><a href=\"#cb2-21\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2&gt; 3 ]</span>\n<span id=\"cb2-22\"><a href=\"#cb2-22\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2&gt; ]</span>\n<span id=\"cb2-23\"><a href=\"#cb2-23\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n<span id=\"cb2-24\"><a href=\"#cb2-24\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-25\"><a href=\"#cb2-25\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04</span>\n<span id=\"cb2-26\"><a href=\"#cb2-26\" aria-hidden=\"true\" tabindex=\"-1\"></a>6 3</span>\n<span id=\"cb2-27\"><a href=\"#cb2-27\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-28\"><a href=\"#cb2-28\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 2 3&gt; 4 5 6 ]</span>\n<span id=\"cb2-29\"><a href=\"#cb2-29\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 2 3 5&gt; 6 ]</span>\n<span id=\"cb2-30\"><a href=\"#cb2-30\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; 2 3 5 ]</span>\n<span id=\"cb2-31\"><a href=\"#cb2-31\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3&gt; 5 ]</span>\n<span id=\"cb2-32\"><a href=\"#cb2-32\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; 3 ]</span>\n<span id=\"cb2-33\"><a href=\"#cb2-33\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; ]</span>\n<span id=\"cb2-34\"><a href=\"#cb2-34\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n<span id=\"cb2-35\"><a href=\"#cb2-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-36\"><a href=\"#cb2-36\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05</span>\n<span id=\"cb2-37\"><a href=\"#cb2-37\" aria-hidden=\"true\" tabindex=\"-1\"></a>9 9</span>\n<span id=\"cb2-38\"><a href=\"#cb2-38\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-39\"><a href=\"#cb2-39\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 2 3 4 5 6 7 8 9&gt; ]</span>\n<span id=\"cb2-40\"><a href=\"#cb2-40\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2&gt; 3 4 5 6 7 8 9 ]</span>\n<span id=\"cb2-41\"><a href=\"#cb2-41\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2 4&gt; 5 6 7 8 9 ]</span>\n<span id=\"cb2-42\"><a href=\"#cb2-42\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2 4 6&gt; 7 8 9 ]</span>\n<span id=\"cb2-43\"><a href=\"#cb2-43\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2 4 6 8&gt; 9 ]</span>\n<span id=\"cb2-44\"><a href=\"#cb2-44\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2&gt; 4 6 8 ]</span>\n<span id=\"cb2-45\"><a href=\"#cb2-45\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2 6&gt; 8 ]</span>\n<span id=\"cb2-46\"><a href=\"#cb2-46\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2&gt; 6 ]</span>\n<span id=\"cb2-47\"><a href=\"#cb2-47\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 2&gt; ]</span>\n<span id=\"cb2-48\"><a href=\"#cb2-48\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n<span id=\"cb2-49\"><a href=\"#cb2-49\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-50\"><a href=\"#cb2-50\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06</span>\n<span id=\"cb2-51\"><a href=\"#cb2-51\" aria-hidden=\"true\" tabindex=\"-1\"></a>20 1</span>\n<span id=\"cb2-52\"><a href=\"#cb2-52\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-53\"><a href=\"#cb2-53\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]</span>\n<span id=\"cb2-54\"><a href=\"#cb2-54\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3&gt; 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]</span>\n<span id=\"cb2-55\"><a href=\"#cb2-55\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5&gt; 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]</span>\n<span id=\"cb2-56\"><a href=\"#cb2-56\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5 7&gt; 8 9 10 11 12 13 14 15 16 17 18 19 20 ]</span>\n<span id=\"cb2-57\"><a href=\"#cb2-57\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5 7 9&gt; 10 11 12 13 14 15 16 17 18 19 20 ]</span>\n<span id=\"cb2-58\"><a href=\"#cb2-58\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5 7 9 11&gt; 12 13 14 15 16 17 18 19 20 ]</span>\n<span id=\"cb2-59\"><a href=\"#cb2-59\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5 7 9 11 13&gt; 14 15 16 17 18 19 20 ]</span>\n<span id=\"cb2-60\"><a href=\"#cb2-60\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5 7 9 11 13 15&gt; 16 17 18 19 20 ]</span>\n<span id=\"cb2-61\"><a href=\"#cb2-61\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5 7 9 11 13 15 17&gt; 18 19 20 ]</span>\n<span id=\"cb2-62\"><a href=\"#cb2-62\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 3 5 7 9 11 13 15 17 19&gt; 20 ]</span>\n<span id=\"cb2-63\"><a href=\"#cb2-63\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; 3 5 7 9 11 13 15 17 19 ]</span>\n<span id=\"cb2-64\"><a href=\"#cb2-64\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 5&gt; 7 9 11 13 15 17 19 ]</span>\n<span id=\"cb2-65\"><a href=\"#cb2-65\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 5 9&gt; 11 13 15 17 19 ]</span>\n<span id=\"cb2-66\"><a href=\"#cb2-66\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 5 9 13&gt; 15 17 19 ]</span>\n<span id=\"cb2-67\"><a href=\"#cb2-67\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 5 9 13 17&gt; 19 ]</span>\n<span id=\"cb2-68\"><a href=\"#cb2-68\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1&gt; 5 9 13 17 ]</span>\n<span id=\"cb2-69\"><a href=\"#cb2-69\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 9&gt; 13 17 ]</span>\n<span id=\"cb2-70\"><a href=\"#cb2-70\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 1 9 17&gt; ]</span>\n<span id=\"cb2-71\"><a href=\"#cb2-71\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 9&gt; 17 ]</span>\n<span id=\"cb2-72\"><a href=\"#cb2-72\" aria-hidden=\"true\" tabindex=\"-1\"></a>[ 9&gt; ]</span>\n<span id=\"cb2-73\"><a href=\"#cb2-73\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n<span id=\"cb2-74\"><a href=\"#cb2-74\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb2-75\"><a href=\"#cb2-75\" aria-hidden=\"true\" tabindex=\"-1\"></a></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n3 1\n======== EXPECT\n[ 1> 2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n3 2\n======== EXPECT\n[ 1 2> 3 ]\n[ 1> 2 ]\n[ 1> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3 3\n======== EXPECT\n[ 1 2 3> ]\n[ 2> 3 ]\n[ 2> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n6 3\n======== EXPECT\n[ 1 2 3> 4 5 6 ]\n[ 1 2 3 5> 6 ]\n[ 1> 2 3 5 ]\n[ 1 3> 5 ]\n[ 1> 3 ]\n[ 1> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n9 9\n======== EXPECT\n[ 1 2 3 4 5 6 7 8 9> ]\n[ 2> 3 4 5 6 7 8 9 ]\n[ 2 4> 5 6 7 8 9 ]\n[ 2 4 6> 7 8 9 ]\n[ 2 4 6 8> 9 ]\n[ 2> 4 6 8 ]\n[ 2 6> 8 ]\n[ 2> 6 ]\n[ 2> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n20 1\n======== EXPECT\n[ 1> 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3> 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5> 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7> 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9> 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11> 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13> 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15> 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17> 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17 19> 20 ]\n[ 1> 3 5 7 9 11 13 15 17 19 ]\n[ 1 5> 7 9 11 13 15 17 19 ]\n[ 1 5 9> 11 13 15 17 19 ]\n[ 1 5 9 13> 15 17 19 ]\n[ 1 5 9 13 17> 19 ]\n[ 1> 5 9 13 17 ]\n[ 1 9> 13 17 ]\n[ 1 9 17> ]\n[ 9> 17 ]\n[ 9> ]\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
