{
    "title": "@mdc: Implemente o mdc recursivo",
    "description": "# Implemente o mdc recursivo\n\nImplemente a fun\u00e7\u00e3o que calcula o mdc de dois n\u00fameros de forma recursiva.\n\nO mdc de dois n\u00fameros inteiros \u00e9 o maior n\u00famero inteiro que divide ambos sem deixar resto.\nPara calcular o mdc de dois n\u00fameros, voc\u00ea pode usar o algoritmo de Euclides.\n\n[LINK](https://pt.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/the-euclidean-algorithm)\n\n## O Algoritmo\n\n- O Algoritmo Euclidiano para encontrar o MDC(A,B) \u00e9 dado por:\n\n- Se A = 0, ent\u00e3o MDC(A,B)=B, uma vez que MDC(0,B)=B, e podemos parar a verifica\u00e7\u00e3o.  \n- Se B = 0, ent\u00e3o MDC(A,B)=A, uma vez que o MDC(A,0)=A, e podemos parar a verifica\u00e7\u00e3o.  \n- Escreva A na forma do resto do quociente (A = B\u22c5Q + R), ou seja R = A % B.\n- Encontre o MDC(B,R) usando o Algoritmo Euclidiano, j\u00e1 que MDC(A,B) = MDC(B,R)\n\n## I/O\n\n- Entrada\n  - A entrada consiste de dois n\u00fameros inteiros positivos.\n- Sa\u00edda\n  - A sa\u00edda consiste de um n\u00famero inteiro positivo que representa o mdc dos dois n\u00fameros.\n\n## Shell\n\n```bash\n>>>>>>>>\n3\n5\n========\n1\n<<<<<<<<\n\n>>>>>>>>\n6\n9\n========\n3\n<<<<<<<<\n\n>>>>>>>>\n50\n15\n========\n5\n<<<<<<<<\n\n>>>>>>>>\n270\n192\n========\n6\n<<<<<<<<\n\n>>>>>>>>\n192\n276\n========\n12\n<<<<<<<<\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n3\n5\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n6\n9\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n50\n15\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n270\n192\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n192\n276\n======== EXPECT\n12\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n\nint mdc(int a, int b) {\n  return 0;\n}\n\nint main() {\n  int a, b;\n  std::cin >> a >> b;\n  std::cout << mdc(a, b) << std::endl;\n  return 0;\n}\n",
                "type": "show"
            }
        ],
        "go": [
            {
                "name": "main.go",
                "contents": "package main\n\nimport (\n\t\"fmt\"\n)\n\nfunc mdc(a, b int) int {\n\treturn 0\n}\n\nfunc main() {\n\tvar a, b int\n\tfmt.Scan(&a, &b)\n\tfmt.Println(mdc(a, b))\n}\n",
                "type": "show"
            }
        ]
    }
}
