{
    "title": "@mdc: Implemente o mdc recursivo",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@mdc: Implemente o mdc recursivo</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@mdc: Implemente o mdc recursivo</h1>\n            <h1 id=\"implemente-o-mdc-recursivo\">Implemente o mdc recursivo</h1>\n<p>Implemente a fun\u00e7\u00e3o que calcula o mdc de dois n\u00fameros de forma recursiva.</p>\n<p>O mdc de dois n\u00fameros inteiros \u00e9 o maior n\u00famero inteiro que divide ambos sem deixar resto.\nPara calcular o mdc de dois n\u00fameros, voc\u00ea pode usar o algoritmo de Euclides.</p>\n<p><a href=\"https://pt.khanacademy.org/computing/computer-science/cryptography/modarithmetic/a/the-euclidean-algorithm\">LINK</a></p>\n<h2 id=\"o-algoritmo\">O Algoritmo</h2>\n<ul>\n<li>\n<p>O Algoritmo Euclidiano para encontrar o MDC(A,B) \u00e9 dado por:</p>\n</li>\n<li>\n<p>Se A = 0, ent\u00e3o MDC(A,B)=B, uma vez que MDC(0,B)=B, e podemos parar a verifica\u00e7\u00e3o.  </p>\n</li>\n<li>Se B = 0, ent\u00e3o MDC(A,B)=A, uma vez que o MDC(A,0)=A, e podemos parar a verifica\u00e7\u00e3o.  </li>\n<li>Escreva A na forma do resto do quociente (A = B\u22c5Q + R), ou seja R = A % B.</li>\n<li>Encontre o MDC(B,R) usando o Algoritmo Euclidiano, j\u00e1 que MDC(A,B) = MDC(B,R)</li>\n</ul>\n<h2 id=\"io\">I/O</h2>\n<ul>\n<li>Entrada</li>\n<li>A entrada consiste de dois n\u00fameros inteiros positivos.</li>\n<li>Sa\u00edda</li>\n<li>A sa\u00edda consiste de um n\u00famero inteiro positivo que representa o mdc dos dois n\u00fameros.</li>\n</ul>\n<h2 id=\"shell\">Shell</h2>\n<pre class=\"codehilite\"><code class=\"language-bash\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n3\n5\n========\n1\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n6\n9\n========\n3\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n50\n15\n========\n5\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n270\n192\n========\n6\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n192\n276\n========\n6\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n3\n5\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n6\n9\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n50\n15\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n270\n192\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n192\n276\n======== EXPECT\n6\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n\n// ADD!0\nint mdc(int a, int b) {\n  if (b == 0) {\n    return a;\n  }\n  return mdc(b, a % b);\n  todo\n  return 0;\n}\n\n//\nint main() {\n  int a, b;\n  std::cin >> a >> b;\n  std::cout << mdc(a, b) << std::endl;\n  return 0;\n}\n",
                "encoding": 0
            }
        ]
    }
}
