{
    "title": "@sufixos: Imprimindo palavra em peda\u00e7os",
    "description": "# Imprimindo palavra em peda\u00e7os\n\nVoc\u00ea precisa responder algumas quest\u00f5es fundamentais antes de come\u00e7ar o desenvolvimento de um algoritmo recursivo. Entre elas, temos:\n\n* Qual \u00e9 o caso base?\n* Qual \u00e9 a a\u00e7\u00e3o fundamental?\n* Quantas vezes teremos uma chamada recursiva.\n\nConsidere o seguinte padr\u00e3o impress\u00e3o:\n\n```txt\n4\n3\n2\n1\n```\n\nNo exemplo acima, estamos imprimindo todos os n\u00fameros em ordem decrescente de 4 at\u00e9 1. Neste exemplo, vamos considerar que o caso base acontece quando o valor de n \u00e9 igual a 0. A a\u00e7\u00e3o fundamental ser\u00e1 imprimir um n\u00famero e depois resolver o mesmo problema para o n\u00famero anterior.\n\n```c\nvoid countDown(int n) {\n    if (n == 0) {\n        return ;\n    }\n    cout << n << endl;\n    countDown(n-1);\n}\n```\n\nConsidere agora o seguinte padr\u00e3o de impress\u00e3o:\n\n```txt\n4\n3\n2\n1\n1\n2\n3\n4\n```\n\nEsse padr\u00e3o pode ser reproduzido pelo seguinte programa:\n\n```c\nvoid countDownUp(int n) {\n    if (n == 0) {\n        return ;\n    }\n    cout << n << endl;\n    countDownUp(n-1);\n    cout << n << endl;\n}\n```\n\nJ\u00e1 o padr\u00e3o de impress\u00e3o:\n\n```txt\nwladimir\nladimir\nadimir\ndimir\nimir\nmir\nir\nr\n```\n\nO padr\u00e3o pode ser reproduzido pelo seguinte programa:\n\n```c\nvoid printTower(char * s) {\n    if (*s == '\\0') {\n        return;\n    }\n    printf(\"%s\\n\", s);\n    printTower(s+1);\n}\n```\n\nFa\u00e7a um program que imprima todos os sufixos de uma palavra do menor sufixo at\u00e9 o maior.\n\n## Entrada\n\nA entrada \u00e9 composta por uma \u00fanica linha contendo uma palavra com at\u00e9 100 caracteres.\n\n## Sa\u00edda\n\nA sa\u00edda \u00e9 composta por `n` linhas sendo `n` o tamanho da palavra lida.\n\n## Exemplo de Entrada\n\n```txt\nwladimir\n```\n\n## Exemplo de Sa\u00edda\n\n```txt\nr\nir\nmir\nimir\ndimir\nadimir\nladimir\nwladimir\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\nwladimir\n======== EXPECT\nr\nir\nmir\nimir\ndimir\nadimir\nladimir\nwladimir\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\ninconstitucionalissimamente\n======== EXPECT\ne\nte\nnte\nente\nmente\namente\nmamente\nimamente\nsimamente\nssimamente\nissimamente\nlissimamente\nalissimamente\nnalissimamente\nonalissimamente\nionalissimamente\ncionalissimamente\nucionalissimamente\ntucionalissimamente\nitucionalissimamente\ntitucionalissimamente\nstitucionalissimamente\nnstitucionalissimamente\nonstitucionalissimamente\nconstitucionalissimamente\nnconstitucionalissimamente\ninconstitucionalissimamente\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\npneumoultramicroscopicossilicovulcanoconiotico\n======== EXPECT\no\nco\nico\ntico\notico\niotico\nniotico\noniotico\nconiotico\noconiotico\nnoconiotico\nanoconiotico\ncanoconiotico\nlcanoconiotico\nulcanoconiotico\nvulcanoconiotico\novulcanoconiotico\ncovulcanoconiotico\nicovulcanoconiotico\nlicovulcanoconiotico\nilicovulcanoconiotico\nsilicovulcanoconiotico\nssilicovulcanoconiotico\nossilicovulcanoconiotico\ncossilicovulcanoconiotico\nicossilicovulcanoconiotico\npicossilicovulcanoconiotico\nopicossilicovulcanoconiotico\ncopicossilicovulcanoconiotico\nscopicossilicovulcanoconiotico\noscopicossilicovulcanoconiotico\nroscopicossilicovulcanoconiotico\ncroscopicossilicovulcanoconiotico\nicroscopicossilicovulcanoconiotico\nmicroscopicossilicovulcanoconiotico\namicroscopicossilicovulcanoconiotico\nramicroscopicossilicovulcanoconiotico\ntramicroscopicossilicovulcanoconiotico\nltramicroscopicossilicovulcanoconiotico\nultramicroscopicossilicovulcanoconiotico\noultramicroscopicossilicovulcanoconiotico\nmoultramicroscopicossilicovulcanoconiotico\numoultramicroscopicossilicovulcanoconiotico\neumoultramicroscopicossilicovulcanoconiotico\nneumoultramicroscopicossilicovulcanoconiotico\npneumoultramicroscopicossilicovulcanoconiotico\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
