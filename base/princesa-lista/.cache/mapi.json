{
    "title": "@princesa-lista: Princesa com lista ligada",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@princesa-lista: Princesa com lista ligada</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@princesa-lista: Princesa com lista ligada</h1>\n            <h1 id=\"princesa-com-lista-ligada\">Princesa com lista ligada</h1>\n<p><a href=\"https://www.youtube.com/watch?v=uCsD3ZGzMgE\"><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/princesa-lista/cover.jpg\" /></a></p>\n<p>Um problema bem interessante e antigo da matem\u00e1tica \u00e9 conhecido como Josephus Problem. No link da imagem voc\u00ea pode, por curiosidades aprender bastantes sobre ele e o modelo matem\u00e1tico que se prop\u00f5e a model\u00e1-lo.</p>\n<p>Nosso objetivo aqui ser\u00e1 apenas implementar seu funcionamento.</p>\n<hr />\n<p>No problema, <strong>N</strong> pessoas se colocam numa fila circular e assumem valores de 1 at\u00e9 <strong>N</strong>. Um n\u00famero <strong>E</strong> \u00e9 escolhido para iniciar o jogo. <strong>E</strong> pega a espada, mata o elemento \u00e0 sua frente e passa a espada uma posi\u00e7\u00e3o \u00e0 frente. O jogo continua at\u00e9 que um \u00fanico elemento permane\u00e7a vivo.</p>\n<hr />\n<ul>\n<li>Entrada:</li>\n<li>Os valores de <strong>N</strong> e <strong>E</strong> na primeira linha.</li>\n<li>Sa\u00edda:</li>\n<li>Etapa a etapa, os elementos que est\u00e3o vivos na fila circular, indicando com um &gt; quem est\u00e1 com a espada.</li>\n</ul>\n<hr />\n<h2 id=\"implementacao-usando-listas\">Implementa\u00e7\u00e3o usando listas</h2>\n<p>Resolva novamente o problema utilizando</p>\n<ul>\n<li>a lista do c++ para colocar os elementos</li>\n<li>um iterator para rastrear a posi\u00e7\u00e3o da espada</li>\n<li>o m\u00e9todo erase da lista para matar os elementos</li>\n</ul>\n<h2 id=\"ajuda\">Ajuda</h2>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">//uma lista de inteiros pode ser criada com</span>\n<span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"kt\">int</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lista</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//a lista possui fun\u00e7\u00f5es para inserir ou remover do come\u00e7o ou do fim</span>\n<span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">push_front</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">);</span>\n<span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">push_back</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">);</span>\n<span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">pop_front</span><span class=\"p\">();</span>\n<span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">pop_back</span><span class=\"p\">();</span>\n\n<span class=\"c1\">//containers em c++ possui iteradores que s\u00e3o classes </span>\n<span class=\"c1\">//que servem pra percorrer as estrururas de dados</span>\n<span class=\"c1\">//elas funcionam com uma sintaxe parecida com ponteiros</span>\n\n<span class=\"c1\">//it aponta para o primeiro elemento v\u00e1lido da lista</span>\n<span class=\"c1\">//list&lt;list&gt;::iterator \u00e9 o tipo de dado</span>\n<span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"n\">list</span><span class=\"o\">&gt;::</span><span class=\"n\">iterator</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">();</span>\n\n<span class=\"c1\">//andar para o pr\u00f3ximo elemento da lista pode ser feito com</span>\n<span class=\"n\">it</span><span class=\"o\">++</span><span class=\"p\">;</span>\n<span class=\"c1\">//andar pra tr\u00e1s com </span>\n<span class=\"n\">it</span><span class=\"o\">--</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//lista.end() aponta para o n\u00f3 de marca\u00e7\u00e3o no fim da lista, </span>\n<span class=\"c1\">//que \u00e9 um n\u00f3 depois do \u00faltimo v\u00e1lido</span>\n<span class=\"c1\">//D\u00e1 pra percorrer imprimindo usando iteradores tamb\u00e9m</span>\n<span class=\"k\">for</span><span class=\"p\">(</span><span class=\"k\">auto</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">begin</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">it</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">it</span><span class=\"p\">;</span>\n\n<span class=\"c1\">//para remover um elemento voce usa a opera\u00e7\u00e3o erase</span>\n<span class=\"c1\">//ela apaga o n\u00f3 que est\u00e1 sob o iterador e retorna o n\u00f3</span>\n<span class=\"c1\">//que ficou no lugar dele</span>\n<span class=\"n\">it</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lista</span><span class=\"p\">.</span><span class=\"n\">erase</span><span class=\"p\">(</span><span class=\"n\">it</span><span class=\"p\">);</span>\n</code></pre></div>\n\n<hr />\n<p>Testes:</p>\n<div class=\"codehilite\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n3 1\n========\n[ 1&gt; 2 3 ]\n[ 1 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n3 2\n========\n[ 1 2&gt; 3 ]\n[ 1&gt; 2 ]\n[ 1&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n3 3\n========\n[ 1 2 3&gt; ]\n[ 2&gt; 3 ]\n[ 2&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04\n6 3\n========\n[ 1 2 3&gt; 4 5 6 ]\n[ 1 2 3 5&gt; 6 ]\n[ 1&gt; 2 3 5 ]\n[ 1 3&gt; 5 ]\n[ 1&gt; 3 ]\n[ 1&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05\n9 9\n========\n[ 1 2 3 4 5 6 7 8 9&gt; ]\n[ 2&gt; 3 4 5 6 7 8 9 ]\n[ 2 4&gt; 5 6 7 8 9 ]\n[ 2 4 6&gt; 7 8 9 ]\n[ 2 4 6 8&gt; 9 ]\n[ 2&gt; 4 6 8 ]\n[ 2 6&gt; 8 ]\n[ 2&gt; 6 ]\n[ 2&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06\n20 1\n========\n[ 1&gt; 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3&gt; 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5&gt; 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7&gt; 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9&gt; 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11&gt; 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13&gt; 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15&gt; 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17&gt; 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17 19&gt; 20 ]\n[ 1&gt; 3 5 7 9 11 13 15 17 19 ]\n[ 1 5&gt; 7 9 11 13 15 17 19 ]\n[ 1 5 9&gt; 11 13 15 17 19 ]\n[ 1 5 9 13&gt; 15 17 19 ]\n[ 1 5 9 13 17&gt; 19 ]\n[ 1&gt; 5 9 13 17 ]\n[ 1 9&gt; 13 17 ]\n[ 1 9 17&gt; ]\n[ 9&gt; 17 ]\n[ 9&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n3 1\n======== EXPECT\n[ 1> 2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n3 2\n======== EXPECT\n[ 1 2> 3 ]\n[ 1> 2 ]\n[ 1> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3 3\n======== EXPECT\n[ 1 2 3> ]\n[ 2> 3 ]\n[ 2> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n6 3\n======== EXPECT\n[ 1 2 3> 4 5 6 ]\n[ 1 2 3 5> 6 ]\n[ 1> 2 3 5 ]\n[ 1 3> 5 ]\n[ 1> 3 ]\n[ 1> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n9 9\n======== EXPECT\n[ 1 2 3 4 5 6 7 8 9> ]\n[ 2> 3 4 5 6 7 8 9 ]\n[ 2 4> 5 6 7 8 9 ]\n[ 2 4 6> 7 8 9 ]\n[ 2 4 6 8> 9 ]\n[ 2> 4 6 8 ]\n[ 2 6> 8 ]\n[ 2> 6 ]\n[ 2> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n20 1\n======== EXPECT\n[ 1> 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3> 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5> 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7> 8 9 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9> 10 11 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11> 12 13 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13> 14 15 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15> 16 17 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17> 18 19 20 ]\n[ 1 3 5 7 9 11 13 15 17 19> 20 ]\n[ 1> 3 5 7 9 11 13 15 17 19 ]\n[ 1 5> 7 9 11 13 15 17 19 ]\n[ 1 5 9> 11 13 15 17 19 ]\n[ 1 5 9 13> 15 17 19 ]\n[ 1 5 9 13 17> 19 ]\n[ 1> 5 9 13 17 ]\n[ 1 9> 13 17 ]\n[ 1 9 17> ]\n[ 9> 17 ]\n[ 9> ]\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
