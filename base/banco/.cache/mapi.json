{
    "title": "@banco: Gerenciando a fila do banco",
    "description": "# Gerenciando a fila do banco\n\n![_](https://raw.githubusercontent.com/qxcodeed/arcade/master/base/banco/cover.jpg)\n\nNeste trabalho, n\u00f3s simularemos o atendimento em um banco. O nosso banco tem clientes que est\u00e3o sendo atendidos no caixa, clientes na espera na fila e clientes na fila de sa\u00edda. Cada cliente tem um n\u00edvel de paci\u00eancia (quantidade de tempo que ele pode esperar na fila) e uma quantidade de documentos a serem processados no caixa.\n\n## Guia\n\nVoc\u00ea deve implementar o seguinte c\u00f3digo seguindo as instru\u00e7\u00f5es em cada fun\u00e7\u00e3o. Observe que v\u00e1rias fun\u00e7\u00f5es j\u00e1 est\u00e3o implementadas. Voc\u00ea pode criar m\u00e9todos auxiliares se precisar. Se atente a implementar onde est\u00e1 com o `{ ... }`.\n\n<!--FILTER solver.cpp cpp-->\n```cpp\nstruct Client {\n    string name {\"\"};\n    int docs {0};\n    int patience { 0 };\n    Client(string name, int docs, int patience) { ... }\n    string str() { ... }\n};\n\nstruct Bank {\n    vector<Client*> tellers;    //caixas\n    list<Client*> queue_in;     //fila de entrada\n    list<Client*> queue_out;    //fila de saida\n    int docs_gain {0};          //documentos processados\n    int docs_lost {0};          //documentos perdidos\n    int tics {0};               //quantidade de tempo que passou\n\n    //  Roda o algoritmo de passagem de tempo\n    void tic() {\n        tics++;\n        empty_queue_out();\n        for (int i = 0; i < (int) tellers.size(); i++)\n            process_teller(i);\n        decrease_patience();\n    }\n\n    //  iniciliza os caixas com um vetor de nulls\n    Bank(int teller_size) { ... }\n\n    // deleta qualquer cliente que tenha sobrado no banco\n    ~Bank() { ... }\n\n    //  cria o cliente e insere na fila de entrada\n    void arrive(std::string name, int docs, int patience) { ... }\n\n    //  esta vazio se n\u00e3o tem ningu\u00e9m no banco\n    bool empty() { ... }\n\n    //  Retirar todos os clientes da fila de sa\u00edda\n    //\n    //  para cada cliente da fila de saida, \n    //      this->docs_lost incrementa dos documentos n\u00e3o processado\n    //      chame o delete para cada um deles\n    void empty_queue_out() { ... }\n\n    //  Processar caixa\n    //\n    //  se o caixa tem algum cliente\n    //      se o cliente do caixa tiver algum documento para processar\n    //          incrementa em um this->docs_gain\n    //          decrementa em um os documentos do cliente\n    //      sen\u00e3o\n    //          move o cliente para fila de sa\u00edda\n    //  sen\u00e3o\n    //      se tem alguem na fila de espera\n    //          move o primeiro da fila de espera para o caixa\n    void process_teller(int index) { ... }\n\n\n    //  Processar fila de entrada\n    //\n    //  para cada cliente da fila de entrada\n    //      se a paciencia dele for maior que zero\n    //          decremente em um o valor da paciencia\n    //      sen\u00e3o\n    //          mova para fila de saida\n    void decrease_patience() { ... }\n\n    //continua chamando tic at\u00e9 todos os clientes terem ido embora\n    void finish() { ... }\n\n    //gera uma string com os dados dos banco\n    std::string str() { ... }\n};\n\nint main() {\n    Bank banco(3);\n\n    while(true) {\n        string line, cmd;\n        getline(cin, line);\n        cout << \"$\" << line << \"\\n\";\n        stringstream ss(line);\n        ss >> cmd;\n        if (cmd == \"end\") {\n            break;\n        }else if (cmd == \"show\") {\n            std::cout << banco.str() << \"\\n\";\n        } else if (cmd == \"in\") {\n            string name { };\n            int docs { }, patience { };\n            ss >> name >> docs >> patience;\n            banco.arrive(name, docs, patience);\n        } else if (cmd == \"init\") {\n            int size { };\n            ss >> size;\n            banco = Bank(size);\n        } else if (cmd == \"tic\") {\n            banco.tic();\n        } else if (cmd == \"finish\") {\n            banco.finish();\n        } else {\n            cout << \"fail: command not found\\n\";\n        }\n    }\n}\n```\n<!--FILTER_END-->\n\n## Testes\n\n```bash\n#__case init\n# inicia a quantidade de caixas \n$init 3\n\n# mostra os caixas, a fila de entrada e a fila de sa\u00edda\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n\n#__case in\n# O comando 'in' adiciona um cliente na fila\n# in _nome _acoes _paciencia\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n\n\n#__case tic\n# O comando 'tic' faz passar um intervalo de tempo\n$tic\n\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n\n#__case tic2\n$tic\n\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n\n#__case tic 3\n$tic\n\n$in Fa 4 5\n\n$show\n[Ai:2:6][Bo:0:3][Ce:1:8]\nin  :{Di:3:2 Fa:4:5}\nout :{Em:3:0}\ngain:6 lost:0\n\n#__case tic 4\n$tic\n$show\n[Ai:1:6][][Ce:0:8]\nin  :{Di:3:1 Fa:4:4}\nout :{Bo:0:3}\ngain:8 lost:3\n\n$tic\n$show\n[Ai:0:6][Di:3:1][]\nin  :{Fa:4:3}\nout :{Ce:0:8}\ngain:9 lost:3\n\n#__case tic 5\n$tic\n$show\n[][Di:2:1][Fa:4:3]\nin  :{}\nout :{Ai:0:6}\ngain:10 lost:3\n\n$tic\n$show\n[][Di:1:1][Fa:3:3]\nin  :{}\nout :{}\ngain:12 lost:3\n\n$tic\n$show\n[][Di:0:1][Fa:2:3]\nin  :{}\nout :{}\ngain:14 lost:3\n\n$tic\n$show\n[][][Fa:1:3]\nin  :{}\nout :{Di:0:1}\ngain:15 lost:3\n\n$tic\n$show\n[][][Fa:0:3]\nin  :{}\nout :{}\ngain:16 lost:3\n\n$tic\n$show\n[][][]\nin  :{}\nout :{Fa:0:3}\ngain:16 lost:3\n\n$tic\n$show\n[][][]\nin  :{}\nout :{}\ngain:16 lost:3\n\n# end termina a simula\u00e7\u00e3o\n$end\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT init\ninit 3\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT in\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic2\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic 3\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\ntic\nin Fa 4 5\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$tic\n$in Fa 4 5\n$show\n[Ai:2:6][Bo:0:3][Ce:1:8]\nin  :{Di:3:2 Fa:4:5}\nout :{Em:3:0}\ngain:6 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic 4\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\ntic\nin Fa 4 5\nshow\ntic\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$tic\n$in Fa 4 5\n$show\n[Ai:2:6][Bo:0:3][Ce:1:8]\nin  :{Di:3:2 Fa:4:5}\nout :{Em:3:0}\ngain:6 lost:0\n$tic\n$show\n[Ai:1:6][][Ce:0:8]\nin  :{Di:3:1 Fa:4:4}\nout :{Bo:0:3}\ngain:8 lost:3\n$tic\n$show\n[Ai:0:6][Di:3:1][]\nin  :{Fa:4:3}\nout :{Ce:0:8}\ngain:9 lost:3\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic 5\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\ntic\nin Fa 4 5\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$tic\n$in Fa 4 5\n$show\n[Ai:2:6][Bo:0:3][Ce:1:8]\nin  :{Di:3:2 Fa:4:5}\nout :{Em:3:0}\ngain:6 lost:0\n$tic\n$show\n[Ai:1:6][][Ce:0:8]\nin  :{Di:3:1 Fa:4:4}\nout :{Bo:0:3}\ngain:8 lost:3\n$tic\n$show\n[Ai:0:6][Di:3:1][]\nin  :{Fa:4:3}\nout :{Ce:0:8}\ngain:9 lost:3\n$tic\n$show\n[][Di:2:1][Fa:4:3]\nin  :{}\nout :{Ai:0:6}\ngain:10 lost:3\n$tic\n$show\n[][Di:1:1][Fa:3:3]\nin  :{}\nout :{}\ngain:12 lost:3\n$tic\n$show\n[][Di:0:1][Fa:2:3]\nin  :{}\nout :{}\ngain:14 lost:3\n$tic\n$show\n[][][Fa:1:3]\nin  :{}\nout :{Di:0:1}\ngain:15 lost:3\n$tic\n$show\n[][][Fa:0:3]\nin  :{}\nout :{}\ngain:16 lost:3\n$tic\n$show\n[][][]\nin  :{}\nout :{Fa:0:3}\ngain:16 lost:3\n$tic\n$show\n[][][]\nin  :{}\nout :{}\ngain:16 lost:3\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
