{
    "title": "@banco: Gerenciando a fila do banco",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@banco: Gerenciando a fila do banco</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Gerenciando a fila do banco</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/banco/cover.jpg\" /></p>\n<p>Neste trabalho, n\u00f3s simularemos o atendimento em um banco. O nosso banco tem clientes que est\u00e3o sendo atendidos no caixa, clientes na espera na fila e clientes na fila de sa\u00edda. Cada cliente tem um n\u00edvel de paci\u00eancia (quantidade de tempo que ele pode esperar na fila) e uma quantidade de documentos a serem processados no caixa.</p>\n<h2>Guia</h2>\n<p>Voc\u00ea deve implementar o seguinte c\u00f3digo seguindo as instru\u00e7\u00f5es em cada fun\u00e7\u00e3o. Observe que v\u00e1rias fun\u00e7\u00f5es j\u00e1 est\u00e3o implementadas. Voc\u00ea pode criar m\u00e9todos auxiliares se precisar. Se atente a implementar onde est\u00e1 com o <code>{ ... }</code>.</p>\n<!--FILTER solver.cpp cpp-->\n<div class=\"language-cpp highlight\"><pre><span></span><code><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Client</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"s\">&quot;&quot;</span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">docs</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">patience</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">docs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">patience</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Bank</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">Client</span><span class=\"o\">*&gt;</span><span class=\"w\"> </span><span class=\"n\">tellers</span><span class=\"p\">;</span><span class=\"w\">    </span><span class=\"c1\">//caixas</span>\n<span class=\"w\">    </span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"n\">Client</span><span class=\"o\">*&gt;</span><span class=\"w\"> </span><span class=\"n\">queue_in</span><span class=\"p\">;</span><span class=\"w\">     </span><span class=\"c1\">//fila de entrada</span>\n<span class=\"w\">    </span><span class=\"n\">list</span><span class=\"o\">&lt;</span><span class=\"n\">Client</span><span class=\"o\">*&gt;</span><span class=\"w\"> </span><span class=\"n\">queue_out</span><span class=\"p\">;</span><span class=\"w\">    </span><span class=\"c1\">//fila de saida</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">docs_gain</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">};</span><span class=\"w\">          </span><span class=\"c1\">//documentos processados</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">docs_lost</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">};</span><span class=\"w\">          </span><span class=\"c1\">//documentos perdidos</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">tics</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">};</span><span class=\"w\">               </span><span class=\"c1\">//quantidade de tempo que passou</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//  Roda o algoritmo de passagem de tempo</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">tic</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">tics</span><span class=\"o\">++</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">empty_queue_out</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">tellers</span><span class=\"p\">.</span><span class=\"n\">size</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"n\">process_teller</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">decrease_patience</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//  iniciliza os caixas com um vetor de nulls</span>\n<span class=\"w\">    </span><span class=\"n\">Bank</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">teller_size</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// deleta qualquer cliente que tenha sobrado no banco</span>\n<span class=\"w\">    </span><span class=\"o\">~</span><span class=\"n\">Bank</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//  cria o cliente e insere na fila de entrada</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">arrive</span><span class=\"p\">(</span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">docs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">patience</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//  esta vazio se n\u00e3o tem ningu\u00e9m no banco</span>\n<span class=\"w\">    </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"n\">empty</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//  Retirar todos os clientes da fila de sa\u00edda</span>\n<span class=\"w\">    </span><span class=\"c1\">//</span>\n<span class=\"w\">    </span><span class=\"c1\">//  para cada cliente da fila de saida, </span>\n<span class=\"w\">    </span><span class=\"c1\">//      this-&gt;docs_lost incrementa dos documentos n\u00e3o processado</span>\n<span class=\"w\">    </span><span class=\"c1\">//      chame o delete para cada um deles</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">empty_queue_out</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//  Processar caixa</span>\n<span class=\"w\">    </span><span class=\"c1\">//</span>\n<span class=\"w\">    </span><span class=\"c1\">//  se o caixa tem algum cliente</span>\n<span class=\"w\">    </span><span class=\"c1\">//      se o cliente do caixa tiver algum documento para processar</span>\n<span class=\"w\">    </span><span class=\"c1\">//          incrementa em um this-&gt;docs_gain</span>\n<span class=\"w\">    </span><span class=\"c1\">//          decrementa em um os documentos do cliente</span>\n<span class=\"w\">    </span><span class=\"c1\">//      sen\u00e3o</span>\n<span class=\"w\">    </span><span class=\"c1\">//          move o cliente para fila de sa\u00edda</span>\n<span class=\"w\">    </span><span class=\"c1\">//  sen\u00e3o</span>\n<span class=\"w\">    </span><span class=\"c1\">//      se tem alguem na fila de espera</span>\n<span class=\"w\">    </span><span class=\"c1\">//          move o primeiro da fila de espera para o caixa</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">process_teller</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">index</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n\n<span class=\"w\">    </span><span class=\"c1\">//  Processar fila de entrada</span>\n<span class=\"w\">    </span><span class=\"c1\">//</span>\n<span class=\"w\">    </span><span class=\"c1\">//  para cada cliente da fila de entrada</span>\n<span class=\"w\">    </span><span class=\"c1\">//      se a paciencia dele for maior que zero</span>\n<span class=\"w\">    </span><span class=\"c1\">//          decremente em um o valor da paciencia</span>\n<span class=\"w\">    </span><span class=\"c1\">//      sen\u00e3o</span>\n<span class=\"w\">    </span><span class=\"c1\">//          mova para fila de saida</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">decrease_patience</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//continua chamando tic at\u00e9 todos os clientes terem ido embora</span>\n<span class=\"w\">    </span><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"n\">finish</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//gera uma string com os dados dos banco</span>\n<span class=\"w\">    </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">str</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">...</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"p\">};</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">Bank</span><span class=\"w\"> </span><span class=\"n\">banco</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cmd</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">getline</span><span class=\"p\">(</span><span class=\"n\">cin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;$&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">stringstream</span><span class=\"w\"> </span><span class=\"n\">ss</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">cmd</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;end&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;show&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">std</span><span class=\"o\">::</span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">banco</span><span class=\"p\">.</span><span class=\"n\">str</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;in&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">docs</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"n\">patience</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">            </span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">docs</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">patience</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">banco</span><span class=\"p\">.</span><span class=\"n\">arrive</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">docs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">patience</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;init&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">            </span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"n\">banco</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Bank</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;tic&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">banco</span><span class=\"p\">.</span><span class=\"n\">tic</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;finish&quot;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">banco</span><span class=\"p\">.</span><span class=\"n\">finish</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;fail: command not found</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<!--FILTER_END-->\n\n<h2>Testes</h2>\n<div class=\"language-bash highlight\"><pre><span></span><code><span class=\"c1\">#__case init</span>\n<span class=\"c1\"># inicia a quantidade de caixas </span>\n<span class=\"nv\">$init</span><span class=\"w\"> </span><span class=\"m\">3</span>\n\n<span class=\"c1\"># mostra os caixas, a fila de entrada e a fila de sa\u00edda</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][][]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:0<span class=\"w\"> </span>lost:0\n\n<span class=\"c1\">#__case in</span>\n<span class=\"c1\"># O comando &#39;in&#39; adiciona um cliente na fila</span>\n<span class=\"c1\"># in _nome _acoes _paciencia</span>\n<span class=\"nv\">$in</span><span class=\"w\"> </span>Ai<span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"m\">6</span>\n<span class=\"nv\">$in</span><span class=\"w\"> </span>Bo<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"m\">3</span>\n<span class=\"nv\">$in</span><span class=\"w\"> </span>Ce<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">8</span>\n<span class=\"nv\">$in</span><span class=\"w\"> </span>Di<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">5</span>\n<span class=\"nv\">$in</span><span class=\"w\"> </span>Em<span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">2</span>\n\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][][]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{</span>Ai:4:6<span class=\"w\"> </span>Bo:2:3<span class=\"w\"> </span>Ce:3:8<span class=\"w\"> </span>Di:3:5<span class=\"w\"> </span>Em:3:2<span class=\"o\">}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:0<span class=\"w\"> </span>lost:0\n\n\n<span class=\"c1\">#__case tic</span>\n<span class=\"c1\"># O comando &#39;tic&#39; faz passar um intervalo de tempo</span>\n<span class=\"nv\">$tic</span>\n\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span>Ai:4:6<span class=\"o\">][</span>Bo:2:3<span class=\"o\">][</span>Ce:3:8<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{</span>Di:3:4<span class=\"w\"> </span>Em:3:1<span class=\"o\">}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:0<span class=\"w\"> </span>lost:0\n\n<span class=\"c1\">#__case tic2</span>\n<span class=\"nv\">$tic</span>\n\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span>Ai:3:6<span class=\"o\">][</span>Bo:1:3<span class=\"o\">][</span>Ce:2:8<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{</span>Di:3:3<span class=\"w\"> </span>Em:3:0<span class=\"o\">}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:3<span class=\"w\"> </span>lost:0\n\n<span class=\"c1\">#__case tic 3</span>\n<span class=\"nv\">$tic</span>\n\n<span class=\"nv\">$in</span><span class=\"w\"> </span>Fa<span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"m\">5</span>\n\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span>Ai:2:6<span class=\"o\">][</span>Bo:0:3<span class=\"o\">][</span>Ce:1:8<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{</span>Di:3:2<span class=\"w\"> </span>Fa:4:5<span class=\"o\">}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{</span>Em:3:0<span class=\"o\">}</span>\ngain:6<span class=\"w\"> </span>lost:0\n\n<span class=\"c1\">#__case tic 4</span>\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span>Ai:1:6<span class=\"o\">][][</span>Ce:0:8<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{</span>Di:3:1<span class=\"w\"> </span>Fa:4:4<span class=\"o\">}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{</span>Bo:0:3<span class=\"o\">}</span>\ngain:8<span class=\"w\"> </span>lost:3\n\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span>Ai:0:6<span class=\"o\">][</span>Di:3:1<span class=\"o\">][]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{</span>Fa:4:3<span class=\"o\">}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{</span>Ce:0:8<span class=\"o\">}</span>\ngain:9<span class=\"w\"> </span>lost:3\n\n<span class=\"c1\">#__case tic 5</span>\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][</span>Di:2:1<span class=\"o\">][</span>Fa:4:3<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{</span>Ai:0:6<span class=\"o\">}</span>\ngain:10<span class=\"w\"> </span>lost:3\n\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][</span>Di:1:1<span class=\"o\">][</span>Fa:3:3<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:12<span class=\"w\"> </span>lost:3\n\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][</span>Di:0:1<span class=\"o\">][</span>Fa:2:3<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:14<span class=\"w\"> </span>lost:3\n\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][][</span>Fa:1:3<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{</span>Di:0:1<span class=\"o\">}</span>\ngain:15<span class=\"w\"> </span>lost:3\n\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][][</span>Fa:0:3<span class=\"o\">]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:16<span class=\"w\"> </span>lost:3\n\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][][]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{</span>Fa:0:3<span class=\"o\">}</span>\ngain:16<span class=\"w\"> </span>lost:3\n\n<span class=\"nv\">$tic</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[][][]</span>\n<span class=\"k\">in</span><span class=\"w\">  </span>:<span class=\"o\">{}</span>\nout<span class=\"w\"> </span>:<span class=\"o\">{}</span>\ngain:16<span class=\"w\"> </span>lost:3\n\n<span class=\"c1\"># end termina a simula\u00e7\u00e3o</span>\n<span class=\"nv\">$end</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT init\ninit 3\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT in\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic2\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic 3\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\ntic\nin Fa 4 5\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$tic\n$in Fa 4 5\n$show\n[Ai:2:6][Bo:0:3][Ce:1:8]\nin  :{Di:3:2 Fa:4:5}\nout :{Em:3:0}\ngain:6 lost:0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic 4\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\ntic\nin Fa 4 5\nshow\ntic\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$tic\n$in Fa 4 5\n$show\n[Ai:2:6][Bo:0:3][Ce:1:8]\nin  :{Di:3:2 Fa:4:5}\nout :{Em:3:0}\ngain:6 lost:0\n$tic\n$show\n[Ai:1:6][][Ce:0:8]\nin  :{Di:3:1 Fa:4:4}\nout :{Bo:0:3}\ngain:8 lost:3\n$tic\n$show\n[Ai:0:6][Di:3:1][]\nin  :{Fa:4:3}\nout :{Ce:0:8}\ngain:9 lost:3\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tic 5\ninit 3\nshow\nin Ai 4 6\nin Bo 2 3\nin Ce 3 8\nin Di 3 5\nin Em 3 2\nshow\ntic\nshow\ntic\nshow\ntic\nin Fa 4 5\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\ntic\nshow\nend\n======== EXPECT\n$init 3\n$show\n[][][]\nin  :{}\nout :{}\ngain:0 lost:0\n$in Ai 4 6\n$in Bo 2 3\n$in Ce 3 8\n$in Di 3 5\n$in Em 3 2\n$show\n[][][]\nin  :{Ai:4:6 Bo:2:3 Ce:3:8 Di:3:5 Em:3:2}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:4:6][Bo:2:3][Ce:3:8]\nin  :{Di:3:4 Em:3:1}\nout :{}\ngain:0 lost:0\n$tic\n$show\n[Ai:3:6][Bo:1:3][Ce:2:8]\nin  :{Di:3:3 Em:3:0}\nout :{}\ngain:3 lost:0\n$tic\n$in Fa 4 5\n$show\n[Ai:2:6][Bo:0:3][Ce:1:8]\nin  :{Di:3:2 Fa:4:5}\nout :{Em:3:0}\ngain:6 lost:0\n$tic\n$show\n[Ai:1:6][][Ce:0:8]\nin  :{Di:3:1 Fa:4:4}\nout :{Bo:0:3}\ngain:8 lost:3\n$tic\n$show\n[Ai:0:6][Di:3:1][]\nin  :{Fa:4:3}\nout :{Ce:0:8}\ngain:9 lost:3\n$tic\n$show\n[][Di:2:1][Fa:4:3]\nin  :{}\nout :{Ai:0:6}\ngain:10 lost:3\n$tic\n$show\n[][Di:1:1][Fa:3:3]\nin  :{}\nout :{}\ngain:12 lost:3\n$tic\n$show\n[][Di:0:1][Fa:2:3]\nin  :{}\nout :{}\ngain:14 lost:3\n$tic\n$show\n[][][Fa:1:3]\nin  :{}\nout :{Di:0:1}\ngain:15 lost:3\n$tic\n$show\n[][][Fa:0:3]\nin  :{}\nout :{}\ngain:16 lost:3\n$tic\n$show\n[][][]\nin  :{}\nout :{Fa:0:3}\ngain:16 lost:3\n$tic\n$show\n[][][]\nin  :{}\nout :{}\ngain:16 lost:3\n$end\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
