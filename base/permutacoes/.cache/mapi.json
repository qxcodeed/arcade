{
    "title": "@permutacoes: Permutando coisas",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@permutacoes: Permutando coisas</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Permutando coisas</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/permutacoes/cover.jpg\" /></p>\n<p>O problema de <strong>Permuta\u00e7\u00f5es</strong> consiste em listar <strong>todas as permuta\u00e7\u00f5es distintas</strong> de uma <em>string de caracteres</em>.</p>\n<p>Por exemplo, para a palavra <code>\"abc\"</code>, as permuta\u00e7\u00f5es s\u00e3o:</p>\n<p><code>[abc, acb, bac, bca, cab, cba]</code></p>\n<h2>Entrada</h2>\n<p>A entrada consiste em uma \u00fanica string com at\u00e9 <code>6</code> caracteres (sem espa\u00e7os):</p>\n<ul>\n<li><code>s</code> \u2014 string de entrada<br />\n<code>1 \u2264 |s| \u2264 6</code><br />\n  Os caracteres s\u00e3o \u00fanicos.</li>\n</ul>\n<h2>Sa\u00edda</h2>\n<ul>\n<li>Uma lista com <strong>todas as permuta\u00e7\u00f5es distintas</strong> da string de entrada, <strong>ordenadas lexicograficamente</strong>, uma por linha.</li>\n</ul>\n<hr />\n<p><strong>Voc\u00ea pode ver sobre ordem lexicogr\u00e1fica <a href=\"https://en.wikipedia.org/wiki/Lexicographic_order\">aqui</a>.</strong></p>\n<p><strong>Dica:</strong> coloque todas as permuta\u00e7\u00f5es <strong>em um array</strong>, e depois <strong>ordene o array</strong> para garantir a ordem lexicogr\u00e1fica na sa\u00edda.</p>\n<h3>Exemplo</h3>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nabc\n========\nabc\nacb\nbac\nbca\ncab\ncba\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\nab\n========\nab\nba\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\nabc\n======== EXPECT\nabc\nacb\nbac\nbca\ncab\ncba\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nab\n======== EXPECT\nab\nba\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nabcd\n======== EXPECT\nabcd\nabdc\nacbd\nacdb\nadbc\nadcb\nbacd\nbadc\nbcad\nbcda\nbdac\nbdca\ncabd\ncadb\ncbad\ncbda\ncdab\ncdba\ndabc\ndacb\ndbac\ndbca\ndcab\ndcba\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\na\n======== EXPECT\na\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1a2\n======== EXPECT\n12a\n1a2\n21a\n2a1\na12\na21\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nabc12\n======== EXPECT\n12abc\n12acb\n12bac\n12bca\n12cab\n12cba\n1a2bc\n1a2cb\n1ab2c\n1abc2\n1ac2b\n1acb2\n1b2ac\n1b2ca\n1ba2c\n1bac2\n1bc2a\n1bca2\n1c2ab\n1c2ba\n1ca2b\n1cab2\n1cb2a\n1cba2\n21abc\n21acb\n21bac\n21bca\n21cab\n21cba\n2a1bc\n2a1cb\n2ab1c\n2abc1\n2ac1b\n2acb1\n2b1ac\n2b1ca\n2ba1c\n2bac1\n2bc1a\n2bca1\n2c1ab\n2c1ba\n2ca1b\n2cab1\n2cb1a\n2cba1\na12bc\na12cb\na1b2c\na1bc2\na1c2b\na1cb2\na21bc\na21cb\na2b1c\na2bc1\na2c1b\na2cb1\nab12c\nab1c2\nab21c\nab2c1\nabc12\nabc21\nac12b\nac1b2\nac21b\nac2b1\nacb12\nacb21\nb12ac\nb12ca\nb1a2c\nb1ac2\nb1c2a\nb1ca2\nb21ac\nb21ca\nb2a1c\nb2ac1\nb2c1a\nb2ca1\nba12c\nba1c2\nba21c\nba2c1\nbac12\nbac21\nbc12a\nbc1a2\nbc21a\nbc2a1\nbca12\nbca21\nc12ab\nc12ba\nc1a2b\nc1ab2\nc1b2a\nc1ba2\nc21ab\nc21ba\nc2a1b\nc2ab1\nc2b1a\nc2ba1\nca12b\nca1b2\nca21b\nca2b1\ncab12\ncab21\ncb12a\ncb1a2\ncb21a\ncb2a1\ncba12\ncba21\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\na1B2C3\n======== EXPECT\n123BCa\n123BaC\n123CBa\n123CaB\n123aBC\n123aCB\n12B3Ca\n12B3aC\n12BC3a\n12BCa3\n12Ba3C\n12BaC3\n12C3Ba\n12C3aB\n12CB3a\n12CBa3\n12Ca3B\n12CaB3\n12a3BC\n12a3CB\n12aB3C\n12aBC3\n12aC3B\n12aCB3\n132BCa\n132BaC\n132CBa\n132CaB\n132aBC\n132aCB\n13B2Ca\n13B2aC\n13BC2a\n13BCa2\n13Ba2C\n13BaC2\n13C2Ba\n13C2aB\n13CB2a\n13CBa2\n13Ca2B\n13CaB2\n13a2BC\n13a2CB\n13aB2C\n13aBC2\n13aC2B\n13aCB2\n1B23Ca\n1B23aC\n1B2C3a\n1B2Ca3\n1B2a3C\n1B2aC3\n1B32Ca\n1B32aC\n1B3C2a\n1B3Ca2\n1B3a2C\n1B3aC2\n1BC23a\n1BC2a3\n1BC32a\n1BC3a2\n1BCa23\n1BCa32\n1Ba23C\n1Ba2C3\n1Ba32C\n1Ba3C2\n1BaC23\n1BaC32\n1C23Ba\n1C23aB\n1C2B3a\n1C2Ba3\n1C2a3B\n1C2aB3\n1C32Ba\n1C32aB\n1C3B2a\n1C3Ba2\n1C3a2B\n1C3aB2\n1CB23a\n1CB2a3\n1CB32a\n1CB3a2\n1CBa23\n1CBa32\n1Ca23B\n1Ca2B3\n1Ca32B\n1Ca3B2\n1CaB23\n1CaB32\n1a23BC\n1a23CB\n1a2B3C\n1a2BC3\n1a2C3B\n1a2CB3\n1a32BC\n1a32CB\n1a3B2C\n1a3BC2\n1a3C2B\n1a3CB2\n1aB23C\n1aB2C3\n1aB32C\n1aB3C2\n1aBC23\n1aBC32\n1aC23B\n1aC2B3\n1aC32B\n1aC3B2\n1aCB23\n1aCB32\n213BCa\n213BaC\n213CBa\n213CaB\n213aBC\n213aCB\n21B3Ca\n21B3aC\n21BC3a\n21BCa3\n21Ba3C\n21BaC3\n21C3Ba\n21C3aB\n21CB3a\n21CBa3\n21Ca3B\n21CaB3\n21a3BC\n21a3CB\n21aB3C\n21aBC3\n21aC3B\n21aCB3\n231BCa\n231BaC\n231CBa\n231CaB\n231aBC\n231aCB\n23B1Ca\n23B1aC\n23BC1a\n23BCa1\n23Ba1C\n23BaC1\n23C1Ba\n23C1aB\n23CB1a\n23CBa1\n23Ca1B\n23CaB1\n23a1BC\n23a1CB\n23aB1C\n23aBC1\n23aC1B\n23aCB1\n2B13Ca\n2B13aC\n2B1C3a\n2B1Ca3\n2B1a3C\n2B1aC3\n2B31Ca\n2B31aC\n2B3C1a\n2B3Ca1\n2B3a1C\n2B3aC1\n2BC13a\n2BC1a3\n2BC31a\n2BC3a1\n2BCa13\n2BCa31\n2Ba13C\n2Ba1C3\n2Ba31C\n2Ba3C1\n2BaC13\n2BaC31\n2C13Ba\n2C13aB\n2C1B3a\n2C1Ba3\n2C1a3B\n2C1aB3\n2C31Ba\n2C31aB\n2C3B1a\n2C3Ba1\n2C3a1B\n2C3aB1\n2CB13a\n2CB1a3\n2CB31a\n2CB3a1\n2CBa13\n2CBa31\n2Ca13B\n2Ca1B3\n2Ca31B\n2Ca3B1\n2CaB13\n2CaB31\n2a13BC\n2a13CB\n2a1B3C\n2a1BC3\n2a1C3B\n2a1CB3\n2a31BC\n2a31CB\n2a3B1C\n2a3BC1\n2a3C1B\n2a3CB1\n2aB13C\n2aB1C3\n2aB31C\n2aB3C1\n2aBC13\n2aBC31\n2aC13B\n2aC1B3\n2aC31B\n2aC3B1\n2aCB13\n2aCB31\n312BCa\n312BaC\n312CBa\n312CaB\n312aBC\n312aCB\n31B2Ca\n31B2aC\n31BC2a\n31BCa2\n31Ba2C\n31BaC2\n31C2Ba\n31C2aB\n31CB2a\n31CBa2\n31Ca2B\n31CaB2\n31a2BC\n31a2CB\n31aB2C\n31aBC2\n31aC2B\n31aCB2\n321BCa\n321BaC\n321CBa\n321CaB\n321aBC\n321aCB\n32B1Ca\n32B1aC\n32BC1a\n32BCa1\n32Ba1C\n32BaC1\n32C1Ba\n32C1aB\n32CB1a\n32CBa1\n32Ca1B\n32CaB1\n32a1BC\n32a1CB\n32aB1C\n32aBC1\n32aC1B\n32aCB1\n3B12Ca\n3B12aC\n3B1C2a\n3B1Ca2\n3B1a2C\n3B1aC2\n3B21Ca\n3B21aC\n3B2C1a\n3B2Ca1\n3B2a1C\n3B2aC1\n3BC12a\n3BC1a2\n3BC21a\n3BC2a1\n3BCa12\n3BCa21\n3Ba12C\n3Ba1C2\n3Ba21C\n3Ba2C1\n3BaC12\n3BaC21\n3C12Ba\n3C12aB\n3C1B2a\n3C1Ba2\n3C1a2B\n3C1aB2\n3C21Ba\n3C21aB\n3C2B1a\n3C2Ba1\n3C2a1B\n3C2aB1\n3CB12a\n3CB1a2\n3CB21a\n3CB2a1\n3CBa12\n3CBa21\n3Ca12B\n3Ca1B2\n3Ca21B\n3Ca2B1\n3CaB12\n3CaB21\n3a12BC\n3a12CB\n3a1B2C\n3a1BC2\n3a1C2B\n3a1CB2\n3a21BC\n3a21CB\n3a2B1C\n3a2BC1\n3a2C1B\n3a2CB1\n3aB12C\n3aB1C2\n3aB21C\n3aB2C1\n3aBC12\n3aBC21\n3aC12B\n3aC1B2\n3aC21B\n3aC2B1\n3aCB12\n3aCB21\nB123Ca\nB123aC\nB12C3a\nB12Ca3\nB12a3C\nB12aC3\nB132Ca\nB132aC\nB13C2a\nB13Ca2\nB13a2C\nB13aC2\nB1C23a\nB1C2a3\nB1C32a\nB1C3a2\nB1Ca23\nB1Ca32\nB1a23C\nB1a2C3\nB1a32C\nB1a3C2\nB1aC23\nB1aC32\nB213Ca\nB213aC\nB21C3a\nB21Ca3\nB21a3C\nB21aC3\nB231Ca\nB231aC\nB23C1a\nB23Ca1\nB23a1C\nB23aC1\nB2C13a\nB2C1a3\nB2C31a\nB2C3a1\nB2Ca13\nB2Ca31\nB2a13C\nB2a1C3\nB2a31C\nB2a3C1\nB2aC13\nB2aC31\nB312Ca\nB312aC\nB31C2a\nB31Ca2\nB31a2C\nB31aC2\nB321Ca\nB321aC\nB32C1a\nB32Ca1\nB32a1C\nB32aC1\nB3C12a\nB3C1a2\nB3C21a\nB3C2a1\nB3Ca12\nB3Ca21\nB3a12C\nB3a1C2\nB3a21C\nB3a2C1\nB3aC12\nB3aC21\nBC123a\nBC12a3\nBC132a\nBC13a2\nBC1a23\nBC1a32\nBC213a\nBC21a3\nBC231a\nBC23a1\nBC2a13\nBC2a31\nBC312a\nBC31a2\nBC321a\nBC32a1\nBC3a12\nBC3a21\nBCa123\nBCa132\nBCa213\nBCa231\nBCa312\nBCa321\nBa123C\nBa12C3\nBa132C\nBa13C2\nBa1C23\nBa1C32\nBa213C\nBa21C3\nBa231C\nBa23C1\nBa2C13\nBa2C31\nBa312C\nBa31C2\nBa321C\nBa32C1\nBa3C12\nBa3C21\nBaC123\nBaC132\nBaC213\nBaC231\nBaC312\nBaC321\nC123Ba\nC123aB\nC12B3a\nC12Ba3\nC12a3B\nC12aB3\nC132Ba\nC132aB\nC13B2a\nC13Ba2\nC13a2B\nC13aB2\nC1B23a\nC1B2a3\nC1B32a\nC1B3a2\nC1Ba23\nC1Ba32\nC1a23B\nC1a2B3\nC1a32B\nC1a3B2\nC1aB23\nC1aB32\nC213Ba\nC213aB\nC21B3a\nC21Ba3\nC21a3B\nC21aB3\nC231Ba\nC231aB\nC23B1a\nC23Ba1\nC23a1B\nC23aB1\nC2B13a\nC2B1a3\nC2B31a\nC2B3a1\nC2Ba13\nC2Ba31\nC2a13B\nC2a1B3\nC2a31B\nC2a3B1\nC2aB13\nC2aB31\nC312Ba\nC312aB\nC31B2a\nC31Ba2\nC31a2B\nC31aB2\nC321Ba\nC321aB\nC32B1a\nC32Ba1\nC32a1B\nC32aB1\nC3B12a\nC3B1a2\nC3B21a\nC3B2a1\nC3Ba12\nC3Ba21\nC3a12B\nC3a1B2\nC3a21B\nC3a2B1\nC3aB12\nC3aB21\nCB123a\nCB12a3\nCB132a\nCB13a2\nCB1a23\nCB1a32\nCB213a\nCB21a3\nCB231a\nCB23a1\nCB2a13\nCB2a31\nCB312a\nCB31a2\nCB321a\nCB32a1\nCB3a12\nCB3a21\nCBa123\nCBa132\nCBa213\nCBa231\nCBa312\nCBa321\nCa123B\nCa12B3\nCa132B\nCa13B2\nCa1B23\nCa1B32\nCa213B\nCa21B3\nCa231B\nCa23B1\nCa2B13\nCa2B31\nCa312B\nCa31B2\nCa321B\nCa32B1\nCa3B12\nCa3B21\nCaB123\nCaB132\nCaB213\nCaB231\nCaB312\nCaB321\na123BC\na123CB\na12B3C\na12BC3\na12C3B\na12CB3\na132BC\na132CB\na13B2C\na13BC2\na13C2B\na13CB2\na1B23C\na1B2C3\na1B32C\na1B3C2\na1BC23\na1BC32\na1C23B\na1C2B3\na1C32B\na1C3B2\na1CB23\na1CB32\na213BC\na213CB\na21B3C\na21BC3\na21C3B\na21CB3\na231BC\na231CB\na23B1C\na23BC1\na23C1B\na23CB1\na2B13C\na2B1C3\na2B31C\na2B3C1\na2BC13\na2BC31\na2C13B\na2C1B3\na2C31B\na2C3B1\na2CB13\na2CB31\na312BC\na312CB\na31B2C\na31BC2\na31C2B\na31CB2\na321BC\na321CB\na32B1C\na32BC1\na32C1B\na32CB1\na3B12C\na3B1C2\na3B21C\na3B2C1\na3BC12\na3BC21\na3C12B\na3C1B2\na3C21B\na3C2B1\na3CB12\na3CB21\naB123C\naB12C3\naB132C\naB13C2\naB1C23\naB1C32\naB213C\naB21C3\naB231C\naB23C1\naB2C13\naB2C31\naB312C\naB31C2\naB321C\naB32C1\naB3C12\naB3C21\naBC123\naBC132\naBC213\naBC231\naBC312\naBC321\naC123B\naC12B3\naC132B\naC13B2\naC1B23\naC1B32\naC213B\naC21B3\naC231B\naC23B1\naC2B13\naC2B31\naC312B\naC31B2\naC321B\naC32B1\naC3B12\naC3B21\naCB123\naCB132\naCB213\naCB231\naCB312\naCB321\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n\nint main() {\n\n    return 0;\n}\n",
                "type": "show"
            }
        ]
    }
}
