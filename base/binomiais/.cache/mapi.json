{
    "title": "L0 - @binomiais - Calculando coeficientes",
    "description": "<h1 id=\"l0-binomiais-calculando-coeficientes\">L0 - @binomiais - Calculando coeficientes</h1>\n<p>Os coeficientes binomiais s\u00e3o muito importantes para a resolu\u00e7\u00e3o de v\u00e1rios problemas de contagem. Por exemplo,</p>\n<p><code>C(n,k)</code> representa o n\u00famero de maneiras de escolher <code>k</code> elementos de um conjunto de n elementos.</p>\n<p><code>C(n + k - 1,k)</code> representa o n\u00famero de maneiras de escolher <code>k</code> elementos de um conjunto de n elementos se repeti\u00e7\u00f5es s\u00e3o permitidas.</p>\n<p>Os coeficientes binomiais podem ser definidos usando a seguinte recurs\u00e3o:</p>\n<p><img src=\"https://latex.codecogs.com/svg.latex?C(n,k) = \\begin{cases}1& ,k=0\\\\\n1 & ,k=n\\\\ C(n-1,k-1) + C(n-1, k)&,   1\\leq k \\leq n-1\\end{cases}\"></p>\n<p>Sua tarefa \u00e9 dado dois inteiros n e k, calcula C(n,k).</p>\n<h2 id=\"entrada\">Entrada</h2>\n<p>A primeira linha contendo dois inteiros n e k.</p>\n<h2 id=\"saida\">Sa\u00edda</h2>\n<p>Imprima uma linha contendo C(n,k).</p>\n<h2 id=\"exemplo-de-entrada\">Exemplo de Entrada</h2>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">8</span><span class=\"w\"> </span><span class=\"mf\">4</span>\n</code></pre></div>\n\n<h2 id=\"exemplo-de-saida\">Exemplo de Sa\u00edda</h2>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">70</span>\n</code></pre></div>\n<style>\n\npre { line-height: 125%; }\ntd.linenos .normal { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\nspan.linenos { color: inherit; background-color: transparent; padding-left: 5px; padding-right: 5px; }\ntd.linenos .special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\nspan.linenos.special { color: #000000; background-color: #ffffc0; padding-left: 5px; padding-right: 5px; }\n.codehilite .hll { background-color: #ffffcc }\n.codehilite { background: #f8f8f8; }\n.codehilite .c { color: #3D7B7B; font-style: italic } /* Comment */\n.codehilite .err { border: 1px solid #FF0000 } /* Error */\n.codehilite .k { color: #008000; font-weight: bold } /* Keyword */\n.codehilite .o { color: #666666 } /* Operator */\n.codehilite .ch { color: #3D7B7B; font-style: italic } /* Comment.Hashbang */\n.codehilite .cm { color: #3D7B7B; font-style: italic } /* Comment.Multiline */\n.codehilite .cp { color: #9C6500 } /* Comment.Preproc */\n.codehilite .cpf { color: #3D7B7B; font-style: italic } /* Comment.PreprocFile */\n.codehilite .c1 { color: #3D7B7B; font-style: italic } /* Comment.Single */\n.codehilite .cs { color: #3D7B7B; font-style: italic } /* Comment.Special */\n.codehilite .gd { color: #A00000 } /* Generic.Deleted */\n.codehilite .ge { font-style: italic } /* Generic.Emph */\n.codehilite .ges { font-weight: bold; font-style: italic } /* Generic.EmphStrong */\n.codehilite .gr { color: #E40000 } /* Generic.Error */\n.codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */\n.codehilite .gi { color: #008400 } /* Generic.Inserted */\n.codehilite .go { color: #717171 } /* Generic.Output */\n.codehilite .gp { color: #000080; font-weight: bold } /* Generic.Prompt */\n.codehilite .gs { font-weight: bold } /* Generic.Strong */\n.codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */\n.codehilite .gt { color: #0044DD } /* Generic.Traceback */\n.codehilite .kc { color: #008000; font-weight: bold } /* Keyword.Constant */\n.codehilite .kd { color: #008000; font-weight: bold } /* Keyword.Declaration */\n.codehilite .kn { color: #008000; font-weight: bold } /* Keyword.Namespace */\n.codehilite .kp { color: #008000 } /* Keyword.Pseudo */\n.codehilite .kr { color: #008000; font-weight: bold } /* Keyword.Reserved */\n.codehilite .kt { color: #B00040 } /* Keyword.Type */\n.codehilite .m { color: #666666 } /* Literal.Number */\n.codehilite .s { color: #BA2121 } /* Literal.String */\n.codehilite .na { color: #687822 } /* Name.Attribute */\n.codehilite .nb { color: #008000 } /* Name.Builtin */\n.codehilite .nc { color: #0000FF; font-weight: bold } /* Name.Class */\n.codehilite .no { color: #880000 } /* Name.Constant */\n.codehilite .nd { color: #AA22FF } /* Name.Decorator */\n.codehilite .ni { color: #717171; font-weight: bold } /* Name.Entity */\n.codehilite .ne { color: #CB3F38; font-weight: bold } /* Name.Exception */\n.codehilite .nf { color: #0000FF } /* Name.Function */\n.codehilite .nl { color: #767600 } /* Name.Label */\n.codehilite .nn { color: #0000FF; font-weight: bold } /* Name.Namespace */\n.codehilite .nt { color: #008000; font-weight: bold } /* Name.Tag */\n.codehilite .nv { color: #19177C } /* Name.Variable */\n.codehilite .ow { color: #AA22FF; font-weight: bold } /* Operator.Word */\n.codehilite .w { color: #bbbbbb } /* Text.Whitespace */\n.codehilite .mb { color: #666666 } /* Literal.Number.Bin */\n.codehilite .mf { color: #666666 } /* Literal.Number.Float */\n.codehilite .mh { color: #666666 } /* Literal.Number.Hex */\n.codehilite .mi { color: #666666 } /* Literal.Number.Integer */\n.codehilite .mo { color: #666666 } /* Literal.Number.Oct */\n.codehilite .sa { color: #BA2121 } /* Literal.String.Affix */\n.codehilite .sb { color: #BA2121 } /* Literal.String.Backtick */\n.codehilite .sc { color: #BA2121 } /* Literal.String.Char */\n.codehilite .dl { color: #BA2121 } /* Literal.String.Delimiter */\n.codehilite .sd { color: #BA2121; font-style: italic } /* Literal.String.Doc */\n.codehilite .s2 { color: #BA2121 } /* Literal.String.Double */\n.codehilite .se { color: #AA5D1F; font-weight: bold } /* Literal.String.Escape */\n.codehilite .sh { color: #BA2121 } /* Literal.String.Heredoc */\n.codehilite .si { color: #A45A77; font-weight: bold } /* Literal.String.Interpol */\n.codehilite .sx { color: #008000 } /* Literal.String.Other */\n.codehilite .sr { color: #A45A77 } /* Literal.String.Regex */\n.codehilite .s1 { color: #BA2121 } /* Literal.String.Single */\n.codehilite .ss { color: #19177C } /* Literal.String.Symbol */\n.codehilite .bp { color: #008000 } /* Name.Builtin.Pseudo */\n.codehilite .fm { color: #0000FF } /* Name.Function.Magic */\n.codehilite .vc { color: #19177C } /* Name.Variable.Class */\n.codehilite .vg { color: #19177C } /* Name.Variable.Global */\n.codehilite .vi { color: #19177C } /* Name.Variable.Instance */\n.codehilite .vm { color: #19177C } /* Name.Variable.Magic */\n.codehilite .il { color: #666666 } /* Literal.Number.Integer.Long */\n\n</style>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>>\n8 1\n========\n8\n<<<<<<<<\n\n>>>>>>>>\n8 2\n========\n28\n<<<<<<<<\n\n>>>>>>>>\n8 3\n========\n56\n<<<<<<<<\n\n>>>>>>>>\n8 4\n========\n70\n<<<<<<<<\n\n>>>>>>>>\n8 5\n========\n56\n<<<<<<<<\n\n>>>>>>>>\n8 6\n========\n28\n<<<<<<<<\n\n>>>>>>>>\n8 7\n========\n8\n<<<<<<<<\n\n>>>>>>>>\n7 2\n========\n21\n<<<<<<<<\n\n>>>>>>>>\n7 3\n========\n35\n<<<<<<<<\n\n>>>>>>>>\n7 4\n========\n35\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
