{
    "title": "@ponteiros: Implementando vector com ponteiros",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@ponteiros: Implementando vector com ponteiros</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@ponteiros: Implementando vector com ponteiros</h1>\n            <h1 id=\"implementando-vector-com-ponteiros\">Implementando vector com ponteiros</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/ponteiros/cover.jpg\" /></p>\n<p>Implemente as seguintes fun\u00e7\u00f5es do vetor din\u00e2mico.</p>\n<ul>\n<li>Ele deve ser iniciado utilizando aloca\u00e7\u00e3o din\u00e2mica e conter al\u00e9m do vetor de dados, <code>size</code> e <code>capacity</code> que definem o tamanho atual e a capacidade do vetor.</li>\n<li>Verifique no final utilizando o valgrind se voc\u00ea desalocou corrretamente todos os blocos de mem\u00f3ria.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">#__case create</span>\n<span class=\"nv\">$init</span><span class=\"w\"> </span><span class=\"m\">3</span>\n<span class=\"nv\">$status</span>\nsize:0<span class=\"w\"> </span>capacity:3\n<span class=\"nv\">$end</span>\n</code></pre></div>\n\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\">#__case add</span>\n<span class=\"nv\">$init</span><span class=\"w\"> </span><span class=\"m\">5</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span><span class=\"w\"> </span><span class=\"o\">]</span>\n<span class=\"nv\">$add</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"o\">]</span>\n<span class=\"c1\">#__case tentar estourar</span>\n\n<span class=\"nv\">$add</span><span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"nv\">$show</span>\n<span class=\"o\">[</span><span class=\"w\"> </span><span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">4</span><span class=\"w\"> </span><span class=\"m\">5</span><span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">7</span><span class=\"w\"> </span><span class=\"o\">]</span>\n<span class=\"nv\">$end</span>\n</code></pre></div>\n\n<h2 id=\"codigo-base\">C\u00f3digo Base</h2>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;iostream&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sstream&gt;</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"k\">namespace</span><span class=\"w\"> </span><span class=\"nn\">std</span><span class=\"p\">;</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Vector</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">capacity</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"n\">Vector</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nf\">vector_create</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">capacity</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">//crie um vetor din\u00e2micamente</span>\n<span class=\"w\">    </span><span class=\"c1\">//cria a struct</span>\n<span class=\"w\">    </span><span class=\"c1\">//crie o vetor data</span>\n<span class=\"w\">    </span><span class=\"c1\">//inicialize size e capacity</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">vector_destroy</span><span class=\"p\">(</span><span class=\"n\">Vector</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">vector</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">//destrua data</span>\n<span class=\"w\">    </span><span class=\"c1\">//destrua a struct</span>\n<span class=\"p\">}</span>\n\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">vector_add</span><span class=\"p\">(</span><span class=\"n\">Vector</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">vector</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">//utilize capacity e size para verificar se ainda existe espa\u00e7o</span>\n<span class=\"p\">}</span>\n\n<span class=\"c1\">//retorne a string no formato </span>\n<span class=\"c1\">// [ a b c ]</span>\n<span class=\"n\">string</span><span class=\"w\"> </span><span class=\"nf\">vector_show</span><span class=\"p\">(</span><span class=\"n\">Vector</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">vector</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">//retorne uma string com os dados do vetor</span>\n<span class=\"w\">    </span><span class=\"c1\">//voc\u00ea pode usar uma stringstream como buffer</span>\n<span class=\"w\">    </span><span class=\"c1\">//stringstream ss;</span>\n<span class=\"w\">    </span><span class=\"c1\">//ss &lt;&lt; 5 &lt;&lt; &quot; eh inteiro&quot;;</span>\n<span class=\"w\">    </span><span class=\"c1\">//ss.str() ser\u00e1 &quot;5 eh inteiro&quot;</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"cm\">/* NAO MEXA DAQUI PRA BAIXO */</span>\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(){</span>\n<span class=\"w\">    </span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cmd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">Vector</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vector_create</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"nb\">true</span><span class=\"p\">){</span>\n<span class=\"w\">        </span><span class=\"n\">getline</span><span class=\"p\">(</span><span class=\"n\">cin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;$&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">stringstream</span><span class=\"w\"> </span><span class=\"n\">ss</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">cmd</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;end&quot;</span><span class=\"p\">){</span>\n<span class=\"w\">            </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;init&quot;</span><span class=\"p\">){</span>\n<span class=\"w\">            </span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">;</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"k\">nullptr</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"n\">vector_destroy</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span>\n<span class=\"w\">            </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vector_create</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;status&quot;</span><span class=\"p\">){</span>\n<span class=\"w\">            </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;size:&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"o\">-&gt;</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot; capacity:&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"o\">-&gt;</span><span class=\"n\">capacity</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;add&quot;</span><span class=\"p\">){</span>\n<span class=\"w\">            </span><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"n\">ss</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"n\">vector_add</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"s\">&quot;show&quot;</span><span class=\"p\">){</span>\n<span class=\"w\">            </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">vector_show</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;fail: comando invalido</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">vector_destroy</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT create\ninit 3\nstatus\nend\n======== EXPECT\n$init 3\n$status\nsize:0 capacity:3\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT add\ninit 5\nshow\nadd 3 4 5 1\nshow\nend\n======== EXPECT\n$init 5\n$show\n[ ]\n$add 3 4 5 1\n$show\n[ 3 4 5 1 ]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tentar estourar\ninit 5\nshow\nadd 3 4 5 1\nshow\nadd 7 3 2 1\nshow\nend\n======== EXPECT\n$init 5\n$show\n[ ]\n$add 3 4 5 1\n$show\n[ 3 4 5 1 ]\n$add 7 3 2 1\n$show\n[ 3 4 5 1 7 ]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 01 init vazio 10%\nshow\nend\n======== EXPECT\n$show\n[ ]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02 add !%\ninit 10\nshow\nadd 3 4 5 1\nshow\nend\n======== EXPECT\n$init 10\n$show\n[ ]\n$add 3 4 5 1\n$show\n[ 3 4 5 1 ]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03 add mais !%\ninit 10\nshow\nadd 3 4 5 1\nshow\nadd 7\nshow\nend\n======== EXPECT\n$init 10\n$show\n[ ]\n$add 3 4 5 1\n$show\n[ 3 4 5 1 ]\n$add 7\n$show\n[ 3 4 5 1 7 ]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07 add mais !%\ninit 5\nshow\nadd 3 4 5 1\nshow\nadd 7\nshow\nend\n======== EXPECT\n$init 5\n$show\n[ ]\n$add 3 4 5 1\n$show\n[ 3 4 5 1 ]\n$add 7\n$show\n[ 3 4 5 1 7 ]\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
