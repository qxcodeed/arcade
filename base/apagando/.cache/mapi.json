{
    "title": "L2 - @apagando elementos de forma eficiente",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>L2 - @apagando elementos de forma eficiente</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmpxesa693f.css\" />\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"l2---apagando-elementos-de-forma-eficiente\">L2 - <span\nclass=\"citation\" data-cites=\"apagando\">@apagando</span> elementos de\nforma eficiente</h1>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/apagando/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<p>Com a proximidade da Copa do Mundo, o fluxo de pessoas nas filas para\ncompra de ingressos aumentou consideravelmente. Como as filas est\u00e3o cada\nvez maiores, pessoas menos pacientes tendem a desistir da compra de\ningressos e acabam deixando as filas, liberando assim vaga para outras\npessoas. Quando uma pessoa deixa a fila, todas as pessoas que estavam\natr\u00e1s dela d\u00e3o um passo a frente, sendo assim nunca existe um espa\u00e7o\nvago entre duas pessoas. A fila inicialmente cont\u00e9m N pessoas, cada uma\ncom um identificador diferente.</p>\n<p>Jo\u00e3ozinho sabe o estado inicial dela e os identificadores em ordem\ndas pessoas que deixaram a fila. Sabendo que ap\u00f3s o estado inicial\nnenhuma pessoa entrou mais na fila, Jo\u00e3ozinho deseja saber o estado\nfinal da fila.</p>\n<h2 id=\"entrada\">Entrada</h2>\n<ul>\n<li>A primeira linha cont\u00e9m um inteiro <strong>N</strong> representando\na quantidade de pessoas inicialmente na fila.</li>\n<li>A segunda linha cont\u00e9m <strong>N</strong> inteiros representando os\nidentificadores das pessoas na fila. O primeiro identificador\ncorresponde ao identificador da primeira pessoa na fila. \u00c9 garantido que\nduas pessoas diferentes n\u00e3o possuem o mesmo identificador.</li>\n<li>A terceira linha cont\u00e9m um inteiro <strong>M</strong> representando\na quantidade de pessoas que deixaram a fila.</li>\n<li>A quarta linha cont\u00e9m M inteiros representando os identificadores\ndas pessoas que deixaram a fila, na ordem em que elas sa\u00edram. \u00c9\ngarantido que um mesmo identificador n\u00e3o aparece duas vezes nessa\nlista.</li>\n</ul>\n<h2 id=\"sa\u00edda\">Sa\u00edda</h2>\n<p>Seu programa deve imprimir uma linha contedo <strong>N-M</strong>\ninteiros com os identificadores das pessoas que permaneceram na fila, em\nordem de chegada.</p>\n<h3 id=\"entrada-de-amostra\">Entrada de amostra</h3>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>4</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>10 9 6 3</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>1</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>3</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>10 9 6 </span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02</span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>8</span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>5 100 9 81 70 33 2 1000</span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>3</span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>9 33 5</span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>100 81 70 2 1000 </span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> 01\n4\n10 9 6 3\n1\n3\n========\n10 9 6 \n<<<<<<<<\n\n>>>>>>>> 02\n8\n5 100 9 81 70 33 2 1000\n3\n9 33 5\n========\n100 81 70 2 1000 \n<<<<<<<<\n\n>>>>>>>> 01\n10\n817 364 524 565 132 499 412 563 297 638 \n7\n364 817 412 132 499 524 297 \n========\n565 563 638 \n<<<<<<<<\n\n>>>>>>>> 02\n9\n2 840 316 408 711 537 296 565 735 \n5\n316 565 408 735 2 \n========\n840 711 537 296 \n<<<<<<<<\n\n>>>>>>>> 03\n7\n831 565 110 581 726 770 990 \n3\n770 581 565 \n========\n831 110 726 990 \n<<<<<<<<\n\n>>>>>>>> 04\n3\n11 74 816 \n1\n74 \n========\n11 816 \n<<<<<<<<\n\n>>>>>>>> 05\n8\n992 854 103 984 485 949 283 672 \n5\n283 103 485 984 949 \n========\n992 854 672 \n<<<<<<<<\n\n>>>>>>>> 06\n6\n867 123 560 217 606 175 \n1\n606 \n========\n867 123 560 217 175 \n<<<<<<<<\n\n>>>>>>>> 07\n5\n436 984 930 101 946 \n1\n101 \n========\n436 984 930 946 \n<<<<<<<<\n\n>>>>>>>> 08\n10\n186 739 126 213 75 174 447 658 856 365 \n7\n856 174 186 447 75 658 126 \n========\n739 213 365 \n<<<<<<<<\n\n>>>>>>>> 09\n3\n229 402 828 \n1\n828 \n========\n229 402 \n<<<<<<<<\n\n>>>>>>>> 10\n9\n652 47 136 650 578 622 923 281 100 \n6\n652 578 923 100 47 100 \n========\n136 650 622 281 \n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
