{
    "title": "@dividido: Percorrer in-order",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@dividido: Percorrer in-order</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@dividido: Percorrer in-order</h1>\n            <h1 id=\"percorrer-in-order\">Percorrer in-order</h1>\n<!--TOC_BEGIN-->\n<ul>\n<li><a href=\"#descri\u00e7\u00e3o\">Descri\u00e7\u00e3o</a></li>\n<li><a href=\"#lib\">lib</a></li>\n<li><a href=\"#arquivos\">Arquivos</a></li>\n<li><a href=\"#testes\">Testes</a></li>\n</ul>\n<!--TOC_END-->\n\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/dividido/cover.jpg\" /></p>\n<h2 id=\"descricao\">Descri\u00e7\u00e3o</h2>\n<ul>\n<li>Leia a string que representa a \u00e1rvore serializada.</li>\n<li>Voc\u00ea deve construir a \u00e1rvore a partir da string implementando corretamente o construtor do c\u00f3digo de partida.</li>\n<li>Voc\u00ea pode entender a l\u00f3gica de serializa\u00e7\u00e3o no seguinte <a href=\"https://www.geeksforgeeks.org/serialize-deserialize-binary-tree/\">link</a>.</li>\n<li>A sa\u00edda \u00e9 a \u00e1rvore percorrida in-order, mas j\u00e1 est\u00e1 implementado.</li>\n</ul>\n<h2 id=\"lib\">lib</h2>\n<ul>\n<li>lib.hpp</li>\n</ul>\n<!--ADD lib.hpp cpp-->\n\n<pre class=\"codehilite\"><code class=\"language-cpp\">#pragma once\n#include &lt;iostream&gt;\nusing namespace std;\n\nstruct Node {\n    int value;\n    Node * left;\n    Node * right;\n    Node(int value = 0, Node * left = nullptr, Node * right = nullptr){\n        this-&gt;value = value;\n        this-&gt;left = left;\n        this-&gt;right = right;\n    }\n};\n\nclass BTree {\npublic:\n    Node * root {nullptr};\n    BTree(string serial);\n    ~BTree();\n    std::string format();\n    std::string in_order();\n};\n</code></pre>\n\n<!--ADD_END-->\n\n<h2 id=\"arquivos\">Arquivos</h2>\n<ul>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/dividido/main.cpp\">main.cpp</a></li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/dividido/student.cpp\">student.cpp</a></li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/dividido/lib.hpp\">lib.h</a></li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/dividido/lib.cpp\">lib.cpp</a></li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<pre class=\"codehilite\"><code class=\"language-txt\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; um\n4 # # \n========\n[ 4 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; dois\n1 # 0 # # \n========\n[ 1 0 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; tres\n4 # 8 2 # # # \n========\n[ 4 2 8 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; quatro\n0 9 4 # # # 5 # # \n========\n[ 4 9 0 5 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; cinco\n0 4 # # 2 0 # # 3 # # \n========\n[ 4 0 0 2 3 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; seis\n2 0 0 # # # 3 # 7 # 9 # # \n========\n[ 0 0 2 3 7 9 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; dez\n1 8 7 # # 4 # 6 # # 5 0 # # 9 # 3 2 # # # \n========\n[ 7 8 4 6 1 0 5 9 2 3 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT um\n4 # # \n======== EXPECT\n[ 4 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT dois\n1 # 0 # # \n======== EXPECT\n[ 1 0 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT tres\n4 # 8 2 # # # \n======== EXPECT\n[ 4 2 8 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT quatro\n0 9 4 # # # 5 # # \n======== EXPECT\n[ 4 9 0 5 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT cinco\n0 4 # # 2 0 # # 3 # # \n======== EXPECT\n[ 4 0 0 2 3 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT seis\n2 0 0 # # # 3 # 7 # 9 # # \n======== EXPECT\n[ 0 0 2 3 7 9 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT dez\n1 8 7 # # 4 # 6 # # 5 0 # # 9 # 3 2 # # # \n======== EXPECT\n[ 7 8 4 6 1 0 5 9 2 3 ]\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
