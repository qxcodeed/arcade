{
    "title": "@empilhamento: Empilhamento de divis\u00f5es",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@empilhamento: Empilhamento de divis\u00f5es</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@empilhamento: Empilhamento de divis\u00f5es</h1>\n            <h1 id=\"empilhamento-de-divisoes\">Empilhamento de divis\u00f5es</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/empilhamento/cover.jpg\" /></p>\n<p>Para trabalhar essa t\u00e9cnica, vamos resolver o seguinte problema.</p>\n<p>Seja um n\u00famero inteiro, voc\u00ea deve imprimir os resultados da divis\u00e3o inteira por 2 e o resto da divis\u00e3o por 2 at\u00e9 que o n\u00famero seja 0, por\u00e9m na ordem inversa.</p>\n<p>Vamos utilizar o n\u00famero 100 como exemplo.</p>\n<ul>\n<li>Primeiro vamos dividir 100 por 2 e obter o resultado 50 e o resto 0.</li>\n<li>Depois vamos dividir 50 por 2 e obter o resultado 25 e o resto 0.</li>\n<li>Depois vamos dividir 25 por 2 e obter o resultado 12 e o resto 1.</li>\n<li>Depois vamos dividir 12 por 2 e obter o resultado 6 e o resto 0.</li>\n<li>Depois vamos dividir 6 por 2 e obter o resultado 3 e o resto 0.</li>\n<li>Depois vamos dividir 3 por 2 e obter o resultado 1 e o resto 1.</li>\n<li>Depois vamos dividir 1 por 2 e obter o resultado 0 e o resto 1.</li>\n</ul>\n<p>Imprimindo ao contr\u00e1rio, temos:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"mf\">0</span><span class=\"w\"> </span><span class=\"mf\">1</span>\n<span class=\"mf\">1</span><span class=\"w\"> </span><span class=\"mf\">1</span>\n<span class=\"mf\">3</span><span class=\"w\"> </span><span class=\"mf\">0</span>\n<span class=\"mf\">6</span><span class=\"w\"> </span><span class=\"mf\">0</span>\n<span class=\"mf\">12</span><span class=\"w\"> </span><span class=\"mf\">1</span>\n<span class=\"mf\">25</span><span class=\"w\"> </span><span class=\"mf\">0</span>\n<span class=\"mf\">50</span><span class=\"w\"> </span><span class=\"mf\">0</span>\n</code></pre></div>\n\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp</li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/empilhamento/.cache/draft/cpp/lib.cpp\">lib.cpp</a></li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/empilhamento/.cache/draft/cpp/lib.h\">lib.h</a></li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/empilhamento/.cache/draft/cpp/main.cpp\">main.cpp</a></li>\n</ul>\n<!-- links -->\n\n<h2 id=\"resolucao\">Resolu\u00e7\u00e3o</h2>\n<p><a href=\"https://youtu.be/2n8w2yju6Sc\"><img alt=\"imagem\" src=\"https://user-images.githubusercontent.com/4747652/267033420-04b92b31-5905-45ea-9cb6-f903681e7e20.png\" /></a></p>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"codehilite\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n<span class=\"nv\">5</span>\n<span class=\"o\">========</span>\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;</span>&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n<span class=\"nv\">100</span>\n<span class=\"o\">========</span>\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">6</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">12</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">25</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">50</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;</span>&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n<span class=\"nv\">101</span>\n<span class=\"o\">========</span>\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">3</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">6</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">12</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">25</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">50</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;</span>&lt;&lt;\n\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n<span class=\"nv\">150</span>\n<span class=\"o\">========</span>\n<span class=\"m\">0</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">1</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">2</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">9</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"m\">18</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">37</span><span class=\"w\"> </span><span class=\"m\">1</span>\n<span class=\"m\">75</span><span class=\"w\"> </span><span class=\"m\">0</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;</span>&lt;&lt;\n</code></pre></div>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n======== EXPECT\n0 1\n1 0\n2 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n100\n======== EXPECT\n0 1\n1 1\n3 0\n6 0\n12 1\n25 0\n50 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n101\n======== EXPECT\n0 1\n1 1\n3 0\n6 0\n12 1\n25 0\n50 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n150\n======== EXPECT\n0 1\n1 0\n2 0\n4 1\n9 0\n18 1\n37 1\n75 0\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "cpp": [
            {
                "name": "lib.cpp",
                "contents": "#include <iostream>\n\n//++0\n\nvoid process(int value) {\n    if (value == 0) {\n        return;\n    }\n    int div = value / 2;\n    int resto = value % 2;\n    process(div);\n    std::cout << div << \" \" << resto << std::endl;\n    //ACT!\n    // (void) value;\n    //if (/* ponto de parada */) {\n    //____return;\n    //}\n    //faz os calculos de div e resto\n    //chama a recurs\u00e3o para div\n    //imprime os valores depois da chamada recursiva\n}\n",
                "encoding": 0
            },
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n#include \"lib.h\"\n\nint main() {\n    int value {};\n    std::cin >> value;\n    process(value);\n}\n",
                "encoding": 0
            },
            {
                "name": "lib.h",
                "contents": "#pragma once\n\nvoid process(int);\n",
                "encoding": 0
            }
        ]
    }
}
