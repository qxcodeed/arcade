{
    "title": "@priminhos: Carrega a lista de primos",
    "description": "# Carrega a lista de primos\n\n## Intro\n\nGere um vetor com os `n` primeiros n\u00fameros primos.\n\n## Draft\n\n<!-- links .cache/draft -->\n- cpp\n  - [main.cpp](https://github.com/qxcodeed/arcade/blob/master/base/priminhos/.cache/draft/cpp/main.cpp)\n<!-- links -->\n\n## Testes\n\n```bash\n>>>>>>>>\n1\n========\n[2]\n<<<<<<<<\n\n>>>>>>>>\n2\n========\n[2, 3]\n<<<<<<<<\n\n>>>>>>>>\n3\n========\n[2, 3, 5]\n<<<<<<<<<\n\n>>>>>>>>\n7\n========\n[2, 3, 5, 7, 11, 13, 17]\n<<<<<<<<<\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n1\n======== EXPECT\n[2]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n2\n======== EXPECT\n[2, 3]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n======== EXPECT\n[2, 3, 5]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n7\n======== EXPECT\n[2, 3, 5, 7, 11, 13, 17]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n\n// x: n\u00famero que est\u00e1 sendo testado\n// div: divisor que est\u00e1 sendo testado\nbool eh_primo(int x, int div = 2) {\n    (void) x;\n    (void) div;\n    return false;\n}\n\n// n: n-\u00e9simo n\u00famero primo\n// cont: contador de quantos n\u00fameros primos j\u00e1 foram encontrados\n// i: n\u00famero que est\u00e1 sendo testado\nint n_esimo(int n, int cont = 0, int i = 2) {\n    (void) n;\n    (void) cont;\n    (void) i;\n    return 0;\n}\n\n// M: vetor de inteiros\n// n: tamanho do vetor\nvoid load_prime_list(int M[], int n) {\n    (void) M;\n    (void) n;\n}\n\nint main() {\n    int n {};\n    std::cin >> n;\n    int M[n];\n    load_prime_list(M, n);\n\n    std::cout << \"[\";\n    for (int i = 0; i < n; i++) {\n        std::cout << (i == 0 ? \"\" : \", \");\n        std::cout << M[i];\n    }\n    std::cout << \"]\\n\";\n    return 0;\n}\n",
                "type": "show"
            }
        ]
    }
}
