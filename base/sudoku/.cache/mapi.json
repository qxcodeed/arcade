{
    "title": "@sudoku: Sudoku",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@sudoku: Sudoku</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@sudoku: Sudoku</h1>\n            <h1 id=\"sudoku\">Sudoku</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/sudoku/cover.jpg\" /></p>\n<p>O Sudoku tem v\u00e1rias vers\u00f5es para diferentes dificuldades. O mais conhecido \u00e9 o modelo 9x9.</p>\n<p>O site <a href=\"https://www.sudokuonline.io/pt/criancas\">sudoku</a> tem vers\u00f5es simplificadas para crian\u00e7as com vers\u00f5es 4x4 e 6x6.</p>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/sudoku/__exemplos.png\" /></p>\n<p>Seu objetivo \u00e9 resolver um sudoku NxN com n\u00fameros de 1 a N.</p>\n<p>N pode ser 4 ou 9</p>\n<ul>\n<li>Entrada</li>\n<li>Valor de N</li>\n<li>Uma matriz N x N composta por n\u00fameros de 1 a N e pontos para os valores faltantes.</li>\n<li>Sa\u00edda</li>\n<li>O problema resolvido.</li>\n</ul>\n<pre class=\"codehilite\"><code class=\"language-txt\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n1.3.\n2...\n...4\n.1..\n========\n1432\n2341\n3214\n4123\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n..2.\n.1..\n..4.\n.3..\n========\n3421\n2134\n1243\n4312\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n....\n.2.1\n1.3.\n....\n========\n4123\n3241\n1432\n2314\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n....\n3.2.\n.1.4\n....\n========\n1243\n3421\n2134\n4312\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n9\n53..7....\n6..195...\n.98....6.\n8...6...3\n4..8.3..1\n7...2...6\n.6....28.\n...419..5\n....8..79\n========\n534678912\n672195348\n198342567\n859761423\n426853791\n713924856\n961537284\n287419635\n345286179\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n\n<h2 id=\"ajuda\">Ajuda</h2>\n<p>Voc\u00ea pode utilizar o seguinte modelo para simplificar a l\u00f3gica do sudoku</p>\n<pre class=\"codehilite\"><code class=\"language-cpp\">struct Problem {\n    vector&lt;string&gt; data;          //vetor de dados\n    int size { 9 };               //normalmente 4 ou 9\n    int dim { 3 };                //2 ou 3\n    vector&lt;pair&lt;int, int&gt;&gt; holes; //posicoes para serem preenchidas\n\n    Problem(vector&lt;string&gt; data) {\n        this-&gt;data = data;\n        this-&gt;size = data.size();\n        this-&gt;dim = sqrt(this-&gt;size);\n\n        for (int l = 0; l &lt; size; l++)      //percorre todas as posi\u00e7\u00f5es e guarda as que s\u00e3o .\n            for (int c = 0; c &lt; size; c++)\n                if (data[l][c] == '.')\n                    holes.push_back(make_pair(l, c));\n    }\n\n    //verifica se pode colocar esse valor nessa posi\u00e7\u00e3o\n    //pode colocar se n\u00e3o encontrar na linha, na coluna ou no quadrante\n    bool fit(int hindex, char value) {\n        auto [pl, pc] = holes[hindex];  //acha a posicao no vetor de posi\u00e7\u00f5es\n\n        for (int l = 0; l &lt; size; l++) //olhando todas as linhas dessa coluna\n            if (data[l][pc] == value) \n                return false;\n\n        for (int c = 0; c &lt; size; c++) //olhando todas as colunas dessa linha\n            if (data[pl][c] == value)\n                return false;\n\n        int lh = pl - pl % dim; //achando a cabe\u00e7a do quadrante removendo a sobra\n        int ch = pc - pc % dim;\n        for (int l = lh; l &lt; lh + dim; l++)\n            for (int c = ch; c &lt; ch + dim; c++)\n                if (data[l][c] == value)\n                    return false;\n\n        return true;\n    }\n}\n</code></pre>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n4\n1.3.\n2...\n...4\n.1..\n======== EXPECT\n1432\n2341\n3214\n4123\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n..2.\n.1..\n..4.\n.3..\n======== EXPECT\n3421\n2134\n1243\n4312\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n....\n.2.1\n1.3.\n....\n======== EXPECT\n4123\n3241\n1432\n2314\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n....\n3.2.\n.1.4\n....\n======== EXPECT\n1243\n3421\n2134\n4312\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n9\n53..7....\n6..195...\n.98....6.\n8...6...3\n4..8.3..1\n7...2...6\n.6....28.\n...419..5\n....8..79\n======== EXPECT\n534678912\n672195348\n198342567\n859761423\n426853791\n713924856\n961537284\n287419635\n345286179\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
