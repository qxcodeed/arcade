{
    "title": "@sudoku: Sudoku",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@sudoku: Sudoku</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Sudoku</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/sudoku/cover.jpg\" /></p>\n<p>O Sudoku tem v\u00e1rias vers\u00f5es para diferentes dificuldades. O mais conhecido \u00e9 o modelo 9x9.</p>\n<p>O site <a href=\"https://www.sudokuonline.io/pt/criancas\">sudoku</a> tem vers\u00f5es simplificadas para crian\u00e7as com vers\u00f5es 4x4 e 6x6.</p>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/sudoku/__exemplos.png\" /></p>\n<p>Seu objetivo \u00e9 resolver um sudoku NxN com n\u00fameros de 1 a N.</p>\n<p>N pode ser 4 ou 9</p>\n<ul>\n<li>Se for 4, um n\u00famero de 1 a 4 deve aparecer em cada linha, coluna e quadrante 2x2.</li>\n<li>\n<p>Se for 9, um n\u00famero de 1 a 9 deve aparecer em cada linha, coluna e quadrante 3x3.</p>\n</li>\n<li>\n<p>Entrada</p>\n<ul>\n<li>Valor de N</li>\n<li>Uma matriz N x N composta por n\u00fameros de 1 a N e pontos para os valores faltantes.</li>\n</ul>\n</li>\n<li>Sa\u00edda<ul>\n<li>O problema resolvido.</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n1.3.\n2...\n...4\n.1..\n========\n1432\n2341\n3214\n4123\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n..2.\n.1..\n..4.\n.3..\n========\n3421\n2134\n1243\n4312\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n....\n.2.1\n1.3.\n....\n========\n4123\n3241\n1432\n2314\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n4\n....\n3.2.\n.1.4\n....\n========\n1243\n3421\n2134\n4312\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n9\n53..7....\n6..195...\n.98....6.\n8...6...3\n4..8.3..1\n7...2...6\n.6....28.\n...419..5\n....8..79\n========\n534678912\n672195348\n198342567\n859761423\n426853791\n713924856\n961537284\n287419635\n345286179\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n<h2>Ajuda</h2>\n<p>Use a mesma l\u00f3gica do problema dist\u00e2ncia para percorrer a matriz. Voc\u00ea pode usar um \u00edndice progressivo e converter esse valor para linha e coluna como no exemplo abaixo:</p>\n<ul>\n<li>Crie fun\u00e7\u00f5es diferentes para verificar se o n\u00famero j\u00e1 existe na linha, coluna e quadrante.</li>\n<li>Para calcular o quadrante, voc\u00ea pode usar a divis\u00e3o inteira e o resto da divis\u00e3o.</li>\n<li>A fun\u00e7\u00e3o abaixo retorna uma lista com todos os valores do quadrante do elemento.</li>\n<li>A fun\u00e7\u00e3o \u00e9 feita propositalmente feia para voc\u00ea entender como ela funciona.</li>\n</ul>\n<div class=\"language-go highlight\"><pre><span></span><code><span class=\"kd\">func</span><span class=\"w\"> </span><span class=\"nx\">quadrante</span><span class=\"p\">(</span><span class=\"nx\">matriz</span><span class=\"w\"> </span><span class=\"p\">[][]</span><span class=\"kt\">rune</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">lin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">col</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"kt\">rune</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">dim</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nx\">matriz</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">l</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">lin</span><span class=\"w\"> </span><span class=\"c1\">// dim) * dim</span>\n<span class=\"w\">    </span><span class=\"nx\">c</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nx\">col</span><span class=\"w\"> </span><span class=\"c1\">// dim) * dim</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">dim</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"kt\">rune</span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">dim</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"kt\">rune</span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"w\">            </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"nx\">matriz</span><span class=\"p\">[</span><span class=\"nx\">l</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">][</span><span class=\"nx\">c</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"kc\">nil</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"language-go highlight\"><pre><span></span><code><span class=\"kd\">func</span><span class=\"w\"> </span><span class=\"nx\">resolver</span><span class=\"p\">(</span><span class=\"nx\">matriz</span><span class=\"w\"> </span><span class=\"p\">[][]</span><span class=\"kt\">rune</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"nx\">nl</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"nx\">matriz</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"nx\">l</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"nx\">nl</span>\n<span class=\"w\">    </span><span class=\"nx\">c</span><span class=\"w\"> </span><span class=\"o\">:=</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"nx\">nl</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"nx\">index</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nx\">nl</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"nx\">nl</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nx\">True</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"c1\">// se n\u00e3o for ponto, continue</span>\n<span class=\"w\">    </span><span class=\"c1\">// para todos os n\u00fameros de [1 a N]</span>\n<span class=\"w\">    </span><span class=\"c1\">//     se o n\u00famero n\u00e3o estiver na linha, coluna e quadrante</span>\n<span class=\"w\">    </span><span class=\"c1\">//         coloque o n\u00famero na matriz</span>\n<span class=\"w\">    </span><span class=\"c1\">//         se resolver(matriz, index + 1):</span>\n<span class=\"w\">    </span><span class=\"c1\">//             return True</span>\n<span class=\"w\">    </span><span class=\"c1\">//         matriz[l][c] = &#39;.&#39; // desfaz a tentativa</span>\n<span class=\"w\">    </span><span class=\"c1\">// return False</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n4\n1.3.\n2...\n...4\n.1..\n======== EXPECT\n1432\n2341\n3214\n4123\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n..2.\n.1..\n..4.\n.3..\n======== EXPECT\n3421\n2134\n1243\n4312\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n....\n.2.1\n1.3.\n....\n======== EXPECT\n4123\n3241\n1432\n2314\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n....\n3.2.\n.1.4\n....\n======== EXPECT\n1243\n3421\n2134\n4312\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n9\n53..7....\n6..195...\n.98....6.\n8...6...3\n4..8.3..1\n7...2...6\n.6....28.\n...419..5\n....8..79\n======== EXPECT\n534678912\n672195348\n198342567\n859761423\n426853791\n713924856\n961537284\n287419635\n345286179\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
