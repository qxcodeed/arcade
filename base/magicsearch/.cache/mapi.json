{
    "title": "@magicsearch: Magic Search com busca bin\u00e1ria",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@magicsearch: Magic Search com busca bin\u00e1ria</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"magic-search-com-busca-bin\u00e1ria\">Magic Search com busca\nbin\u00e1ria</h1>\n<p>Dado uma lista de elementos ordenados, com possibilidade de repeti\u00e7\u00e3o\nde valores, utilize uma varia\u00e7\u00e3o da busca bin\u00e1ria para retornar:</p>\n<ul>\n<li>Se o elemento existir, retorne a posi\u00e7\u00e3o da \u00faltima ocorr\u00eancia.</li>\n<li>Se ele n\u00e3o existir, retorne a posi\u00e7\u00e3o onde ele deveria ser inserido\nna lista ordenada.</li>\n</ul>\n<p>Seu algoritmo deve utilizar a busca bin\u00e1ria para encontrar alguma\nocorr\u00eancia do elemento.</p>\n<ul>\n<li>Se encontrar, a partir dessa posi\u00e7\u00e3o, voc\u00ea deve percorrer a lista\npara encontrar a \u00faltima ocorr\u00eancia do elemento.</li>\n<li>Se n\u00e3o encontrar, o ponto de cruzamento da busca bin\u00e1ria \u00e9 a posi\u00e7\u00e3o\nonde o elemento deve ser inserido.</li>\n</ul>\n<h2 id=\"entrada-e-sa\u00edda\">Entrada e Sa\u00edda</h2>\n<ul>\n<li>Entrada\n<ul>\n<li>1a linha: vetor com os elementos inteiros entre colchetes separados\npor espa\u00e7o</li>\n<li>2a linha: elemento a ser pesquisado</li>\n</ul></li>\n<li>Sa\u00edda\n<ul>\n<li>Posi\u00e7\u00e3o da \u00faltima ocorr\u00eancia do elemento ou onde ele deve ser\ninserido</li>\n</ul></li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">[</span> <span class=\"bu\">]</span></span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">4</span></span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">========</span> EXPECT</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">0</span></span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-8\"><a href=\"#cb1-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-9\"><a href=\"#cb1-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 1 1 ]</span></span>\n<span id=\"cb1-10\"><a href=\"#cb1-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">1</span></span>\n<span id=\"cb1-11\"><a href=\"#cb1-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-12\"><a href=\"#cb1-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">2</span></span>\n<span id=\"cb1-13\"><a href=\"#cb1-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-14\"><a href=\"#cb1-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-15\"><a href=\"#cb1-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-16\"><a href=\"#cb1-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 ]</span></span>\n<span id=\"cb1-17\"><a href=\"#cb1-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">1</span></span>\n<span id=\"cb1-18\"><a href=\"#cb1-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-19\"><a href=\"#cb1-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">0</span></span>\n<span id=\"cb1-20\"><a href=\"#cb1-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-21\"><a href=\"#cb1-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-22\"><a href=\"#cb1-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-23\"><a href=\"#cb1-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 ]</span></span>\n<span id=\"cb1-24\"><a href=\"#cb1-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">3</span></span>\n<span id=\"cb1-25\"><a href=\"#cb1-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-26\"><a href=\"#cb1-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">2</span></span>\n<span id=\"cb1-27\"><a href=\"#cb1-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-28\"><a href=\"#cb1-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-29\"><a href=\"#cb1-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-30\"><a href=\"#cb1-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 1 1 2 2 3 ]</span></span>\n<span id=\"cb1-31\"><a href=\"#cb1-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">2</span></span>\n<span id=\"cb1-32\"><a href=\"#cb1-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-33\"><a href=\"#cb1-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">4</span></span>\n<span id=\"cb1-34\"><a href=\"#cb1-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-35\"><a href=\"#cb1-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-36\"><a href=\"#cb1-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-37\"><a href=\"#cb1-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 1 1 3 3 5 ]</span></span>\n<span id=\"cb1-38\"><a href=\"#cb1-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">0</span></span>\n<span id=\"cb1-39\"><a href=\"#cb1-39\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-40\"><a href=\"#cb1-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">0</span></span>\n<span id=\"cb1-41\"><a href=\"#cb1-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-42\"><a href=\"#cb1-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-43\"><a href=\"#cb1-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-44\"><a href=\"#cb1-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 1 1 4 4 6 6 ]</span></span>\n<span id=\"cb1-45\"><a href=\"#cb1-45\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">2</span></span>\n<span id=\"cb1-46\"><a href=\"#cb1-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-47\"><a href=\"#cb1-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">3</span></span>\n<span id=\"cb1-48\"><a href=\"#cb1-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-49\"><a href=\"#cb1-49\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-50\"><a href=\"#cb1-50\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-51\"><a href=\"#cb1-51\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 1 1 4 4 6 6 ]</span></span>\n<span id=\"cb1-52\"><a href=\"#cb1-52\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">5</span></span>\n<span id=\"cb1-53\"><a href=\"#cb1-53\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-54\"><a href=\"#cb1-54\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">5</span></span>\n<span id=\"cb1-55\"><a href=\"#cb1-55\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-56\"><a href=\"#cb1-56\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-57\"><a href=\"#cb1-57\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-58\"><a href=\"#cb1-58\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 1 1 4 4 6 6 ]</span></span>\n<span id=\"cb1-59\"><a href=\"#cb1-59\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">8</span></span>\n<span id=\"cb1-60\"><a href=\"#cb1-60\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-61\"><a href=\"#cb1-61\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">7</span></span>\n<span id=\"cb1-62\"><a href=\"#cb1-62\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb1-63\"><a href=\"#cb1-63\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb1-64\"><a href=\"#cb1-64\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb1-65\"><a href=\"#cb1-65\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 1 1 4 4 6 6 6 6 6 6 6 6 6 ]</span></span>\n<span id=\"cb1-66\"><a href=\"#cb1-66\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">6</span></span>\n<span id=\"cb1-67\"><a href=\"#cb1-67\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb1-68\"><a href=\"#cb1-68\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">13</span></span>\n<span id=\"cb1-69\"><a href=\"#cb1-69\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[ ]\n4\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 1 1 ]\n1\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 ]\n1\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 ]\n3\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 1 1 2 2 3 ]\n2\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 1 1 3 3 5 ]\n0\n======== EXPECT\n0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 1 1 4 4 6 6 ]\n2\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 1 1 4 4 6 6 ]\n5\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 1 1 4 4 6 6 ]\n8\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 1 1 4 4 6 6 6 6 6 6 6 6 6 ]\n6\n======== EXPECT\n13\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "go": [
            {
                "name": "main.go",
                "contents": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc MagicSearch(slice []int, value int) int {\n\t_, _ = slice, value\n\treturn 0\n}\n\nfunc main() {\n\tscanner := bufio.NewScanner(os.Stdin)\n\tscanner.Scan()\n\tparts := strings.Fields(scanner.Text())\n\tslice := make([]int, 0, 1)\n\tfor _, elem := range parts[1 : len(parts)-1] {\n\t\tvalue, _ := strconv.Atoi(elem)\n\t\tslice = append(slice, value)\n\t}\n\n\tscanner.Scan()\n\tvalue, _ := strconv.Atoi(scanner.Text())\n\tresult := MagicSearch(slice, value)\n\tfmt.Println(result)\n}\n",
                "encoding": 0
            }
        ]
    }
}
