{
    "title": "@bettersearch: Better Search com busca bin\u00e1ria",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@bettersearch: Better Search com busca bin\u00e1ria</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"better-search-com-busca-bin\u00e1ria\">Better Search com busca\nbin\u00e1ria</h1>\n<p>Vamos utilizar a busca bin\u00e1ria para buscar elementos em uma lista\nordenada sem repeti\u00e7\u00e3o de valores.</p>\n<h2 id=\"implementa\u00e7\u00e3o\">Implementa\u00e7\u00e3o</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode py\"><code class=\"sourceCode python\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\"># python</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">def</span> better_search(arr: <span class=\"bu\">list</span>[<span class=\"bu\">int</span>], value: <span class=\"bu\">int</span>) <span class=\"op\">-&gt;</span> <span class=\"bu\">tuple</span>[<span class=\"bu\">bool</span>, <span class=\"bu\">int</span>]:</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre class=\"sourceCode go\"><code class=\"sourceCode go\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// go</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">func</span> BetterSearch<span class=\"op\">(</span>arr <span class=\"op\">[]</span><span class=\"dt\">int</span><span class=\"op\">,</span> value <span class=\"dt\">int</span><span class=\"op\">)</span> <span class=\"op\">(</span><span class=\"dt\">bool</span><span class=\"op\">,</span> <span class=\"dt\">int</span><span class=\"op\">)</span> <span class=\"op\">{</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode java\"><code class=\"sourceCode java\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">// java</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"kw\">public</span> <span class=\"kw\">class</span> BetterSearch <span class=\"op\">{</span></span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"kw\">public</span> <span class=\"dt\">static</span> Tuple<span class=\"op\">&lt;</span><span class=\"bu\">Boolean</span><span class=\"op\">,</span> <span class=\"bu\">Integer</span><span class=\"op\">&gt;</span> <span class=\"fu\">betterSearch</span><span class=\"op\">(</span><span class=\"dt\">int</span><span class=\"op\">[]</span> arr<span class=\"op\">,</span> <span class=\"dt\">int</span> value<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"dt\">int</span> low <span class=\"op\">=</span> <span class=\"dv\">0</span><span class=\"op\">;</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"dt\">int</span> high <span class=\"op\">=</span> arr<span class=\"op\">.</span><span class=\"fu\">length</span><span class=\"op\">;</span></span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">while</span> <span class=\"op\">(</span>low <span class=\"op\">&lt;</span> high<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"dt\">int</span> mid <span class=\"op\">=</span> <span class=\"op\">(</span>low <span class=\"op\">+</span> high<span class=\"op\">)</span> <span class=\"op\">/</span> <span class=\"dv\">2</span><span class=\"op\">;</span></span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"cf\">if</span> <span class=\"op\">(</span>arr<span class=\"op\">[</span>mid<span class=\"op\">]</span> <span class=\"op\">==</span> value<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a>                <span class=\"cf\">return</span> <span class=\"kw\">new</span> Tuple<span class=\"op\">&lt;&gt;(</span><span class=\"kw\">true</span><span class=\"op\">,</span> mid<span class=\"op\">);</span></span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"op\">}</span> <span class=\"cf\">else</span> <span class=\"cf\">if</span> <span class=\"op\">(</span>arr<span class=\"op\">[</span>mid<span class=\"op\">]</span> <span class=\"op\">&lt;</span> value<span class=\"op\">)</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a>                low <span class=\"op\">=</span> mid <span class=\"op\">+</span> <span class=\"dv\">1</span><span class=\"op\">;</span></span>\n<span id=\"cb3-12\"><a href=\"#cb3-12\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"op\">}</span> <span class=\"cf\">else</span> <span class=\"op\">{</span></span>\n<span id=\"cb3-13\"><a href=\"#cb3-13\" aria-hidden=\"true\" tabindex=\"-1\"></a>                high <span class=\"op\">=</span> mid<span class=\"op\">;</span></span>\n<span id=\"cb3-14\"><a href=\"#cb3-14\" aria-hidden=\"true\" tabindex=\"-1\"></a>            <span class=\"op\">}</span></span>\n<span id=\"cb3-15\"><a href=\"#cb3-15\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"op\">}</span></span>\n<span id=\"cb3-16\"><a href=\"#cb3-16\" aria-hidden=\"true\" tabindex=\"-1\"></a>        <span class=\"cf\">return</span> <span class=\"kw\">new</span> Tuple<span class=\"op\">&lt;&gt;(</span><span class=\"kw\">false</span><span class=\"op\">,</span> low<span class=\"op\">);</span></span>\n<span id=\"cb3-17\"><a href=\"#cb3-17\" aria-hidden=\"true\" tabindex=\"-1\"></a>    <span class=\"op\">}</span></span>\n<span id=\"cb3-18\"><a href=\"#cb3-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">}</span></span></code></pre></div>\n<ul>\n<li>Fa\u00e7a a implementa\u00e7\u00e3o da busca bin\u00e1ria usando o intervalo [low,\nhigh[.</li>\n<li>O algoritmo para quando\n<ul>\n<li>O elemento \u00e9 encontrado ou</li>\n<li>O intervalo de busca se torna vazio (low == high).</li>\n</ul></li>\n<li>Ao final da busca, voc\u00ea pode cair nos seguintes casos.\n<ul>\n<li>A posi\u00e7\u00e3o \u00e9 v\u00e1lida e o elemento existe. Retorne True e a\nposi\u00e7\u00e3o.</li>\n<li>A posi\u00e7\u00e3o \u00e9 invalida ou o elemento n\u00e3o existe. Retorne False e a\nposi\u00e7\u00e3o.</li>\n<li>Observe que a posi\u00e7\u00e3o retornada \u00e9 onde o elemento deve ser\ninserido.</li>\n</ul></li>\n</ul>\n<h2 id=\"entrada-e-sa\u00edda\">Entrada e Sa\u00edda</h2>\n<ul>\n<li>Entrada\n<ul>\n<li>1a linha: vetor com os elementos inteiros entre colchetes separados\npor espa\u00e7o</li>\n<li>2a linha: elemento a ser pesquisado</li>\n</ul></li>\n<li>Sa\u00edda\n<ul>\n<li>F ou V (Falso ou Verdadeiro) e a posi\u00e7\u00e3o do elemento (encontrado ou\nonde deve ser inserido)</li>\n</ul></li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb4\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> INSERT</span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"bu\">[</span> <span class=\"bu\">]</span></span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">4</span></span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">========</span> EXPECT</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">F</span> 0</span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"op\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-9\"><a href=\"#cb4-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 4 ]</span></span>\n<span id=\"cb4-10\"><a href=\"#cb4-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">1</span></span>\n<span id=\"cb4-11\"><a href=\"#cb4-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-12\"><a href=\"#cb4-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">V 0</span></span>\n<span id=\"cb4-13\"><a href=\"#cb4-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-14\"><a href=\"#cb4-14\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-15\"><a href=\"#cb4-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-16\"><a href=\"#cb4-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 4 ]</span></span>\n<span id=\"cb4-17\"><a href=\"#cb4-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">2</span></span>\n<span id=\"cb4-18\"><a href=\"#cb4-18\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-19\"><a href=\"#cb4-19\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">V 1</span></span>\n<span id=\"cb4-20\"><a href=\"#cb4-20\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-21\"><a href=\"#cb4-21\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-22\"><a href=\"#cb4-22\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-23\"><a href=\"#cb4-23\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 4 ]</span></span>\n<span id=\"cb4-24\"><a href=\"#cb4-24\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">3</span></span>\n<span id=\"cb4-25\"><a href=\"#cb4-25\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-26\"><a href=\"#cb4-26\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">V 2</span></span>\n<span id=\"cb4-27\"><a href=\"#cb4-27\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-28\"><a href=\"#cb4-28\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-29\"><a href=\"#cb4-29\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-30\"><a href=\"#cb4-30\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 4 ]</span></span>\n<span id=\"cb4-31\"><a href=\"#cb4-31\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">4</span></span>\n<span id=\"cb4-32\"><a href=\"#cb4-32\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-33\"><a href=\"#cb4-33\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">V 3</span></span>\n<span id=\"cb4-34\"><a href=\"#cb4-34\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-35\"><a href=\"#cb4-35\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-36\"><a href=\"#cb4-36\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-37\"><a href=\"#cb4-37\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 3 4 ]</span></span>\n<span id=\"cb4-38\"><a href=\"#cb4-38\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">2</span></span>\n<span id=\"cb4-39\"><a href=\"#cb4-39\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-40\"><a href=\"#cb4-40\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">F 1</span></span>\n<span id=\"cb4-41\"><a href=\"#cb4-41\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-42\"><a href=\"#cb4-42\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-43\"><a href=\"#cb4-43\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-44\"><a href=\"#cb4-44\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 5 6 7 8 ]</span></span>\n<span id=\"cb4-45\"><a href=\"#cb4-45\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">4</span></span>\n<span id=\"cb4-46\"><a href=\"#cb4-46\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-47\"><a href=\"#cb4-47\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">F 3</span></span>\n<span id=\"cb4-48\"><a href=\"#cb4-48\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-49\"><a href=\"#cb4-49\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-50\"><a href=\"#cb4-50\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-51\"><a href=\"#cb4-51\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 7 8 9 ]</span></span>\n<span id=\"cb4-52\"><a href=\"#cb4-52\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">0</span></span>\n<span id=\"cb4-53\"><a href=\"#cb4-53\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-54\"><a href=\"#cb4-54\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">F 0</span></span>\n<span id=\"cb4-55\"><a href=\"#cb4-55\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-56\"><a href=\"#cb4-56\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-57\"><a href=\"#cb4-57\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-58\"><a href=\"#cb4-58\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 3 5 6 7 9 10 ]</span></span>\n<span id=\"cb4-59\"><a href=\"#cb4-59\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">2</span></span>\n<span id=\"cb4-60\"><a href=\"#cb4-60\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-61\"><a href=\"#cb4-61\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">F 1</span></span>\n<span id=\"cb4-62\"><a href=\"#cb4-62\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-63\"><a href=\"#cb4-63\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-64\"><a href=\"#cb4-64\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-65\"><a href=\"#cb4-65\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ 1 2 3 6 7 9 ]</span></span>\n<span id=\"cb4-66\"><a href=\"#cb4-66\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">9</span></span>\n<span id=\"cb4-67\"><a href=\"#cb4-67\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-68\"><a href=\"#cb4-68\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">V 5</span></span>\n<span id=\"cb4-69\"><a href=\"#cb4-69\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span>\n<span id=\"cb4-70\"><a href=\"#cb4-70\" aria-hidden=\"true\" tabindex=\"-1\"></a></span>\n<span id=\"cb4-71\"><a href=\"#cb4-71\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; INSERT</span></span>\n<span id=\"cb4-72\"><a href=\"#cb4-72\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">[ -2 1 2 4 5 6 7 ]</span></span>\n<span id=\"cb4-73\"><a href=\"#cb4-73\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">8</span></span>\n<span id=\"cb4-74\"><a href=\"#cb4-74\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">======== EXPECT</span></span>\n<span id=\"cb4-75\"><a href=\"#cb4-75\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">F 7</span></span>\n<span id=\"cb4-76\"><a href=\"#cb4-76\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"st\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; FINISH</span></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n[ ]\n4\n======== EXPECT\nF 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 4 ]\n1\n======== EXPECT\nV 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 4 ]\n2\n======== EXPECT\nV 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 4 ]\n3\n======== EXPECT\nV 2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 4 ]\n4\n======== EXPECT\nV 3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 3 4 ]\n2\n======== EXPECT\nF 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 5 6 7 8 ]\n4\n======== EXPECT\nF 3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 7 8 9 ]\n0\n======== EXPECT\nF 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 3 5 6 7 9 10 ]\n2\n======== EXPECT\nF 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ 1 2 3 6 7 9 ]\n9\n======== EXPECT\nV 5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n[ -2 1 2 4 5 6 7 ]\n8\n======== EXPECT\nF 7\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "java": [
            {
                "name": "Main.java",
                "contents": "import java.util.*;\n\npublic class Main {\n    // Classe auxiliar para representar o retorno em formato (booleano, inteiro)\n    static class Result {\n        boolean found;\n        int position;\n\n        Result(boolean found, int position) {\n            this.found = found;\n            this.position = position;\n        }\n    }\n\n    public static Result betterSearch(List<Integer> arr, int value) {\n        return new Result(false, 0);\n    }\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] tokens = sc.nextLine().split(\" \");\n        List<Integer> vet = new ArrayList<>();\n        for (int i = 1; i < tokens.length - 1; i++) {\n            vet.add(Integer.parseInt(tokens[i]));\n        }\n        int value = Integer.parseInt(sc.nextLine());\n        Result result = betterSearch(vet, value);\n        System.out.println((result.found ? \"V\" : \"F\") + \" \" + result.position);\n        sc.close();\n    }\n}\n",
                "encoding": 0
            }
        ],
        "go": [
            {
                "name": "main.go",
                "contents": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc BetterSearch(slice []int, value int) (bool, int) {\n\t_, _ = slice, value\n\treturn false, 0\n}\n\nfunc main() {\n\tscanner := bufio.NewScanner(os.Stdin)\n\tscanner.Scan()\n\tparts := strings.Split(scanner.Text(), \" \")\n\tslice := []int{}\n\tfor _, elem := range parts[1 : len(parts)-1] {\n\t\tvalue, _ := strconv.Atoi(elem)\n\t\tslice = append(slice, value)\n\t}\n\tscanner.Scan()\n\tvalue, _ := strconv.Atoi(scanner.Text())\n\tfound, result := BetterSearch(slice, value)\n\tif found {\n\t\tfmt.Println(\"V\", result)\n\t} else {\n\t\tfmt.Println(\"F\", result)\n\t}\n}\n",
                "encoding": 0
            }
        ],
        "py": [
            {
                "name": "main.py",
                "contents": "def better_search(arr: list[int], value: int) -> tuple[bool, int]:\n    \"\"\"\n    Retorna a posi\u00e7\u00e3o do elemento x na lista arr ou onde ele deve ser inserido.\n    \"\"\"\n    return False, 0\nargs = input().split()[1:-1]\nvet: list[int] = []\nfor i in range(len(args)):\n    vet.append(int(args[i]))\n\nvalue = int(input())\nresult = better_search(vet, value)\nprint(\"V\" if result[0] else \"F\", result[1])\n",
                "encoding": 0
            }
        ]
    }
}
