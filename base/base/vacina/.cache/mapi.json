{
    "title": "@vacina: Otimizando vacinas",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@vacina: Otimizando vacinas</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"otimizando-vacinas\">Otimizando vacinas</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<h2 id=\"intro\">Intro</h2>\n<p>Um novo v\u00edrus mortal est\u00e1 infectando uma grande popula\u00e7\u00e3o de um\nplaneta. Um brilhante cientista chamado Wladimir descobriu uma nova cepa\nde v\u00edrus que pode curar essa doen\u00e7a. A vacina produzida a partir desse\nv\u00edrus tem v\u00e1rias pot\u00eancias, dependendo da contagem de c\u00e9lulas T. Uma\npessoa \u00e9 curada somente se a contagem de c\u00e9lulas T na vacina for maior\ndo que a contagem de c\u00e9lulas T da pessoa.</p>\n<p>Um m\u00e9dico recebe um conjunto de relat\u00f3rios contendo a contagem de\nc\u00e9lulas T de cada paciente infectado. O laborat\u00f3rio QuixaVax armazena\ntodas as vacinas que o m\u00e9dico possui e suas respectivas contagens de\nc\u00e9lulas T. Voc\u00ea precisa determinar se o m\u00e9dico pode salvar todos os\npacientes com as vacinas dispon\u00edveis. Note que o n\u00famero de vacinas e\npacientes \u00e9 igual.</p>\n<h2 id=\"draft\">Draft</h2>\n<ul>\n<li>Voc\u00ea deve implementar um algoritmo de ordena\u00e7\u00e3o e a fun\u00e7\u00e3o\n<code>vacinou</code> no arquivo <code>main.cpp</code>.</li>\n</ul>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodeed/arcade/blob/master/base/vacina/.cache/draft/cpp/main.cpp\">main.cpp</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n<h2 id=\"tests\">Tests</h2>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A primeira linha cont\u00e9m um n\u00famero inteiro N, representando o n\u00famero\nde vacinas e pacientes.</li>\n<li>A segunda linha cont\u00e9m N inteiros, representando a contagem de\nc\u00e9lulas T de cada vacina.</li>\n<li>A terceira linha cont\u00e9m N inteiros, representando a contagem de\nc\u00e9lulas T de cada paciente.</li>\n</ul>\n<h3 id=\"sa\u00edda\">Sa\u00edda</h3>\n<ul>\n<li>Imprima uma \u00fanica linha contendo Yes, se todos os pacientes podem\nser salvos, e No, caso contr\u00e1rio.</li>\n</ul>\n<h3 id=\"exemplos\">Exemplos</h3>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>5</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>123 146 454 542 456</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>100 328 248 689 200</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>No</span>\n<span id=\"cb1-7\"><a href=\"#cb1-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></code></pre></div>\n<blockquote>\n<p><strong>Explica\u00e7\u00e3o</strong>:</p>\n<ul>\n<li><p>A vacina 1 (contagem 123) cura o paciente 1 (contagem\n100).</p></li>\n<li><p>A vacina 2 (contagem 146) n\u00e3o cura nenhum outro.</p></li>\n</ul>\n</blockquote>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>5</span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>123 690 454 150 456</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>100 328 248 689 145</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a>Yes</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></code></pre></div>\n<blockquote>\n<p><strong>Explica\u00e7\u00e3o</strong>:</p>\n<p>A vacina 1 (contagem 123) cura o paciente 1 (contagem 100).</p>\n<p>A vacina 2 (contagem 690) cura o paciente 4.</p>\n<p>A vacina 3 (contagem 454) cura o paciente 2.</p>\n<p>A vacina 4 (contagem 150) cura o paciente 5.</p>\n<p>A vacina 5 (contagem 150) cura o paciente 3.</p>\n</blockquote>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n123 146 454 542 456\n100 328 248 689 200\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n123 690 454 150 456\n100 328 248 689 145\n======== EXPECT\nYes\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n10 61 55 88 17\n15 76 21 73 19\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n#include <vector>\n\n//Escolha e implemente um algoritmo de ordena\u00e7\u00e3o\nvoid ordenar(std::vector<int>& arr) {\n    (void) arr;\n}\n\nvoid vacinou(std::vector<int>& vacinas, std::vector<int>& pacientes){\n    (void) vacinas;\n    (void) pacientes;\n}\n\nint main(){\n    int n;\n    std::cin >> n;\n    \n    std::vector<int> vacinas(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> vacinas[i];\n    }\n\n    std::vector<int> pacientes(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> pacientes[i];\n    }\n\n    ordenar(vacinas);\n    ordenar(pacientes);\n\n    vacinou(vacinas, pacientes);\n}\n",
                "encoding": 0
            }
        ]
    }
}
