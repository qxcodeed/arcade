{
    "title": "@bitcoin: Investindo em ativos digitais",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@bitcoin: Investindo em ativos digitais</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n  <script\n  src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js\"\n  type=\"text/javascript\"></script>\n</head>\n<body>\n<h1 id=\"investindo-em-ativos-digitais\">Investindo em ativos\ndigitais</h1>\n<p>Suarez conheceu o maravilhoso mundo dos ativos digitais. Seu\npatrim\u00f4nio cresceu bastante usando a seguinte estrat\u00e9gia de\ninvestimento.</p>\n<p>Considere que Suarez possui N reais para investir e ele nunca investe\nmais do que K reais em um mesmo ativo digital com o objetivo de\ndiversificar sua carteira e reduzir o risco. Se N &gt; K, Suarez divide\nseu capital em duas partes de <span class=\"math inline\">\\(\\lceil N/2\n\\rceil\\)</span> e <span class=\"math inline\">\\(\\lfloor N/2\n\\rfloor\\)</span> reais e continua dividindo cada uma dessas partes de\nmaneira similar, at\u00e9 resultar em partes de no m\u00e1ximo K reais cada. Ao\nfinal desse processo, Suarez ter\u00e1 seu capital dividido em E partes e\ninvestir\u00e1 integralmente cada uma delas em ativos digitais diferentes.\nSua tarefa consiste em ajudar Suarez a descobrir em quantos ativos\ndigitais diferentes ele ir\u00e1 investir usando essa estrat\u00e9gia.</p>\n<p>Por exemplo, considere N = 18 e K = 4. Ap\u00f3s a primeira divis\u00e3o Jo\u00e3o\nter\u00e1 duas partes de 9 reais. Cada uma dessas partes ser\u00e1 dividida,\nresultando em duas partes de 5 reais e duas partes de 4 reais. As partes\nde 5 reais s\u00e3o ent\u00e3o divididas novamente, resultando em duas partes de 2\nreais e duas partes de 3 reais. As partes de 4 reais n\u00e3o precisam mais\nser divididas. Logo, todas as 6 partes resultantes (duas de 2 reais,\nduas de 3 reais e duas de 4 reais) possuem no m\u00e1ximo 4 reais e s\u00e3o\nutilizadas por Jo\u00e3o para investir em 6 ativos digitais distintos.</p>\n<h2 id=\"entrada\">Entrada</h2>\n<p>A entrada \u00e9 composta por uma \u00fanica linha contendo dois inteiros <span\nclass=\"math inline\">\\(n\\)</span> e <span\nclass=\"math inline\">\\(k\\)</span> respectivamente o capital inicial de\nSuarez (1 \u2264 N \u2264 1.000.000) em reais e a quantidade m\u00e1xima de reais (1 \u2264\nK \u2264 1.000.000) que Suarez pode investir para comprar a\u00e7\u00f5es de uma mesma\nempresa.</p>\n<h2 id=\"sa\u00edda\">Sa\u00edda</h2>\n<p>A sa\u00edda \u00e9 composta por uma \u00fanica linha contendo um \u00fanico n\u00famero, a\nquantidade de empresas E em que Suarez ir\u00e1 investir seu capital.</p>\n<h2 id=\"exemplo-de-entrada\">Exemplo de Entrada</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>18 4</span></code></pre></div>\n<h2 id=\"exemplo-de-sa\u00edda\">Exemplo de Sa\u00edda</h2>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>6</span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n804289383 42641504\n======== EXPECT\n32\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n681692777 10404975\n======== EXPECT\n128\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n957747793 424238335\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n719885386 209989720\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n596516649 294866449\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n25202362 2163660\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n783368690 319151369\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n44897763 14461279\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n365180540 79661266\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n304089172 87099048\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n35005211 14019823\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n294702567 106092316\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n336465782 19857075\n======== EXPECT\n32\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n278722862 94303692\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n145174067 33180937\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n101513929 25486062\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n315634022 4455014\n======== EXPECT\n128\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n369133069 18498963\n======== EXPECT\n32\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n59961393 20350432\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n628175011 86040517\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n131176229 13674523\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n859484421 195576079\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n608413784 148484753\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n734575198 137156329\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n149798315 16387131\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n129566413 55237114\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n412776091 185940710\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n911759956 293361895\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n137806862 42999170\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n982906996 135497281\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n511702305 37611709\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n937477084 421120701\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n572660336 13805833\n======== EXPECT\n64\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n805750846 21120037\n======== EXPECT\n64\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n100661313 24667489\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n141616124 13545833\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n939819582 121461381\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n998898814 49885146\n======== EXPECT\n32\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n610515434 59701779\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n374344043 11625666\n======== EXPECT\n64\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n477171087 117841265\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n945117276 472271264\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n780695788 319045690\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n491705403 197533744\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n752392754 346023268\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n53999932 22096624\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n411549676 197794664\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n943947739 96314536\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n855636226 38426134\n======== EXPECT\n32\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n469348094 78905163\n======== EXPECT\n8\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
