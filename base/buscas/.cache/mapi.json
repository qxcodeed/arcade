{
    "title": "@buscas: Buscas de strings",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@buscas: Buscas de strings</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Buscas de strings</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/buscas/cover.jpg\" /></p>\n<p>H\u00e1 um vetor de strings de entrada e um vetor de strings de consulta. Para cada sequ\u00eancia de consultas, determine quantas vezes ela ocorre na lista de sequ\u00eancias de entrada.</p>\n<p>Por exemplo, dada</p>\n<ul>\n<li><strong>entrada = ['ab','ab','abc' ]</strong> e</li>\n<li><strong>consultas = ['ab','abc','bc']</strong>,</li>\n</ul>\n<p>encontramos</p>\n<ul>\n<li>2 inst\u00e2ncias de <strong>'ab'</strong> ,</li>\n<li>1 de <strong>'abc'</strong> e</li>\n<li>0 de <strong>'bc'</strong>.</li>\n</ul>\n<p>Para cada consulta, adicionamos um elemento ao nosso vetor de retorno.</p>\n<h2>Descri\u00e7\u00e3o da fun\u00e7\u00e3o</h2>\n<p>Complete a fun\u00e7\u00e3o <em>matchingStrings</em>. A fun\u00e7\u00e3o deve retornar um vetor de n\u00fameros inteiros representando a frequ\u00eancia de ocorr\u00eancia de cada sequ\u00eancia de consultas em <em>sequ\u00eancias</em> .</p>\n<p>matchingStrings possui os seguintes par\u00e2metros:</p>\n<ul>\n<li><em>strings</em> - uma matriz de strings para pesquisar</li>\n<li><em>consultas</em> - uma matriz de cadeias de consulta</li>\n</ul>\n<h2>Como fazer</h2>\n<ul>\n<li>Utilize um mapa para preprocessar a matriz de strings guardando antecipadamente quais elementos existem e em que quantidade.</li>\n<li>Depois fa\u00e7a um la\u00e7o com as consultas, consultando pela chave do mapa.</li>\n</ul>\n<h2>Formato de entrada</h2>\n<ul>\n<li>Linha 1: tamanho do vetor de consultas</li>\n<li>Linha 2: vetor de consultas</li>\n<li>Linha 3: tamanho do vetor de buscas</li>\n<li>Linha 4: vetor de buscas</li>\n</ul>\n<h2>Formato de sa\u00edda</h2>\n<p>Retorne um vetor inteiro dos resultados de todas as consultas em ordem.</p>\n<h2>Testes</h2>\n<div class=\"language-py highlight\"><pre><span></span><code><span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"mi\">00</span>\n<span class=\"mi\">4</span> \n<span class=\"n\">aba</span> <span class=\"n\">baba</span> <span class=\"n\">aba</span> <span class=\"n\">xzxb</span>\n<span class=\"mi\">3</span>\n<span class=\"n\">aba</span> <span class=\"n\">xzxb</span> <span class=\"n\">ab</span>\n<span class=\"o\">========</span>\n<span class=\"mi\">2</span> <span class=\"mi\">1</span> <span class=\"mi\">0</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"mi\">01</span>\n<span class=\"mi\">3</span>\n<span class=\"n\">c</span> <span class=\"n\">c</span> <span class=\"n\">mpikv</span>\n<span class=\"mi\">8</span>\n<span class=\"n\">f</span> <span class=\"n\">c</span> <span class=\"n\">o</span> <span class=\"n\">uplbd</span> <span class=\"n\">o</span> <span class=\"n\">zl</span> <span class=\"n\">xoi</span> <span class=\"n\">mpikv</span>\n<span class=\"o\">========</span>\n<span class=\"mi\">0</span> <span class=\"mi\">2</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">1</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span> <span class=\"mi\">02</span>\n<span class=\"mi\">7</span>\n<span class=\"n\">qu</span> <span class=\"n\">qu</span> <span class=\"n\">pg</span> <span class=\"n\">qu</span> <span class=\"n\">qu</span> <span class=\"n\">cjyrx</span> <span class=\"n\">y</span>\n<span class=\"mi\">6</span>\n<span class=\"n\">o</span> <span class=\"n\">qu</span> <span class=\"n\">sxsse</span> <span class=\"n\">b</span> <span class=\"n\">pd</span> <span class=\"n\">yuv</span>\n<span class=\"o\">========</span>\n<span class=\"mi\">0</span> <span class=\"mi\">4</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span> <span class=\"mi\">0</span>\n<span class=\"o\">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 00\n4 \naba baba aba xzxb\n3\naba xzxb ab\n======== EXPECT\n2 1 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 01\n3\nc c mpikv\n8\nf c o uplbd o zl xoi mpikv\n======== EXPECT\n0 2 0 0 0 0 0 1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n7\nqu qu pg qu qu cjyrx y\n6\no qu sxsse b pd yuv\n======== EXPECT\n0 4 0 0 0 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 00\n2\nrw rw \n3 \ny rw iowz\n======== EXPECT\n0 2 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n4\njphjf urx xs ijn\n7\nfzsjg u hb daldh mgzd hgv jmqh\n======== EXPECT\n0 0 0 0 0 0 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n5\nsdurp tnl himf tnl tnl\n6\ny sdurp tvaez tnl undx u\n======== EXPECT\n0 1 0 3 0 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n7\naxx svw xhac svw svw wfsy svw\n5\nms axx svw svw svw\n======== EXPECT\n0 1 4 4 4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n3\nyakwy hkfx hkfx\n10\nv uqojw hkfx mo o qzb yakwy fsl evhb b\n======== EXPECT\n0 0 2 0 0 0 1 0 0 0\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n5\nodbor aeoow dbpak hwsh pwkr\n7\nwqtmc vpje ia vn kajln dwe zi\n======== EXPECT\n0 0 0 0 0 0 0\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
