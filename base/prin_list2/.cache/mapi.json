{
    "title": "@prin_list2: Princesa2 com lista ligada",
    "description": "# Princesa2 com lista ligada\n\n[![_](https://raw.githubusercontent.com/qxcodeed/arcade/master/base/prin_list2/../princesa-lista-2/cover.jpg)](https://www.youtube.com/watch?v=uCsD3ZGzMgE)\n\nEsse jogo \u00e9 equivalente ao V1 por\u00e9m com duas diferen\u00e7as.\n\n- N\u00fameros positivos e negativos se alternam. Se tivermos 5 participantes e o primeiro for negativo, ent\u00e3o nosso vetor ser\u00e1:\n  - `[ -1 2 -3 4 -5 ]`\n- O valor de F, denominado fase, poder\u00e1 ter os valor 1 ou -1 e indica se o primeiro participante ser\u00e1 positivo ou negativo.\n- Se a espada estiver com um participante com n\u00famero negativo:\n  - Ele dever\u00e1 matar o participantes \u00e0 sua esquerda.\n  - Depois dever\u00e1 passar a espada para o participante \u00e0 sua esquerda.\n- Se a espada estiver com um participante de n\u00famero positivo\n  - Ele dever\u00e1 matar o participante \u00e0 sua direita no vetor.\n  - Depois passar a espada para o participante a sua direita.\n\n___\n\n- Entrada:\n  - Os valores de **N** e **E** e **F** na primeira linha.\n- Sa\u00edda:\n  - Etapa a etapa, os elementos que est\u00e3o vivos na fila circular.\n    - Indicando com um > ou < quem est\u00e1 com a espada dependendo se \u00e9 positivo ou negativo.\n\n___\nImplemente utilizando o algoritmo utilizando a estrutura list do c++.\n\nTestes:\n\n```txt\n>>>>>>>> 01\n3 1 1\n========\n[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<<\n\n>>>>>>>> 02\n3 2 1\n========\n[ 1 <-2 3 ]\n[ -2 3> ]\n[ 3> ]\n<<<<<<<<\n\n>>>>>>>> 03\n3 3 1\n========\n[ 1 -2 3> ]\n[ <-2 3 ]\n[ <-2 ]\n<<<<<<<<\n\n>>>>>>>> 04\n3 1 -1\n========\n[ <-1 2 -3 ]\n[ -1 2> ]\n[ 2> ]\n<<<<<<<<\n\n>>>>>>>> 05\n3 2 -1\n========\n[ -1 2> -3 ]\n[ <-1 2 ]\n[ <-1 ]\n<<<<<<<<\n\n>>>>>>>> 06\n3 3 -1\n========\n[ -1 2 <-3 ]\n[ <-1 -3 ]\n[ <-1 ]\n<<<<<<<<\n\n>>>>>>>> 07\n4 1 1\n========\n[ 1> -2 3 -4 ]\n[ 1 3> -4 ]\n[ 1> 3 ]\n[ 1> ]\n<<<<<<<<\n\n>>>>>>>> 08\n4 2 1\n========\n[ 1 <-2 3 -4 ]\n[ -2 3 <-4 ]\n[ <-2 -4 ]\n[ <-2 ]\n<<<<<<<<\n\n>>>>>>>> 09\n4 3 1\n========\n[ 1 -2 3> -4 ]\n[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<<\n\n>>>>>>>> 10\n4 4 1\n========\n[ 1 -2 3 <-4 ]\n[ 1 <-2 -4 ]\n[ -2 <-4 ]\n[ <-4 ]\n<<<<<<<<\n\n>>>>>>>> 11\n6 3 -1\n========\n[ -1 2 <-3 4 -5 6 ]\n[ <-1 -3 4 -5 6 ]\n[ -1 -3 4 <-5 ]\n[ -1 <-3 -5 ]\n[ -3 <-5 ]\n[ <-5 ]\n<<<<<<<<\n\n>>>>>>>> 12\n9 9 1\n========\n[ 1 -2 3 -4 5 -6 7 -8 9> ]\n[ <-2 3 -4 5 -6 7 -8 9 ]\n[ -2 3 -4 5 -6 7 <-8 ]\n[ -2 3 -4 5 <-6 -8 ]\n[ -2 3 <-4 -6 -8 ]\n[ <-2 -4 -6 -8 ]\n[ -2 -4 <-6 ]\n[ <-2 -6 ]\n[ <-2 ]\n<<<<<<<<\n\n>>>>>>>> 13\n20 1 1\n========\n[ 1> -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3> -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5> -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7> -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9> -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11> -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13> -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15> -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17> -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17 19> -20 ]\n[ 1> 3 5 7 9 11 13 15 17 19 ]\n[ 1 5> 7 9 11 13 15 17 19 ]\n[ 1 5 9> 11 13 15 17 19 ]\n[ 1 5 9 13> 15 17 19 ]\n[ 1 5 9 13 17> 19 ]\n[ 1> 5 9 13 17 ]\n[ 1 9> 13 17 ]\n[ 1 9 17> ]\n[ 9> 17 ]\n[ 9> ]\n<<<<<<<<\n\n\n\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n3 1 1\n======== EXPECT\n[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n3 2 1\n======== EXPECT\n[ 1 <-2 3 ]\n[ -2 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3 3 1\n======== EXPECT\n[ 1 -2 3> ]\n[ <-2 3 ]\n[ <-2 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n3 1 -1\n======== EXPECT\n[ <-1 2 -3 ]\n[ -1 2> ]\n[ 2> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n3 2 -1\n======== EXPECT\n[ -1 2> -3 ]\n[ <-1 2 ]\n[ <-1 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n3 3 -1\n======== EXPECT\n[ -1 2 <-3 ]\n[ <-1 -3 ]\n[ <-1 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n4 1 1\n======== EXPECT\n[ 1> -2 3 -4 ]\n[ 1 3> -4 ]\n[ 1> 3 ]\n[ 1> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n4 2 1\n======== EXPECT\n[ 1 <-2 3 -4 ]\n[ -2 3 <-4 ]\n[ <-2 -4 ]\n[ <-2 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n4 3 1\n======== EXPECT\n[ 1 -2 3> -4 ]\n[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n4 4 1\n======== EXPECT\n[ 1 -2 3 <-4 ]\n[ 1 <-2 -4 ]\n[ -2 <-4 ]\n[ <-4 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n6 3 -1\n======== EXPECT\n[ -1 2 <-3 4 -5 6 ]\n[ <-1 -3 4 -5 6 ]\n[ -1 -3 4 <-5 ]\n[ -1 <-3 -5 ]\n[ -3 <-5 ]\n[ <-5 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 12\n9 9 1\n======== EXPECT\n[ 1 -2 3 -4 5 -6 7 -8 9> ]\n[ <-2 3 -4 5 -6 7 -8 9 ]\n[ -2 3 -4 5 -6 7 <-8 ]\n[ -2 3 -4 5 <-6 -8 ]\n[ -2 3 <-4 -6 -8 ]\n[ <-2 -4 -6 -8 ]\n[ -2 -4 <-6 ]\n[ <-2 -6 ]\n[ <-2 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 13\n20 1 1\n======== EXPECT\n[ 1> -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3> -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5> -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7> -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9> -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11> -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13> -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15> -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17> -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17 19> -20 ]\n[ 1> 3 5 7 9 11 13 15 17 19 ]\n[ 1 5> 7 9 11 13 15 17 19 ]\n[ 1 5 9> 11 13 15 17 19 ]\n[ 1 5 9 13> 15 17 19 ]\n[ 1 5 9 13 17> 19 ]\n[ 1> 5 9 13 17 ]\n[ 1 9> 13 17 ]\n[ 1 9 17> ]\n[ 9> 17 ]\n[ 9> ]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "go": [
            {
                "name": "main.go",
                "contents": "package main\n\nimport (\n\t\"container/list\"\n\t\"fmt\"\n)\n\n// mostra a lista com o elemento sword destacado\nfunc ToStr(l *list.List, sword *list.Element) string {\n\treturn \"\"\n}\n\n// move para frente na lista circular\nfunc Next(l *list.List, it *list.Element) *list.Element {\n\treturn nil\n}\n\n// move para tras na lista circular\nfunc Prev(l *list.List, it *list.Element) *list.Element {\n\treturn l.Front()\n}\n\nfunc main() {\n\tvar qtd, chosen, fase int\n\tfmt.Scan(&qtd, &chosen, &fase)\n\tl := list.New()\n\tfor i := 1; i <= qtd; i++ {\n\t\tl.PushBack(i * fase)\n\t\tfase = -fase\n\t}\n\tsword := l.Front()\n\tfor range chosen - 1 {\n\t\tsword = Next(l, sword)\n\t}\n\tfor range qtd - 1 {\n\t\tfmt.Println(ToStr(l, sword))\n\t\tif sword.Value.(int) > 0 {\n\t\t\tl.Remove(Next(l, sword))\n\t\t\tsword = Next(l, sword)\n\t\t} else {\n\t\t\tl.Remove(Prev(l, sword))\n\t\t\tsword = Prev(l, sword)\n\t\t}\n\t}\n\tfmt.Println(ToStr(l, sword))\n}\n",
                "type": "show"
            }
        ]
    }
}
