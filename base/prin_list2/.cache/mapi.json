{
    "title": "@prin_list2: Princesa2 com lista ligada",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@prin_list2: Princesa2 com lista ligada</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Princesa2 com lista ligada</h1>\n<p><a href=\"https://www.youtube.com/watch?v=uCsD3ZGzMgE\"><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/prin_list2/../princesa-lista-2/cover.jpg\" /></a></p>\n<p>Esse jogo \u00e9 equivalente ao V1 por\u00e9m com duas diferen\u00e7as.</p>\n<ul>\n<li>N\u00fameros positivos e negativos se alternam. Se tivermos 5 participantes e o primeiro for negativo, ent\u00e3o nosso vetor ser\u00e1:<ul>\n<li><code>[ -1 2 -3 4 -5 ]</code></li>\n</ul>\n</li>\n<li>O valor de F, denominado fase, poder\u00e1 ter os valor 1 ou -1 e indica se o primeiro participante ser\u00e1 positivo ou negativo.</li>\n<li>Se a espada estiver com um participante com n\u00famero negativo:<ul>\n<li>Ele dever\u00e1 matar o participantes \u00e0 sua esquerda.</li>\n<li>Depois dever\u00e1 passar a espada para o participante \u00e0 sua esquerda.</li>\n</ul>\n</li>\n<li>Se a espada estiver com um participante de n\u00famero positivo<ul>\n<li>Ele dever\u00e1 matar o participante \u00e0 sua direita no vetor.</li>\n<li>Depois passar a espada para o participante a sua direita.</li>\n</ul>\n</li>\n</ul>\n<hr />\n<ul>\n<li>Entrada:<ul>\n<li>Os valores de <strong>N</strong> e <strong>E</strong> e <strong>F</strong> na primeira linha.</li>\n</ul>\n</li>\n<li>Sa\u00edda:<ul>\n<li>Etapa a etapa, os elementos que est\u00e3o vivos na fila circular.<ul>\n<li>Indicando com um &gt; ou &lt; quem est\u00e1 com a espada dependendo se \u00e9 positivo ou negativo.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<hr />\n<p>Implemente utilizando o algoritmo utilizando a estrutura list do c++.</p>\n<p>Testes:</p>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 01\n3 1 1\n========\n[ 1&gt; -2 3 ]\n[ 1 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 02\n3 2 1\n========\n[ 1 &lt;-2 3 ]\n[ -2 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 03\n3 3 1\n========\n[ 1 -2 3&gt; ]\n[ &lt;-2 3 ]\n[ &lt;-2 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 04\n3 1 -1\n========\n[ &lt;-1 2 -3 ]\n[ -1 2&gt; ]\n[ 2&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 05\n3 2 -1\n========\n[ -1 2&gt; -3 ]\n[ &lt;-1 2 ]\n[ &lt;-1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 06\n3 3 -1\n========\n[ -1 2 &lt;-3 ]\n[ &lt;-1 -3 ]\n[ &lt;-1 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 07\n4 1 1\n========\n[ 1&gt; -2 3 -4 ]\n[ 1 3&gt; -4 ]\n[ 1&gt; 3 ]\n[ 1&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 08\n4 2 1\n========\n[ 1 &lt;-2 3 -4 ]\n[ -2 3 &lt;-4 ]\n[ &lt;-2 -4 ]\n[ &lt;-2 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 09\n4 3 1\n========\n[ 1 -2 3&gt; -4 ]\n[ 1&gt; -2 3 ]\n[ 1 3&gt; ]\n[ 3&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 10\n4 4 1\n========\n[ 1 -2 3 &lt;-4 ]\n[ 1 &lt;-2 -4 ]\n[ -2 &lt;-4 ]\n[ &lt;-4 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 11\n6 3 -1\n========\n[ -1 2 &lt;-3 4 -5 6 ]\n[ &lt;-1 -3 4 -5 6 ]\n[ -1 -3 4 &lt;-5 ]\n[ -1 &lt;-3 -5 ]\n[ -3 &lt;-5 ]\n[ &lt;-5 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 12\n9 9 1\n========\n[ 1 -2 3 -4 5 -6 7 -8 9&gt; ]\n[ &lt;-2 3 -4 5 -6 7 -8 9 ]\n[ -2 3 -4 5 -6 7 &lt;-8 ]\n[ -2 3 -4 5 &lt;-6 -8 ]\n[ -2 3 &lt;-4 -6 -8 ]\n[ &lt;-2 -4 -6 -8 ]\n[ -2 -4 &lt;-6 ]\n[ &lt;-2 -6 ]\n[ &lt;-2 ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 13\n20 1 1\n========\n[ 1&gt; -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3&gt; -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5&gt; -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7&gt; -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9&gt; -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11&gt; -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13&gt; -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15&gt; -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17&gt; -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17 19&gt; -20 ]\n[ 1&gt; 3 5 7 9 11 13 15 17 19 ]\n[ 1 5&gt; 7 9 11 13 15 17 19 ]\n[ 1 5 9&gt; 11 13 15 17 19 ]\n[ 1 5 9 13&gt; 15 17 19 ]\n[ 1 5 9 13 17&gt; 19 ]\n[ 1&gt; 5 9 13 17 ]\n[ 1 9&gt; 13 17 ]\n[ 1 9 17&gt; ]\n[ 9&gt; 17 ]\n[ 9&gt; ]\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT 01\n3 1 1\n======== EXPECT\n[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 02\n3 2 1\n======== EXPECT\n[ 1 <-2 3 ]\n[ -2 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 03\n3 3 1\n======== EXPECT\n[ 1 -2 3> ]\n[ <-2 3 ]\n[ <-2 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 04\n3 1 -1\n======== EXPECT\n[ <-1 2 -3 ]\n[ -1 2> ]\n[ 2> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 05\n3 2 -1\n======== EXPECT\n[ -1 2> -3 ]\n[ <-1 2 ]\n[ <-1 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 06\n3 3 -1\n======== EXPECT\n[ -1 2 <-3 ]\n[ <-1 -3 ]\n[ <-1 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 07\n4 1 1\n======== EXPECT\n[ 1> -2 3 -4 ]\n[ 1 3> -4 ]\n[ 1> 3 ]\n[ 1> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 08\n4 2 1\n======== EXPECT\n[ 1 <-2 3 -4 ]\n[ -2 3 <-4 ]\n[ <-2 -4 ]\n[ <-2 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 09\n4 3 1\n======== EXPECT\n[ 1 -2 3> -4 ]\n[ 1> -2 3 ]\n[ 1 3> ]\n[ 3> ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 10\n4 4 1\n======== EXPECT\n[ 1 -2 3 <-4 ]\n[ 1 <-2 -4 ]\n[ -2 <-4 ]\n[ <-4 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 11\n6 3 -1\n======== EXPECT\n[ -1 2 <-3 4 -5 6 ]\n[ <-1 -3 4 -5 6 ]\n[ -1 -3 4 <-5 ]\n[ -1 <-3 -5 ]\n[ -3 <-5 ]\n[ <-5 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 12\n9 9 1\n======== EXPECT\n[ 1 -2 3 -4 5 -6 7 -8 9> ]\n[ <-2 3 -4 5 -6 7 -8 9 ]\n[ -2 3 -4 5 -6 7 <-8 ]\n[ -2 3 -4 5 <-6 -8 ]\n[ -2 3 <-4 -6 -8 ]\n[ <-2 -4 -6 -8 ]\n[ -2 -4 <-6 ]\n[ <-2 -6 ]\n[ <-2 ]\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT 13\n20 1 1\n======== EXPECT\n[ 1> -2 3 -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3> -4 5 -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5> -6 7 -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7> -8 9 -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9> -10 11 -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11> -12 13 -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13> -14 15 -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15> -16 17 -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17> -18 19 -20 ]\n[ 1 3 5 7 9 11 13 15 17 19> -20 ]\n[ 1> 3 5 7 9 11 13 15 17 19 ]\n[ 1 5> 7 9 11 13 15 17 19 ]\n[ 1 5 9> 11 13 15 17 19 ]\n[ 1 5 9 13> 15 17 19 ]\n[ 1 5 9 13 17> 19 ]\n[ 1> 5 9 13 17 ]\n[ 1 9> 13 17 ]\n[ 1 9 17> ]\n[ 9> 17 ]\n[ 9> ]\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "go": [
            {
                "name": "main.go",
                "contents": "package main\n\nimport (\n\t\"container/list\"\n\t\"fmt\"\n)\n\n// mostra a lista com o elemento sword destacado\nfunc ToStr(l *list.List, sword *list.Element) string {\n\treturn \"\"\n}\n\n// move para frente na lista circular\nfunc Next(l *list.List, it *list.Element) *list.Element {\n\treturn nil\n}\n\n// move para tras na lista circular\nfunc Prev(l *list.List, it *list.Element) *list.Element {\n\treturn l.Front()\n}\n\nfunc main() {\n\tvar qtd, chosen, fase int\n\tfmt.Scan(&qtd, &chosen, &fase)\n\tl := list.New()\n\tfor i := 1; i <= qtd; i++ {\n\t\tl.PushBack(i * fase)\n\t\tfase = -fase\n\t}\n\tsword := l.Front()\n\tfor range chosen - 1 {\n\t\tsword = Next(l, sword)\n\t}\n\tfor range qtd - 1 {\n\t\tfmt.Println(ToStr(l, sword))\n\t\tif sword.Value.(int) > 0 {\n\t\t\tl.Remove(Next(l, sword))\n\t\t\tsword = Next(l, sword)\n\t\t} else {\n\t\t\tl.Remove(Prev(l, sword))\n\t\t\tsword = Prev(l, sword)\n\t\t}\n\t}\n\tfmt.Println(ToStr(l, sword))\n}\n",
                "type": "show"
            }
        ]
    }
}
