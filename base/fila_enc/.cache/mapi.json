{
    "title": "@fila_enc: Fila encadeada CPP",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@fila_enc: Fila encadeada CPP</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@fila_enc: Fila encadeada CPP</h1>\n            <h1 id=\"fila-encadeada-cpp\">Fila encadeada CPP</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<h2 id=\"intro\">Intro</h2>\n<p>Neste exerc\u00edcio, voc\u00ea implementar\u00e1 uma <strong>Fila</strong> utilizando uma <strong>Lista Simplesmente Encadeada</strong>. Fila \u00e9 uma estrutura de dados linear que segue o princ\u00edpio FIFO (<strong>First In, First Out</strong>), onde o primeiro elemento inserido \u00e9 tamb\u00e9m o primeiro a ser removido.</p>\n<p>Na implementa\u00e7\u00e3o de uma fila encadeada, cada n\u00f3 cont\u00e9m uma informa\u00e7\u00e3o e um ponteiro para o pr\u00f3ximo elemento. A estrutura da fila \u00e9 composta por:</p>\n<ul>\n<li><code>head</code>: ponteiro para o primeiro n\u00f3 da fila.</li>\n<li><code>tail</code>: ponteiro para o \u00faltimo n\u00f3 da fila.</li>\n</ul>\n<p>Cada opera\u00e7\u00e3o de inser\u00e7\u00e3o e remo\u00e7\u00e3o na fila deve atualizar o atributo <code>size</code>, que representa o n\u00famero de elementos na fila.</p>\n<h3 id=\"estrutura-do-exercicio\">Estrutura do Exerc\u00edcio</h3>\n<p>A classe <code>LinkedQueue</code> est\u00e1 definida no arquivo <code>lib.cpp</code> e possui os seguintes m\u00e9todos:</p>\n<ul>\n<li>~~<code>LinkedQueue()</code>~~</li>\n<li>~~<code>~LinkedQueue()</code>~~</li>\n<li><code>void push(int info)</code></li>\n<li><code>void pop()</code></li>\n<li><code>int peek()</code></li>\n<li><code>void clear()</code></li>\n<li>~~<code>void empty()</code>~~</li>\n<li>~~<code>void print()</code>~~</li>\n</ul>\n<p>Os m\u00e9todos riscados j\u00e1 est\u00e3o implementados; voc\u00ea deve implementar os demais m\u00e9todos, conforme as descri\u00e7\u00f5es nos coment\u00e1rios do arquivo <code>lib.cpp</code>.</p>\n<h3 id=\"observacoes\">Observa\u00e7\u00f5es</h3>\n<ul>\n<li><strong>OBS. 1:</strong> N\u00e3o altere os m\u00e9todos j\u00e1 implementados.</li>\n<li><strong>OBS. 2:</strong> N\u00e3o \u00e9 necess\u00e1rio escrever a fun\u00e7\u00e3o <code>main()</code>, pois ela j\u00e1 est\u00e1 implementada no ambiente de avalia\u00e7\u00e3o.</li>\n</ul>\n<h2 id=\"draft\">Draft</h2>\n<!-- links .cache/draft -->\n<!-- links -->\n\n<h2 id=\"tests\">Tests</h2>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada consistir\u00e1 em uma sequ\u00eancia de opera\u00e7\u00f5es de inser\u00e7\u00e3o (<code>push</code>), remo\u00e7\u00e3o (<code>pop</code>), consulta (<code>peek</code>), e limpeza (<code>clear</code>).</li>\n</ul>\n<h3 id=\"saida\">Sa\u00edda</h3>\n<ul>\n<li>O programa deve exibir o estado da fila conforme as opera\u00e7\u00f5es realizadas, seguindo o formato descrito nos casos de teste.</li>\n</ul>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
