{
    "title": "@pilha_dupla: Pilha Dupla - CPP",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@pilha_dupla: Pilha Dupla - CPP</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@pilha_dupla: Pilha Dupla - CPP</h1>\n            <h1 id=\"pilha-dupla-cpp\">Pilha Dupla - CPP</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<h2 id=\"intro\">Intro</h2>\n<p>Neste exerc\u00edcio, voc\u00ea implementar\u00e1 uma <strong>Pilha Dupla</strong> usando um \u00fanico vetor para gerenciar duas pilhas diferentes: Pilha A e Pilha B. Nessa configura\u00e7\u00e3o, o topo da <strong>Pilha A</strong> come\u00e7a no in\u00edcio do vetor, enquanto o topo da <strong>Pilha B</strong> come\u00e7a no final. Essa abordagem permite que as duas pilhas compartilhem o mesmo espa\u00e7o de armazenamento sem sobrepor seus elementos.</p>\n<p>As opera\u00e7\u00f5es de inser\u00e7\u00e3o, remo\u00e7\u00e3o e visualiza\u00e7\u00e3o de cada pilha (<code>push</code>, <code>pop</code>, <code>peek</code>) devem ser separadas para cada uma das pilhas, garantindo que n\u00e3o haja sobrescrita de elementos entre Pilha A e Pilha B. O objetivo \u00e9 que as opera\u00e7\u00f5es sejam o mais eficientes poss\u00edvel $O(1)$, sem desperd\u00edcio de espa\u00e7o.</p>\n<p>A estrutura de dados ser\u00e1 uma <strong>Lista Sequencial</strong> onde os elementos s\u00e3o armazenados em um array chamado <code>Arr</code>, com as informa\u00e7\u00f5es representadas como inteiros. O arquivo <code>lib.cpp</code> cont\u00e9m a classe <code>DoubleStack</code>, com m\u00e9todos j\u00e1 implementados e outros a serem desenvolvidos. Os m\u00e9todos riscados j\u00e1 est\u00e3o implementados.</p>\n<h3 id=\"metodos-na-classe-doublestack\">M\u00e9todos na Classe <code>DoubleStack</code></h3>\n<ul>\n<li>~~<code>DoubleStack()</code>~~</li>\n<li>~~<code>~DoubleStack()</code>~~</li>\n<li>~~<code>void pushA(int info)</code>~~</li>\n<li><code>void popA()</code></li>\n<li><code>int peekA()</code></li>\n<li><code>void clearA()</code></li>\n<li><code>void pushB(int info)</code></li>\n<li><code>void popB()</code></li>\n<li><code>int peekB()</code></li>\n<li><code>void clearB()</code></li>\n<li>~~<code>bool full()</code>~~</li>\n<li>~~<code>void print()</code>~~</li>\n</ul>\n<h3 id=\"observacoes\">Observa\u00e7\u00f5es</h3>\n<ul>\n<li><strong>OBS. 1:</strong> N\u00e3o altere os m\u00e9todos j\u00e1 implementados.</li>\n<li><strong>OBS. 2:</strong> N\u00e3o \u00e9 necess\u00e1rio escrever a fun\u00e7\u00e3o <code>main()</code>, pois ela j\u00e1 est\u00e1 implementada internamente no ambiente de avalia\u00e7\u00e3o.</li>\n</ul>\n<h2 id=\"draft\">Draft</h2>\n<ul>\n<li>Implemente os m\u00e9todos faltantes no arquivo <code>lib.cpp</code> com base nas descri\u00e7\u00f5es fornecidas para cada opera\u00e7\u00e3o.</li>\n</ul>\n<!-- links .cache/draft -->\n<!-- links -->\n\n<h2 id=\"tests\">Tests</h2>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada consistir\u00e1 em uma sequ\u00eancia de opera\u00e7\u00f5es realizadas nas Pilhas A e B, incluindo inser\u00e7\u00f5es, remo\u00e7\u00f5es e verifica\u00e7\u00f5es de estado, como se ambas est\u00e3o cheias ou qual elemento est\u00e1 no topo.</li>\n</ul>\n<h3 id=\"saida\">Sa\u00edda</h3>\n<ul>\n<li>A sa\u00edda ser\u00e1 composta pelos resultados das opera\u00e7\u00f5es, incluindo o valor no topo de cada pilha ou mensagens indicando o estado de cada pilha.</li>\n</ul>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
