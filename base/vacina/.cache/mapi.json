{
    "title": "@vacina: Otimizando vacinas",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@vacina: Otimizando vacinas</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@vacina: Otimizando vacinas</h1>\n            <h1 id=\"otimizando-vacinas\">Otimizando vacinas</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<h2 id=\"intro\">Intro</h2>\n<p>Um novo v\u00edrus mortal est\u00e1 infectando uma grande popula\u00e7\u00e3o de um planeta. Um brilhante cientista chamado Wladimir descobriu uma nova cepa de v\u00edrus que pode curar essa doen\u00e7a. A vacina produzida a partir desse v\u00edrus tem v\u00e1rias pot\u00eancias, dependendo da contagem de c\u00e9lulas T. Uma pessoa \u00e9 curada somente se a contagem de c\u00e9lulas T na vacina for maior do que a contagem de c\u00e9lulas T da pessoa.</p>\n<p>Um m\u00e9dico recebe um conjunto de relat\u00f3rios contendo a contagem de c\u00e9lulas T de cada paciente infectado. O laborat\u00f3rio QuixaVax armazena todas as vacinas que o m\u00e9dico possui e suas respectivas contagens de c\u00e9lulas T. Voc\u00ea precisa determinar se o m\u00e9dico pode salvar todos os pacientes com as vacinas dispon\u00edveis. Note que o n\u00famero de vacinas e pacientes \u00e9 igual.</p>\n<h2 id=\"draft\">Draft</h2>\n<ul>\n<li>Voc\u00ea deve implementar um algoritmo de ordena\u00e7\u00e3o e a fun\u00e7\u00e3o <code>vacinou</code> no arquivo <code>main.cpp</code>.</li>\n</ul>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp</li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/vacina/.cache/draft/cpp/main.cpp\">main.cpp</a></li>\n</ul>\n<!-- links -->\n\n<h2 id=\"tests\">Tests</h2>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A primeira linha cont\u00e9m um n\u00famero inteiro N, representando o n\u00famero de vacinas e pacientes.</li>\n<li>A segunda linha cont\u00e9m N inteiros, representando a contagem de c\u00e9lulas T de cada vacina.</li>\n<li>A terceira linha cont\u00e9m N inteiros, representando a contagem de c\u00e9lulas T de cada paciente.</li>\n</ul>\n<h3 id=\"saida\">Sa\u00edda</h3>\n<ul>\n<li>Imprima uma \u00fanica linha contendo Yes, se todos os pacientes podem ser salvos, e No, caso contr\u00e1rio.</li>\n</ul>\n<h3 id=\"exemplos\">Exemplos</h3>\n<pre class=\"codehilite\"><code class=\"language-txt\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n5\n123 146 454 542 456\n100 328 248 689 200\n========\nNo\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n\n<blockquote>\n<p><strong>Explica\u00e7\u00e3o</strong>:</p>\n<ul>\n<li>\n<p>A vacina 1 (contagem 123) cura o paciente 1 (contagem 100).</p>\n</li>\n<li>\n<p>A vacina 2 (contagem 146) n\u00e3o cura nenhum outro.</p>\n</li>\n</ul>\n</blockquote>\n<pre class=\"codehilite\"><code class=\"language-txt\">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n5\n123 690 454 150 456\n100 328 248 689 145\n========\nYes\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre>\n\n<blockquote>\n<p><strong>Explica\u00e7\u00e3o</strong>:</p>\n<p>A vacina 1 (contagem 123) cura o paciente 1 (contagem 100).</p>\n<p>A vacina 2 (contagem 690) cura o paciente 4.</p>\n<p>A vacina 3 (contagem 454) cura o paciente 2.</p>\n<p>A vacina 4 (contagem 150) cura o paciente 5.</p>\n<p>A vacina 5 (contagem 150) cura o paciente 3.</p>\n</blockquote>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n123 146 454 542 456\n100 328 248 689 200\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n123 690 454 150 456\n100 328 248 689 145\n======== EXPECT\nYes\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n10 61 55 88 17\n15 76 21 73 19\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n#include <vector>\n\n//Escolha e implemente um algoritmo de ordena\u00e7\u00e3o\nvoid ordenar(std::vector<int>& arr) {\n    (void) arr;\n}\n\nvoid vacinou(std::vector<int>& vacinas, std::vector<int>& pacientes){\n    (void) vacinas;\n    (void) pacientes;\n}\n\nint main(){\n    int n;\n    std::cin >> n;\n    \n    std::vector<int> vacinas(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> vacinas[i];\n    }\n\n    std::vector<int> pacientes(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> pacientes[i];\n    }\n\n    ordenar(vacinas);\n    ordenar(pacientes);\n\n    vacinou(vacinas, pacientes);\n}\n",
                "encoding": 0
            }
        ]
    }
}
