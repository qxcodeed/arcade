{
    "title": "@vacina: Otimizando vacinas",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@vacina: Otimizando vacinas</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Otimizando vacinas</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<h2>Intro</h2>\n<p>Um novo v\u00edrus mortal est\u00e1 infectando uma grande popula\u00e7\u00e3o de um planeta. Um brilhante cientista chamado Wladimir descobriu uma nova cepa de v\u00edrus que pode curar essa doen\u00e7a. A vacina produzida a partir desse v\u00edrus tem v\u00e1rias pot\u00eancias, dependendo da contagem de c\u00e9lulas T. Uma pessoa \u00e9 curada somente se a contagem de c\u00e9lulas T na vacina for maior do que a contagem de c\u00e9lulas T da pessoa.</p>\n<p>Um m\u00e9dico recebe um conjunto de relat\u00f3rios contendo a contagem de c\u00e9lulas T de cada paciente infectado. O laborat\u00f3rio QuixaVax armazena todas as vacinas que o m\u00e9dico possui e suas respectivas contagens de c\u00e9lulas T. Voc\u00ea precisa determinar se o m\u00e9dico pode salvar todos os pacientes com as vacinas dispon\u00edveis. Note que o n\u00famero de vacinas e pacientes \u00e9 igual.</p>\n<h2>Draft</h2>\n<ul>\n<li>Voc\u00ea deve implementar um algoritmo de ordena\u00e7\u00e3o e a fun\u00e7\u00e3o <code>vacinou</code> no arquivo <code>main.cpp</code>.</li>\n</ul>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp<ul>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/vacina/.cache/draft/cpp/main.cpp\">main.cpp</a></li>\n</ul>\n</li>\n</ul>\n<!-- links -->\n\n<h2>Tests</h2>\n<h3>Entrada</h3>\n<ul>\n<li>A primeira linha cont\u00e9m um n\u00famero inteiro N, representando o n\u00famero de vacinas e pacientes.</li>\n<li>A segunda linha cont\u00e9m N inteiros, representando a contagem de c\u00e9lulas T de cada vacina.</li>\n<li>A terceira linha cont\u00e9m N inteiros, representando a contagem de c\u00e9lulas T de cada paciente.</li>\n</ul>\n<h3>Sa\u00edda</h3>\n<ul>\n<li>Imprima uma \u00fanica linha contendo Yes, se todos os pacientes podem ser salvos, e No, caso contr\u00e1rio.</li>\n</ul>\n<h3>Exemplos</h3>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n5\n123 146 454 542 456\n100 328 248 689 200\n========\nNo\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n<blockquote>\n<p><strong>Explica\u00e7\u00e3o</strong>:</p>\n<ul>\n<li>\n<p>A vacina 1 (contagem 123) cura o paciente 1 (contagem 100).</p>\n</li>\n<li>\n<p>A vacina 2 (contagem 146) n\u00e3o cura nenhum outro.</p>\n</li>\n</ul>\n</blockquote>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n5\n123 690 454 150 456\n100 328 248 689 145\n========\nYes\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n<blockquote>\n<p><strong>Explica\u00e7\u00e3o</strong>:</p>\n<p>A vacina 1 (contagem 123) cura o paciente 1 (contagem 100).</p>\n<p>A vacina 2 (contagem 690) cura o paciente 4.</p>\n<p>A vacina 3 (contagem 454) cura o paciente 2.</p>\n<p>A vacina 4 (contagem 150) cura o paciente 5.</p>\n<p>A vacina 5 (contagem 150) cura o paciente 3.</p>\n</blockquote>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n5\n123 146 454 542 456\n100 328 248 689 200\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n123 690 454 150 456\n100 328 248 689 145\n======== EXPECT\nYes\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n10 61 55 88 17\n15 76 21 73 19\n======== EXPECT\nNo\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n#include <vector>\n\n//Escolha e implemente um algoritmo de ordena\u00e7\u00e3o\nvoid ordenar(std::vector<int>& arr) {\n    (void) arr;\n}\n\nvoid vacinou(std::vector<int>& vacinas, std::vector<int>& pacientes){\n    (void) vacinas;\n    (void) pacientes;\n}\n\nint main(){\n    int n;\n    std::cin >> n;\n    \n    std::vector<int> vacinas(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> vacinas[i];\n    }\n\n    std::vector<int> pacientes(n);\n    for (int i = 0; i < n; i++) {\n        std::cin >> pacientes[i];\n    }\n\n    ordenar(vacinas);\n    ordenar(pacientes);\n\n    vacinou(vacinas, pacientes);\n}\n",
                "type": "show"
            }
        ]
    }
}
