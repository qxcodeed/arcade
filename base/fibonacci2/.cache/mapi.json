{
    "title": "@fibonacci2",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@fibonacci2</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n  </style>\n  <link rel=\"stylesheet\" href=\"/tmp/tmp3km5v83w.css\" />\n  <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n  <script\n  src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js\"\n  type=\"text/javascript\"></script>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"fibonacci2\"><span class=\"citation\"\ndata-cites=\"fibonacci2\">@fibonacci2</span></h1>\n<ul>\n<li>Veja a vers\u00e3o online: <a\nhref=\"https://github.com/qxcodeed/arcade/blob/master/base/fibonacci2/Readme.md\">aqui.</a></li>\n<li>Para programar na sua m\u00e1quina (local/virtual) use:\n<ul>\n<li><code>tko down ed fibonacci2</code></li>\n</ul></li>\n<li>Se n\u00e3o tem o <code>tko</code>, instale pelo <a\nhref=\"https://github.com/senapk/tko#tko\">LINK</a>.</li>\n</ul>\n<hr />\n<p>Suponha agora os nossos coelhos n\u00e3o vivam para sempre e morrem depois\nde 3 meses. Contudo, os coelhos acasalam com um m\u00eas de idade e cada\nf\u00eamea produz um novo par de coelhos a cada m\u00eas a partir do segundo\nm\u00eas.</p>\n<figure>\n<img\nsrc=\"https://github.com/WladimirTavares/ED2024.1/blob/main/Fibonacci2/Fibonacci.png?raw=true\"\nalt=\"Fibonacci\" />\n<figcaption aria-hidden=\"true\">Fibonacci</figcaption>\n</figure>\n<p>A imagem mostra que ao final de seis meses teremos apenas 4 pares de\ncoelhos considerando que os coelhos morrem ap\u00f3s 3 meses. Quantos pares\nde coelhos teremos ao final de <span class=\"math inline\">\\(n\\)</span>\nmeses?</p>\n<p>Desenvolva uma fun\u00e7\u00e3o recursiva f (n) que devolve o n\u00famero de pares\nde coelhos ap\u00f3s n meses considerando que os coelhos morrem depois de 3\nmeses.</p>\n<p><strong>Entrada</strong></p>\n<p>A entrada \u00e9 composta por uma \u00fanica linha contendo um \u00fanico inteiro\n(<span class=\"math inline\">\\(1 \\leq n \\leq 40\\)</span>)</p>\n<p><strong>Sa\u00edda</strong></p>\n<p>A sa\u00edda \u00e9 composta por uma \u00fanica linha contendo o n\u00famero total de\npares de coelhos que est\u00e3o presentes ap\u00f3s n meses, se come\u00e7armos com 1\npar e em cada gera\u00e7\u00e3o, cada par de coelhos em idade reprodutiva produz\num par de coelhos e eles morrem depois de 3 meses.</p>\n<p><strong>Exemplo de Entrada</strong></p>\n<pre><code>6</code></pre>\n<p><strong>Exemplo de Sa\u00edda</strong></p>\n<pre><code>4</code></pre>\n<p><strong>Exemplo de Entrada</strong></p>\n<pre><code>40</code></pre>\n<p><strong>Exemplo de Sa\u00edda</strong></p>\n<pre><code>55405</code></pre>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>>\n1\n========\n1\n<<<<<<<<\n\n>>>>>>>>\n2\n========\n1\n<<<<<<<<\n\n>>>>>>>>\n3\n========\n2\n<<<<<<<<\n\n>>>>>>>>\n4\n========\n2\n<<<<<<<<\n\n>>>>>>>>\n5\n========\n3\n<<<<<<<<\n\n>>>>>>>>\n6\n========\n4\n<<<<<<<<\n\n>>>>>>>>\n7\n========\n5\n<<<<<<<<\n\n>>>>>>>>\n8\n========\n7\n<<<<<<<<\n\n>>>>>>>>\n9\n========\n9\n<<<<<<<<\n\n>>>>>>>>\n10\n========\n12\n<<<<<<<<\n\n>>>>>>>>\n11\n========\n16\n<<<<<<<<\n\n>>>>>>>>\n12\n========\n21\n<<<<<<<<\n\n>>>>>>>>\n13\n========\n28\n<<<<<<<<\n\n>>>>>>>>\n14\n========\n37\n<<<<<<<<\n\n>>>>>>>>\n15\n========\n49\n<<<<<<<<\n\n>>>>>>>>\n16\n========\n65\n<<<<<<<<\n\n>>>>>>>>\n17\n========\n86\n<<<<<<<<\n\n>>>>>>>>\n18\n========\n114\n<<<<<<<<\n\n>>>>>>>>\n19\n========\n151\n<<<<<<<<\n\n>>>>>>>>\n20\n========\n200\n<<<<<<<<\n\n>>>>>>>>\n21\n========\n265\n<<<<<<<<\n\n>>>>>>>>\n22\n========\n351\n<<<<<<<<\n\n>>>>>>>>\n23\n========\n465\n<<<<<<<<\n\n>>>>>>>>\n24\n========\n616\n<<<<<<<<\n\n>>>>>>>>\n25\n========\n816\n<<<<<<<<\n\n>>>>>>>>\n26\n========\n1081\n<<<<<<<<\n\n>>>>>>>>\n27\n========\n1432\n<<<<<<<<\n\n>>>>>>>>\n28\n========\n1897\n<<<<<<<<\n\n>>>>>>>>\n29\n========\n2513\n<<<<<<<<\n\n>>>>>>>>\n30\n========\n3329\n<<<<<<<<\n\n>>>>>>>>\n31\n========\n4410\n<<<<<<<<\n\n>>>>>>>>\n32\n========\n5842\n<<<<<<<<\n\n>>>>>>>>\n33\n========\n7739\n<<<<<<<<\n\n>>>>>>>>\n34\n========\n10252\n<<<<<<<<\n\n>>>>>>>>\n35\n========\n13581\n<<<<<<<<\n\n>>>>>>>>\n36\n========\n17991\n<<<<<<<<\n\n>>>>>>>>\n37\n========\n23833\n<<<<<<<<\n\n>>>>>>>>\n38\n========\n31572\n<<<<<<<<\n\n>>>>>>>>\n39\n========\n41824\n<<<<<<<<\n\n>>>>>>>>\n40\n========\n55405\n<<<<<<<<\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
