{
    "title": "@fibonacci2: Fazendo filhos e morrendo",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@fibonacci2: Fazendo filhos e morrendo</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@fibonacci2: Fazendo filhos e morrendo</h1>\n            <h1 id=\"fazendo-filhos-e-morrendo\">Fazendo filhos e morrendo</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<h2 id=\"intro\">Intro</h2>\n<p>Suponha agora os nossos coelhos n\u00e3o vivam para sempre e morrem depois de 3 meses. Contudo, os coelhos acasalam com um m\u00eas de idade e cada f\u00eamea produz um novo par de coelhos a cada m\u00eas a partir do segundo m\u00eas.</p>\n<p><img alt=\"Fibonacci\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/fibonacci2/Fibonacci.png\" /></p>\n<p>A imagem mostra que ao final de seis meses teremos apenas 4 pares de coelhos considerando que os coelhos morrem ap\u00f3s 3 meses. Quantos pares de coelhos teremos ao final de $n$ meses?</p>\n<p>Desenvolva uma fun\u00e7\u00e3o recursiva $f(n)$ que devolve o n\u00famero de pares de coelhos ap\u00f3s n meses considerando que os coelhos morrem depois de 3 meses.</p>\n<h2 id=\"draft\">Draft</h2>\n<ul>\n<li>Voc\u00ea deve implementar de forma recursiva a fun\u00e7\u00e3o <code>f</code> no arquivo <code>main.cpp</code>.</li>\n</ul>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp</li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/fibonacci2/.cache/draft/cpp/main.cpp\">main.cpp</a></li>\n</ul>\n<!-- links -->\n\n<h2 id=\"tests\">Tests</h2>\n<ul>\n<li>Entrada</li>\n<li>\n<p>A entrada \u00e9 composta por uma \u00fanica linha contendo um \u00fanico inteiro correspondente ao m\u00eas desejado ($1 \\leq n \\leq 40$).</p>\n</li>\n<li>\n<p>Sa\u00edda</p>\n</li>\n<li>A sa\u00edda \u00e9 composta por uma \u00fanica linha contendo o n\u00famero total de pares de coelhos que est\u00e3o presentes ap\u00f3s n meses, se come\u00e7armos com 1 par e em cada gera\u00e7\u00e3o, cada par de coelhos em idade reprodutiva produz um par de coelhos e eles morrem depois de 3 meses.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n6\n========\n4\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n\n<div class=\"codehilite\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n40\n========\n55405\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n6\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n40\n======== EXPECT\n55405\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n2\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n7\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n8\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n9\n======== EXPECT\n9\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n======== EXPECT\n12\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n11\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n12\n======== EXPECT\n21\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n13\n======== EXPECT\n28\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n14\n======== EXPECT\n37\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n15\n======== EXPECT\n49\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n16\n======== EXPECT\n65\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n17\n======== EXPECT\n86\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n18\n======== EXPECT\n114\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n19\n======== EXPECT\n151\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n======== EXPECT\n200\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n21\n======== EXPECT\n265\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n22\n======== EXPECT\n351\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n23\n======== EXPECT\n465\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n24\n======== EXPECT\n616\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n25\n======== EXPECT\n816\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n26\n======== EXPECT\n1081\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n27\n======== EXPECT\n1432\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n28\n======== EXPECT\n1897\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n29\n======== EXPECT\n2513\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n30\n======== EXPECT\n3329\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n31\n======== EXPECT\n4410\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n32\n======== EXPECT\n5842\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n33\n======== EXPECT\n7739\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n34\n======== EXPECT\n10252\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n35\n======== EXPECT\n13581\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n36\n======== EXPECT\n17991\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n37\n======== EXPECT\n23833\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n38\n======== EXPECT\n31572\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n39\n======== EXPECT\n41824\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n\nint f (int n) {\n    //DEL!\n    if (n <= 0) {\n        return 0;\n    } else if (n == 1 || n == 2) {\n        return 1;\n    } else if (n == 3) {\n        return 2;\n    } else {\n        return f(n - 2) + f(n - 3);\n    }\n    //ACT!\n    // (void) n;\n    // return 0;\n}\n\nint main() {\n    int n;\n    std::cin >> n;\n    std::cout << f(n) << std::endl;\n}\n",
                "encoding": 0
            }
        ]
    }
}
