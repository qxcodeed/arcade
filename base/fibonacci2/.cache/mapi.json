{
    "title": "L3 - @fibonacci2 - Fazendo filhos e morrendo",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>L3 - @fibonacci2 - Fazendo filhos e morrendo</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { display: inline-block; text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n  <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n  <script\n  src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js\"\n  type=\"text/javascript\"></script>\n  <!--[if lt IE 9]>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js\"></script>\n  <![endif]-->\n</head>\n<body>\n<h1 id=\"l3---fibonacci2---fazendo-filhos-e-morrendo\">L3 - <span\nclass=\"citation\" data-cites=\"fibonacci2\">@fibonacci2</span> - Fazendo\nfilhos e morrendo</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr class=\"header\">\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n</tbody>\n</table>\n<!-- toch -->\n<h2 id=\"intro\">Intro</h2>\n<p>Suponha agora os nossos coelhos n\u00e3o vivam para sempre e morrem depois\nde 3 meses. Contudo, os coelhos acasalam com um m\u00eas de idade e cada\nf\u00eamea produz um novo par de coelhos a cada m\u00eas a partir do segundo\nm\u00eas.</p>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/fibonacci2/Fibonacci.png\"\nalt=\"Fibonacci\" />\n<figcaption aria-hidden=\"true\">Fibonacci</figcaption>\n</figure>\n<p>A imagem mostra que ao final de seis meses teremos apenas 4 pares de\ncoelhos considerando que os coelhos morrem ap\u00f3s 3 meses. Quantos pares\nde coelhos teremos ao final de <span class=\"math inline\">\\(n\\)</span>\nmeses?</p>\n<p>Desenvolva uma fun\u00e7\u00e3o recursiva <span\nclass=\"math inline\">\\(f(n)\\)</span> que devolve o n\u00famero de pares de\ncoelhos ap\u00f3s n meses considerando que os coelhos morrem depois de 3\nmeses.</p>\n<h2 id=\"draft\">Draft</h2>\n<ul>\n<li>Voc\u00ea deve implementar de forma recursiva a fun\u00e7\u00e3o <code>f</code> no\narquivo <code>main.cpp</code>.</li>\n</ul>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp\n<ul>\n<li><a\nhref=\"https://github.com/qxcodeed/arcade/blob/master/base/fibonacci2/.cache/draft/cpp/main.cpp\">main.cpp</a>\n<!-- links --></li>\n</ul></li>\n</ul>\n<h2 id=\"tests\">Tests</h2>\n<ul>\n<li>Entrada\n<ul>\n<li>A entrada \u00e9 composta por uma \u00fanica linha contendo um \u00fanico inteiro\ncorrespondente ao m\u00eas desejado (<span class=\"math inline\">\\(1 \\leq n\n\\leq 40\\)</span>).</li>\n</ul></li>\n<li>Sa\u00edda\n<ul>\n<li>A sa\u00edda \u00e9 composta por uma \u00fanica linha contendo o n\u00famero total de\npares de coelhos que est\u00e3o presentes ap\u00f3s n meses, se come\u00e7armos com 1\npar e em cada gera\u00e7\u00e3o, cada par de coelhos em idade reprodutiva produz\num par de coelhos e eles morrem depois de 3 meses.</li>\n</ul></li>\n</ul>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>6</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>4</span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode txt\"><code class=\"sourceCode default\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a>40</span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a>========</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a>55405</span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n6\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n40\n======== EXPECT\n55405\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n1\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n2\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n3\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n4\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n5\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n7\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n8\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n9\n======== EXPECT\n9\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n10\n======== EXPECT\n12\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n11\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n12\n======== EXPECT\n21\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n13\n======== EXPECT\n28\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n14\n======== EXPECT\n37\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n15\n======== EXPECT\n49\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n16\n======== EXPECT\n65\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n17\n======== EXPECT\n86\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n18\n======== EXPECT\n114\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n19\n======== EXPECT\n151\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n20\n======== EXPECT\n200\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n21\n======== EXPECT\n265\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n22\n======== EXPECT\n351\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n23\n======== EXPECT\n465\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n24\n======== EXPECT\n616\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n25\n======== EXPECT\n816\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n26\n======== EXPECT\n1081\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n27\n======== EXPECT\n1432\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n28\n======== EXPECT\n1897\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n29\n======== EXPECT\n2513\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n30\n======== EXPECT\n3329\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n31\n======== EXPECT\n4410\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n32\n======== EXPECT\n5842\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n33\n======== EXPECT\n7739\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n34\n======== EXPECT\n10252\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n35\n======== EXPECT\n13581\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n36\n======== EXPECT\n17991\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n37\n======== EXPECT\n23833\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n38\n======== EXPECT\n31572\n<<<<<<<< FINISH\n\n>>>>>>>> INSERT\n39\n======== EXPECT\n41824\n<<<<<<<< FINISH\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n\nint f (int n) {\n    (void) n;\n    return 0;\n}\n\nint main() {\n    int n;\n    std::cin >> n;\n    std::cout << f(n) << std::endl;\n}",
                "encoding": 0
            }
        ]
    }
}
