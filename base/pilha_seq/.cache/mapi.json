{
    "title": "@pilha_seq: Construindo uma Pilha com Lista Sequencial CPP",
    "description": "\n        <!DOCTYPE html>\n        <html lang=\"en\">\n        <head>\n            <meta charset=\"UTF-8\">\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n            <title>@pilha_seq: Construindo uma Pilha com Lista Sequencial CPP</title>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/styles/default.min.css\">\n        </head>\n        <body>\n            <h1>@pilha_seq: Construindo uma Pilha com Lista Sequencial CPP</h1>\n            <h1 id=\"construindo-uma-pilha-com-lista-sequencial-cpp\">Construindo uma Pilha com Lista Sequencial CPP</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<h2 id=\"intro\">Intro</h2>\n<p>Neste exerc\u00edcio, voc\u00ea implementar\u00e1 uma <strong>Pilha</strong> usando uma <strong>Lista Sequencial</strong>, uma estrutura de dados linear que segue o princ\u00edpio <strong>LIFO</strong> (Last In, First Out). Isso significa que o \u00faltimo elemento inserido ser\u00e1 o primeiro a ser removido. Pilhas s\u00e3o frequentemente usadas em v\u00e1rias aplica\u00e7\u00f5es, como gerenciamento de chamadas de fun\u00e7\u00e3o, navega\u00e7\u00e3o na web (pilha de hist\u00f3rico), e avalia\u00e7\u00e3o de express\u00f5es aritm\u00e9ticas.</p>\n<p>A pilha ser\u00e1 implementada usando um array chamado <code>Arr</code>, onde cada elemento armazenado ser\u00e1 um inteiro. A classe <code>Stack</code> no arquivo <code>lib.cpp</code> j\u00e1 possui alguns m\u00e9todos implementados, enquanto outros ainda precisam ser desenvolvidos.</p>\n<h3 id=\"metodos-na-classe-stack\">M\u00e9todos na Classe <code>Stack</code></h3>\n<ul>\n<li>~~<code>Stack()</code>~~</li>\n<li>~~<code>~Stack()</code>~~</li>\n<li><code>void push(int info)</code></li>\n<li><code>void pop()</code></li>\n<li><code>int peek()</code></li>\n<li><code>void clear()</code></li>\n<li><code>bool full()</code></li>\n<li>~~<code>void empty()</code>~~</li>\n<li>~~<code>void print()</code>~~</li>\n</ul>\n<p>Os m\u00e9todos riscados est\u00e3o prontos. Voc\u00ea precisar\u00e1 implementar os m\u00e9todos <code>push</code>, <code>pop</code>, <code>peek</code>, <code>clear</code>, e <code>full</code>. As instru\u00e7\u00f5es detalhadas sobre cada m\u00e9todo est\u00e3o nos coment\u00e1rios dentro do arquivo <code>lib.cpp</code>. Lembre-se de seguir as dire\u00e7\u00f5es corretamente para garantir que sua implementa\u00e7\u00e3o passe nos testes.</p>\n<h3 id=\"observacoes\">Observa\u00e7\u00f5es</h3>\n<ul>\n<li><strong>OBS. 1:</strong> N\u00e3o altere os m\u00e9todos j\u00e1 implementados.</li>\n<li><strong>OBS. 2:</strong> N\u00e3o \u00e9 necess\u00e1rio escrever a fun\u00e7\u00e3o <code>main()</code>. Ela j\u00e1 est\u00e1 provida no ambiente de avalia\u00e7\u00e3o.</li>\n</ul>\n<h2 id=\"draft\">Draft</h2>\n<ul>\n<li>Implemente os m\u00e9todos faltantes no arquivo <code>lib.cpp</code> usando a l\u00f3gica apropriada para uma pilha baseada em array.</li>\n</ul>\n<!-- links .cache/draft -->\n<!-- links -->\n\n<h2 id=\"tests\">Tests</h2>\n<h3 id=\"entrada\">Entrada</h3>\n<ul>\n<li>A entrada consiste em uma sequ\u00eancia de opera\u00e7\u00f5es na pilha, incluindo inser\u00e7\u00f5es, remo\u00e7\u00f5es, e verifica\u00e7\u00f5es de estado, como se a pilha est\u00e1 cheia ou se um elemento espec\u00edfico est\u00e1 no topo.</li>\n</ul>\n<h3 id=\"saida\">Sa\u00edda</h3>\n<ul>\n<li>A sa\u00edda consiste nas respostas para as opera\u00e7\u00f5es realizadas, como o valor no topo da pilha ou mensagens indicando se a pilha est\u00e1 cheia ou vazia.</li>\n</ul>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.7.0/highlight.min.js\"></script>\n            <script>hljs.highlightAll();</script>\n        </body>\n        </html>\n        ",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {}
}
