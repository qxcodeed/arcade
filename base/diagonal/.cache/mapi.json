{
    "title": "@diagonal: Imprimindo um char por linha",
    "description": "# Imprimindo um char por linha\n\nFa\u00e7a um programa que recebe uma palavra com at\u00e9 100 caracteres e imprime a palavra em diagonal.\n\n## Entrada\n\nA entrada \u00e9 composta por uma \u00fanica linha contendo uma palavra com at\u00e9 100 caracteres.\n\n## Sa\u00edda\n\nA sa\u00edda \u00e9 composta por `n` linhas sendo `n` o tamanho da palavra lida.\n\n## Exemplo de Entrada\n\n```txt\nwladimir\n```\n\n## Exemplo de Sa\u00edda\n\n```txt\nw\n l\n  a\n   d\n    i\n     m\n      i\n       r\n```\n\nDica:\n\n```c\nvoid diagonal(char * s, int k) {\n  if (*s == '\\0') {\n    return;\n  }\n  //imprima k caracteres\n  //imprima o primeiro caractere de s e pule a linha\n  //fa\u00e7a a chamada recursiva\n  }\n}\n```\n\n```go\nfunc diagonal(s string, k int) {\n  if len(s) == 0 {\n    return\n  }\n  // imprima k caracteres\n  // imprima o primeiro caractere de s e pule a linha\n  // fa\u00e7a a chamada recursiva\n}\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\njefferson\n======== EXPECT\nj\n e\n  f\n   f\n    e\n     r\n      s\n       o\n        n\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nlukeEuSouSeuPai\n======== EXPECT\nl\n u\n  k\n   e\n    E\n     u\n      S\n       o\n        u\n         S\n          e\n           u\n            P\n             a\n              i\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\nfabiocarlos\n======== EXPECT\nf\n a\n  b\n   i\n    o\n     c\n      a\n       r\n        l\n         o\n          s\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
