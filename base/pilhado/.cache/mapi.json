{
    "title": "@pilhado: Fugindo do labirinto",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@pilhado: Fugindo do labirinto</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Fugindo do labirinto</h1>\n<p><img alt=\"_\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/pilhado/cover.jpg\" /></p>\n<p>Voc\u00ea vai tentar fugir do labirinto usando uma pilha no lugar da recurs\u00e3o.</p>\n<p>Um labirinto perfeito \u00e9 um labirinto no qual entre dois quaisquer pontos existe apenas um \u00fanico caminho.</p>\n<p>Leia uma matriz que representa um labirinto perfeito, os pontos de inicio e fim e imprima o labirinto mostrando o caminho entre os pontos.</p>\n<ul>\n<li>\n<p>Entrada</p>\n<ul>\n<li>Linha 1: n\u00famero de linhas e das colunas da matriz</li>\n<li>Linhas subsequentes: matriz composta por 4 caracteres<ul>\n<li><code>#</code> representa uma parede</li>\n<li><code></code> (espa\u00e7o vazio) representa um corredor por onde se pode andar</li>\n<li><code>I</code> representa o in\u00edcio</li>\n<li><code>F</code> representa o fim</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Sa\u00edda</p>\n<ul>\n<li>Imprima a matriz utilizando o char <code>.</code> para mostrar o caminho entre in\u00edcio e fim</li>\n</ul>\n</li>\n</ul>\n<h2>Arquivos</h2>\n<ul>\n<li>Voc\u00ea deve implementar:<ul>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/pilhado/student.cpp\">student.cpp</a><ul>\n<li>escrever a fun\u00e7\u00e3o procurar_saida e get_vizinhos.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>J\u00e1 est\u00e1 implementado:<ul>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/pilhado/main.cpp\">main.cpp</a><ul>\n<li>Faz a leitura do numero de linhas, numero de colunas e da matriz com os pontos de in\u00edcio e final marcados</li>\n<li>Chama a fun\u00e7\u00e3o procurar_saida.</li>\n<li>Imprime a matriz com o caminho marcado.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/pilhado/lib.h\">lib.hpp</a><ul>\n<li>Apenas o cabe\u00e7alho da fun\u00e7\u00e3o procurar_saida e get_vizinhos.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Testes</h2>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n10 20\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n# I##   ### ###    #\n# ##### #   #   ## #\n# #     ## ### ##  #\n# ## ####   #  #  ##\n#   F#    #   ## ###\n####################\n========\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n#..##   ### ###    #\n#.##### #   #   ## #\n#.#     ## ### ##  #\n#.## ####   #  #  ##\n#....#    #   ## ###\n####################\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n\n\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n10 30\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##    # #  ## ##  #\n## ###  #I    ##   ####   ## #\n#  ##  ###########   #  #  # #\n# ##  ## F # #   ### ####### #\n# ## ### ###   #   # ##   #  #\n#  # # # #   ##### # #  # # ##\n##   #     #     #     ##    #\n##############################\n========\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##....# #  ## ##  #\n## ###  #.....##...####   ## #\n#  ##  ###########...#  #  # #\n# ##  ##.. # #...###.####### #\n# ## ###.###...#...#.##   #  #\n#  # # #.#...#####.#.#  # # ##\n##   #  ...#     #...  ##    #\n##############################\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n<h2>Help</h2>\n<p>Voc\u00ea pode usar esse c\u00f3digo como ajuda. Ele carrega a matriz e mostra. O m\u00e9todo <code>get_vizinhos</code> \u00e9 bem \u00fatil para iterar nos vizinhos de um ponto.</p>\n<div class=\"language-c++ highlight\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;iostream&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;vector&gt;</span>\n<span class=\"k\">using</span><span class=\"w\"> </span><span class=\"k\">namespace</span><span class=\"w\"> </span><span class=\"nn\">std</span><span class=\"p\">;</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">Pos</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">;</span>\n<span class=\"p\">};</span>\n\n<span class=\"c1\">//retorna um vetor com todos os vizinhos da posi\u00e7\u00e3o p</span>\n<span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">Pos</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">get_vizinhos</span><span class=\"p\">(</span><span class=\"n\">Pos</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">}};</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">(){</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">nl</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">cin</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">nl</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"n\">nc</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">vector</span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">mat</span><span class=\"p\">(</span><span class=\"n\">nl</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;&quot;</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">//come\u00e7a com nl strings &quot;&quot;</span>\n<span class=\"w\">    </span><span class=\"n\">getchar</span><span class=\"p\">();</span><span class=\"c1\">//remove \\n after nc</span>\n<span class=\"w\">    </span><span class=\"n\">Pos</span><span class=\"w\"> </span><span class=\"n\">inicio</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fim</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//carregando matriz</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">nl</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">getline</span><span class=\"p\">(</span><span class=\"n\">cin</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mat</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">//procurando inicio e fim e colocando &#39; &#39; nas posi\u00e7\u00f5es iniciais</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">nl</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">l</span><span class=\"o\">++</span><span class=\"p\">){</span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">nc</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"o\">++</span><span class=\"p\">){</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"sc\">&#39;I&#39;</span><span class=\"p\">){</span>\n<span class=\"w\">                </span><span class=\"n\">mat</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">&#39; &#39;</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">inicio</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Pos</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">};</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">mat</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"sc\">&#39;F&#39;</span><span class=\"p\">){</span>\n<span class=\"w\">                </span><span class=\"n\">mat</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">][</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"sc\">&#39; &#39;</span><span class=\"p\">;</span>\n<span class=\"w\">                </span><span class=\"n\">fim</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Pos</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">};</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">:</span><span class=\"w\"> </span><span class=\"n\">mat</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">line</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;       nl=&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">nl</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot; nc=&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">nc</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;</span><span class=\"se\">\\n</span><span class=\"s\">&quot;</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;inicio: l=&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">inicio</span><span class=\"p\">.</span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot; , c=&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">inicio</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">cout</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot;   fim: l=&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">fim</span><span class=\"p\">.</span><span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">&quot; , c=&quot;</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">fim</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"n\">endl</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n10 20\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n# I##   ### ###    #\n# ##### #   #   ## #\n# #     ## ### ##  #\n# ## ####   #  #  ##\n#   F#    #   ## ###\n####################\n======== EXPECT\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n#..##   ### ###    #\n#.##### #   #   ## #\n#.#     ## ### ##  #\n#.## ####   #  #  ##\n#....#    #   ## ###\n####################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10 30\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##    # #  ## ##  #\n## ###  #I    ##   ####   ## #\n#  ##  ###########   #  #  # #\n# ##  ## F # #   ### ####### #\n# ## ### ###   #   # ##   #  #\n#  # # # #   ##### # #  # # ##\n##   #     #     #     ##    #\n##############################\n======== EXPECT\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##....# #  ## ##  #\n## ###  #.....##...####   ## #\n#  ##  ###########...#  #  # #\n# ##  ##.. # #...###.####### #\n# ## ###.###...#...#.##   #  #\n#  # # #.#...#####.#.#  # # ##\n##   #  ...#     #...  ##    #\n##############################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10 20\n####################\n#   # # #I#F  # ## #\n### #     ###      #\n##  ## ##   # ### ##\n#  ##   ### ###    #\n# ##### #   #   ## #\n# #     ## ### ##  #\n# ## ####   #  #  ##\n#    #    #   ## ###\n####################\n======== EXPECT\n####################\n#   # # #.#...# ## #\n### #    .###..... #\n##  ## ##...# ###.##\n#  ##   ###.###... #\n# ##### # ..# ..## #\n# #     ##.###.##  #\n# ## #### ..#..#  ##\n#    #    #...## ###\n####################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10 30\n##############################\n#I #        ## # # ##       ##\n## # ## ## ##    # #  ## ##  #\n## ###  #     ##   ####   ## #\n#  ##  ###########   #  #  # #\n# ##  ##   # #   ### ####### #\n# ## ### ###   #   # ##   #  #\n#  # # # #   ##### # #  # # ##\n##   #     #     #     ##   F#\n##############################\n======== EXPECT\n##############################\n#..#   .... ## # # ##       ##\n##.# ##.##.##....# #  ## ##  #\n##.###..# ....##...####   ## #\n#..##..###########...#  #  # #\n#.##..##   # #   ###.####### #\n#.##.### ###   #   #.##...#  #\n#..#.# # #   ##### #.#..#.# ##\n##...#     #     #  ...##....#\n##############################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n25 70\n######################################################################\n# #   #        ##   ##   #   #   ##      ##            ##    ##   # F#\n# # #   ######    #I#  #   # # #  ## # ###  # ### # ####  # ##  #   ##\n# # #####    ###### # ######   ##  # #  #  ## #   # #    ##    #######\n# #  # ### # #   ## # # ## #######   ## ####### # ### # ##### ##     #\n# ##   #   ### #    # # #    #   ## ##   ##   # # #   #     ###  ### #\n#  ### ## ##   #### #   # ## ## ###  ###    # # # # #######  ## ##   #\n##  ##     # ####   ###   #  #    ##  ####### # ###  ##   ##    #  # #\n###  ##### # ## # ###   # # ## ##  ##    #    #  ### #  #  ###### ## #\n# ##     ###  #   #   #####  #####  #### ## ####  #  # ## ##    # #  #\n# ######   ## ##### # #   ##     ## #  #  #   ###   #####  # ##   # ##\n#     ####  #       ### #  #### ##    ### ###   # #  #    ## ######  #\n# ### # ### ## ######   ## #  # #  ## # #   ### #### ## #### #  # ## #\n# #     # #  ####     #### ##     ##    ### # #  #    # #    ##   ## #\n# # ### # ## #    #####  #  # ## ######  #  # ## ## #   # ###### ##  #\n# #  ##    #   #### #   ### #  ###    #### ##  #  ####### #   ##    ##\n# ##  #### ###### #   ####  ##  ## ##  #   #  ###  #      ## ##  #####\n#  ##  #        # # #    ## ###  # ### ## ###   ## ## #####  #  ## # #\n##  ## ## ### #   # ## # #   ##### #   #  #   #### #  #   ## # ##    #\n###  #  ###   #####  # ### ### #   # ### ## #   #  # ## #    #  ## ###\n# ## ##   #####   ## #   #     # ### #   ## ###   ## #  ### ###  #  ##\n# ##  ### #     #  # ## ######   # #   ###  # #####  # ## #   ## ##  #\n#  # ## # # ###### # ## #    ##### #####   ##    ## ## ## ## ##   ## #\n##      #        #    #   ##             #    ##    #      #    #    #\n######################################################################\n======== EXPECT\n######################################################################\n# #   #        ##   ##...#...#...## ...  ##            ##... ##...#..#\n# # #   ######    #.#..#...#.#.#..##.#.###  # ### # ####..#.##..#...##\n# # #####    ######.#.######...##..#.#..#  ## #   # #  ..##....#######\n# #  # ### # #...##.#.# ## #######...##.####### # ### #.##### ##.....#\n# ##   #   ###.#....#.# #    #   ## ## ..##...# # #   #.....###..###.#\n#  ### ## ##...#### #...# ## ## ###  ###....#.# # # #######..##.##...#\n##  ##     #.####   ###.  #  #    ##  #######.# ###  ##   ##....#..# #\n###  ##### #.## # ###...# # ## ##  ##    # ...#  ### #  #  ######.## #\n# ##     ###..#   #...#####  #####  #### ##.####  #  # ## ##....#.#  #\n# ######   ##.#####.# #   ##     ## #  #  #...###   #####  #.##...# ##\n#     ####  #.......### #  #### ##    ### ###...# #  #    ##.######  #\n# ### # ### ## ######   ## #  # #  ## # #   ###.#### ## ####.#  # ## #\n# #     # #  ####     #### ##     ##    ### # #..#    # #....##   ## #\n# # ### # ## #    #####  #  # ## ######  #  # ##.## #   #.###### ##  #\n# #  ##    #   #### #   ### #  ###    #### ##  #..#######.#   ##    ##\n# ##  #### ###### #   ####  ##  ## ##  #   #  ###..# .....## ##  #####\n#  ##  #        # # #    ## ###  # ### ## ###   ##.##.#####  #  ## # #\n##  ## ## ### #   # ## # #   ##### #   #  #...####.#..#   ## # ##    #\n###  #  ###   #####  # ### ### #   # ### ##.#...#..#.## #    #  ## ###\n# ## ##   #####   ## #   #     # ### #   ##.###...##.#  ### ###  #  ##\n# ##  ### #     #  # ## ######   # #   ###..# #####..# ## #   ## ##  #\n#  # ## # # ###### # ## #    ##### #####  .##....##.## ## ## ##   ## #\n##      #        #    #   ##             #....##....#      #    #    #\n######################################################################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n27 90\n##########################################################################################\n#I      #          #       #    #    #           #  # #   #   ## # ##   ##             F##\n####### ## ### ###   ##### ## # ## #   ### ##### ##   # #   #    # #  #  ## #### ######  #\n#     #  ###   # ##### ##  #  #  # #####   #     #  # # ## ##### #   ###  # ## # #    ## #\n# ## ###  ### ##     #    ### ## ####    #### ##### ###  #    #    #  #####  # # # ####  #\n# ##   ##     #  ##### ####   #     # ####  # #   #     ## ## #########   ##   # #  ##  ##\n#  ## ##########       #    #######   ## # ## # #   # #  ###      ##    #  # ### ##    ###\n# ##    # ##   # ######## #  #    #####  #    ##########  ##### #    #####    ##  # # ## #\n#  ####   #  #   #    # # ## # ##   #   ## ####        ####   ### ##   # ####  ## ###  # #\n## #  ###   ###### ##      #    ### ## ##  #  ## #####   ## #   ###  ###   #####    ##   #\n#  ##   ##### #    ####### ######   #     ### ## #  ####    ###   ####   #    ## # ##### #\n# #### ## #   # ####    ####   ### ### ####   #  ##    ###### ###      ######  # #  #  # #\n#   ##      # #  ##  # ##    #     # #  # ###   #### # # #  #   #########   ## # ## ##   #\n## ##  # #### ##  ####  # ########## ##   ##  ###    #   # ## #      ##   # #  # ##  # ###\n#  #  ##  ##   ##    ## #     #  ##   ###    ## ### ####   ## ###### #  # # # ##  ## #   #\n## # #### #  ###### ##  ##### ##    ### ######   #  #    ###  ##       ###### ###  # ### #\n#  #    # # ##   #     ##   # ### # #          #   #######   ##  # #####   #   ### #  ## #\n# ##### # #### #   # #    ### #   # # ### #### #####    #  ###  ####   # #   ### ####  ###\n# #     #  ##  # # #########  ## ## #   # #     #    # ## ###  ###   #   #####      ##   #\n# ## #####  # ## ###       # ##  #  ## ## ### # # ####    # # ## # ####### #   ### ##  # #\n# #     ###    ###   #####   ### # ##   #   ##### #  ###### # #  #    ##     # #   #  ## #\n# # # #  ##### #   ####  #####   #### #####       ##     #  #   #### ##  ## #### ### ### #\n# ### ## #   # # # #  # ##  ## #  ##   # ###############   ####   #  #  ##  # #  #     # #\n#   #### # # ### ####      ##  ##  ### # # #       #   # #    ###   ####### # # ## # ### #\n# #    ### #     ##   ## ###  ####   # #   # #####   #   #### # #####   # # #    #####   #\n# ## #     # # # #  #  #     ##    #     #   #     # # # #            #     # ##       # #\n##########################################################################################\n======== EXPECT\n##########################################################################################\n#.......#     .....#.......# ...#    #    .......#  # #   #   ## # ##   ##      ........##\n#######.## ###.###...#####.##.#.## #   ###.#####.##   # #   #    # #  #  ## ####.######  #\n#.... #..### ..# ##### ##..# .#..# #####...# ....#  # # ## ##### #   ###  # ## #.#    ## #\n#.##.###..###.##     #....###.##.####....####.##### ###  #    #    #  #####  # #.# ####  #\n#.##.. ##.....#  #####.####...# ....#.####  #.#   #     ## ## #########   ##   #.#  ##  ##\n#. ##.##########.......#   .#######...## # ##.# #   # #  ###      ##    #  # ###.##    ###\n#.## ...# ##...#.######## #..#....#####  #....##########  ##### #    #####    ##..# # ## #\n#..####...#..#...#    # # ##.#.##...#   ##.#### .......####...### ##   # ####  ##.###  # #\n##.#  ###...###### ##      #... ###.## ##..#  ##.#####...##.#...###  ###...##### .. ##   #\n#..##   ##### #    ####### ###### ..# ....### ##.#  ####....###...####...#....## #.##### #\n#.#### ## #   # ####    ####...###.###.####   #..##    ###### ###......######..# #..#  # #\n#.. ##      # #  ##  # ##....#.....# #..# ###...#### # # #  #...#########   ##.# ##.##   #\n##.##  # #### ##  ####  #.########## ##...##..###    #   # ##.#......##   # #..# ##..# ###\n# .#  ##  ##   ##    ## #.....#  ##   ###....## ### ####   ##.######.#  # # #.##  ##.#   #\n##.# #### #  ###### ##  #####.##    ### ######   #  #    ###..##.....  ######.###  #.### #\n#..#    # # ##   #     ##   #.### # #.....     #   #######...##..# #####...#.. ### #..## #\n#.##### # #### #   # #    ###.#   # #.###.#### #####... #..###..####...#.#...### ####..###\n#.#     #  ##  # # #########..## ## #.. #.#     #....#.##.###..###...#...#####..... ##...#\n#.## #####  # ## ###.......#.##  #  ##.##.### # #.####....# #.## #.####### #...###.##  #.#\n#.#     ###    ###...#####...### # ##.. #...#####.#  ###### #.#  #... ##   ..# #...#  ##.#\n#.# # #  ##### #...####  #####   ####.#####.......##     #  #...####.##  ##.####.### ###.#\n#.### ## #...# #.# #  # ##  ## #  ## ..# ###############...####...#..#  ## .# #..#     #.#\n#...#### #.#.###.####      ##  ##  ###.# # #.......#...#.#....###...#######.# #.## # ###.#\n# #....###.#.....##   ## ###  ####   #.#...#.#####...#...####.# #####...# #.#  ..#####...#\n# ## #.....# # # #  #  #     ##    #  ...#...#     # # # #   .........#.....# ##.......# #\n##########################################################################################\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
