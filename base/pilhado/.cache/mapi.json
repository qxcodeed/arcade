{
    "title": "@pilhado: Fugindo do labirinto",
    "description": "# Fugindo do labirinto\n\n![_](https://raw.githubusercontent.com/qxcodeed/arcade/master/base/pilhado/cover.jpg)\n\nVoc\u00ea vai tentar fugir do labirinto usando uma pilha no lugar da recurs\u00e3o.\n\nUm labirinto perfeito \u00e9 um labirinto no qual entre dois quaisquer pontos existe apenas um \u00fanico caminho.\n\nLeia uma matriz que representa um labirinto perfeito, os pontos de inicio e fim e imprima o labirinto mostrando o caminho entre os pontos.\n\n- Entrada\n\n  - Linha 1: n\u00famero de linhas e das colunas da matriz\n  - Linhas subsequentes: matriz composta por 4 caracteres\n    - `#` representa uma parede\n    - ` ` (espa\u00e7o vazio) representa um corredor por onde se pode andar\n    - `I` representa o in\u00edcio\n    - `F` representa o fim\n\n- Sa\u00edda\n  - Imprima a matriz utilizando o char `.` para mostrar o caminho entre in\u00edcio e fim\n\n## Arquivos\n\n- Voc\u00ea deve implementar:\n  - [student.cpp](https://github.com/qxcodeed/arcade/blob/master/base/pilhado/student.cpp)\n    - escrever a fun\u00e7\u00e3o procurar_saida e get_vizinhos.\n- J\u00e1 est\u00e1 implementado:\n  - [main.cpp](https://github.com/qxcodeed/arcade/blob/master/base/pilhado/main.cpp)\n    - Faz a leitura do numero de linhas, numero de colunas e da matriz com os pontos de in\u00edcio e final marcados\n    - Chama a fun\u00e7\u00e3o procurar_saida.\n    - Imprime a matriz com o caminho marcado.\n  - [lib.hpp](https://github.com/qxcodeed/arcade/blob/master/base/pilhado/lib.h)\n    - Apenas o cabe\u00e7alho da fun\u00e7\u00e3o procurar_saida e get_vizinhos.\n\n## Testes\n\n```txt\n>>>>>>>>\n10 20\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n# I##   ### ###    #\n# ##### #   #   ## #\n# #     ## ### ##  #\n# ## ####   #  #  ##\n#   F#    #   ## ###\n####################\n========\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n#..##   ### ###    #\n#.##### #   #   ## #\n#.#     ## ### ##  #\n#.## ####   #  #  ##\n#....#    #   ## ###\n####################\n<<<<<<<<\n\n\n>>>>>>>>\n10 30\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##    # #  ## ##  #\n## ###  #I    ##   ####   ## #\n#  ##  ###########   #  #  # #\n# ##  ## F # #   ### ####### #\n# ## ### ###   #   # ##   #  #\n#  # # # #   ##### # #  # # ##\n##   #     #     #     ##    #\n##############################\n========\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##....# #  ## ##  #\n## ###  #.....##...####   ## #\n#  ##  ###########...#  #  # #\n# ##  ##.. # #...###.####### #\n# ## ###.###...#...#.##   #  #\n#  # # #.#...#####.#.#  # # ##\n##   #  ...#     #...  ##    #\n##############################\n<<<<<<<<\n```\n\n## Help\n\nVoc\u00ea pode usar esse c\u00f3digo como ajuda. Ele carrega a matriz e mostra. O m\u00e9todo `get_vizinhos` \u00e9 bem \u00fatil para iterar nos vizinhos de um ponto.\n\n```c++\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nstruct Pos{\n    int l;\n    int c;\n};\n\n//retorna um vetor com todos os vizinhos da posi\u00e7\u00e3o p\nvector<Pos> get_vizinhos(Pos p){\n    return {{p.l, p.c - 1}, {p.l - 1, p.c}, {p.l, p.c + 1}, {p.l + 1, p.c}};\n}\n\n\nint main(){\n    int nl = 0, nc = 0;\n    cin >> nl >> nc;\n    vector<string> mat(nl, \"\"); //come\u00e7a com nl strings \"\"\n    getchar();//remove \\n after nc\n    Pos inicio, fim;\n\n    //carregando matriz\n    for(int i = 0; i < nl; i++)\n        getline(cin, mat[i]);\n\n    //procurando inicio e fim e colocando ' ' nas posi\u00e7\u00f5es iniciais\n    for(int l = 0; l < nl; l++){\n        for(int c = 0; c < nc; c++){\n            if(mat[l][c] == 'I'){\n                mat[l][c] = ' ';\n                inicio = Pos {l, c};\n            }\n            if(mat[l][c] == 'F'){\n                mat[l][c] = ' ';\n                fim = Pos {l, c};\n            }\n        }\n    }\n\n    for(string line : mat)\n        cout << line << endl;\n    cout << \"       nl=\" << nl << \" nc=\" << nc << \"\\n\";\n    cout << \"inicio: l=\" << inicio.l << \" , c=\" << inicio.c << endl;\n    cout << \"   fim: l=\" << fim.l << \" , c=\" << fim.c << endl;\n}\n```\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n10 20\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n# I##   ### ###    #\n# ##### #   #   ## #\n# #     ## ### ##  #\n# ## ####   #  #  ##\n#   F#    #   ## ###\n####################\n======== EXPECT\n####################\n#   # # # #   # ## #\n### #     ###      #\n##  ## ##   # ### ##\n#..##   ### ###    #\n#.##### #   #   ## #\n#.#     ## ### ##  #\n#.## ####   #  #  ##\n#....#    #   ## ###\n####################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10 30\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##    # #  ## ##  #\n## ###  #I    ##   ####   ## #\n#  ##  ###########   #  #  # #\n# ##  ## F # #   ### ####### #\n# ## ### ###   #   # ##   #  #\n#  # # # #   ##### # #  # # ##\n##   #     #     #     ##    #\n##############################\n======== EXPECT\n##############################\n#  #        ## # # ##       ##\n## # ## ## ##....# #  ## ##  #\n## ###  #.....##...####   ## #\n#  ##  ###########...#  #  # #\n# ##  ##.. # #...###.####### #\n# ## ###.###...#...#.##   #  #\n#  # # #.#...#####.#.#  # # ##\n##   #  ...#     #...  ##    #\n##############################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10 20\n####################\n#   # # #I#F  # ## #\n### #     ###      #\n##  ## ##   # ### ##\n#  ##   ### ###    #\n# ##### #   #   ## #\n# #     ## ### ##  #\n# ## ####   #  #  ##\n#    #    #   ## ###\n####################\n======== EXPECT\n####################\n#   # # #.#...# ## #\n### #    .###..... #\n##  ## ##...# ###.##\n#  ##   ###.###... #\n# ##### # ..# ..## #\n# #     ##.###.##  #\n# ## #### ..#..#  ##\n#    #    #...## ###\n####################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10 30\n##############################\n#I #        ## # # ##       ##\n## # ## ## ##    # #  ## ##  #\n## ###  #     ##   ####   ## #\n#  ##  ###########   #  #  # #\n# ##  ##   # #   ### ####### #\n# ## ### ###   #   # ##   #  #\n#  # # # #   ##### # #  # # ##\n##   #     #     #     ##   F#\n##############################\n======== EXPECT\n##############################\n#..#   .... ## # # ##       ##\n##.# ##.##.##....# #  ## ##  #\n##.###..# ....##...####   ## #\n#..##..###########...#  #  # #\n#.##..##   # #   ###.####### #\n#.##.### ###   #   #.##...#  #\n#..#.# # #   ##### #.#..#.# ##\n##...#     #     #  ...##....#\n##############################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n25 70\n######################################################################\n# #   #        ##   ##   #   #   ##      ##            ##    ##   # F#\n# # #   ######    #I#  #   # # #  ## # ###  # ### # ####  # ##  #   ##\n# # #####    ###### # ######   ##  # #  #  ## #   # #    ##    #######\n# #  # ### # #   ## # # ## #######   ## ####### # ### # ##### ##     #\n# ##   #   ### #    # # #    #   ## ##   ##   # # #   #     ###  ### #\n#  ### ## ##   #### #   # ## ## ###  ###    # # # # #######  ## ##   #\n##  ##     # ####   ###   #  #    ##  ####### # ###  ##   ##    #  # #\n###  ##### # ## # ###   # # ## ##  ##    #    #  ### #  #  ###### ## #\n# ##     ###  #   #   #####  #####  #### ## ####  #  # ## ##    # #  #\n# ######   ## ##### # #   ##     ## #  #  #   ###   #####  # ##   # ##\n#     ####  #       ### #  #### ##    ### ###   # #  #    ## ######  #\n# ### # ### ## ######   ## #  # #  ## # #   ### #### ## #### #  # ## #\n# #     # #  ####     #### ##     ##    ### # #  #    # #    ##   ## #\n# # ### # ## #    #####  #  # ## ######  #  # ## ## #   # ###### ##  #\n# #  ##    #   #### #   ### #  ###    #### ##  #  ####### #   ##    ##\n# ##  #### ###### #   ####  ##  ## ##  #   #  ###  #      ## ##  #####\n#  ##  #        # # #    ## ###  # ### ## ###   ## ## #####  #  ## # #\n##  ## ## ### #   # ## # #   ##### #   #  #   #### #  #   ## # ##    #\n###  #  ###   #####  # ### ### #   # ### ## #   #  # ## #    #  ## ###\n# ## ##   #####   ## #   #     # ### #   ## ###   ## #  ### ###  #  ##\n# ##  ### #     #  # ## ######   # #   ###  # #####  # ## #   ## ##  #\n#  # ## # # ###### # ## #    ##### #####   ##    ## ## ## ## ##   ## #\n##      #        #    #   ##             #    ##    #      #    #    #\n######################################################################\n======== EXPECT\n######################################################################\n# #   #        ##   ##...#...#...## ...  ##            ##... ##...#..#\n# # #   ######    #.#..#...#.#.#..##.#.###  # ### # ####..#.##..#...##\n# # #####    ######.#.######...##..#.#..#  ## #   # #  ..##....#######\n# #  # ### # #...##.#.# ## #######...##.####### # ### #.##### ##.....#\n# ##   #   ###.#....#.# #    #   ## ## ..##...# # #   #.....###..###.#\n#  ### ## ##...#### #...# ## ## ###  ###....#.# # # #######..##.##...#\n##  ##     #.####   ###.  #  #    ##  #######.# ###  ##   ##....#..# #\n###  ##### #.## # ###...# # ## ##  ##    # ...#  ### #  #  ######.## #\n# ##     ###..#   #...#####  #####  #### ##.####  #  # ## ##....#.#  #\n# ######   ##.#####.# #   ##     ## #  #  #...###   #####  #.##...# ##\n#     ####  #.......### #  #### ##    ### ###...# #  #    ##.######  #\n# ### # ### ## ######   ## #  # #  ## # #   ###.#### ## ####.#  # ## #\n# #     # #  ####     #### ##     ##    ### # #..#    # #....##   ## #\n# # ### # ## #    #####  #  # ## ######  #  # ##.## #   #.###### ##  #\n# #  ##    #   #### #   ### #  ###    #### ##  #..#######.#   ##    ##\n# ##  #### ###### #   ####  ##  ## ##  #   #  ###..# .....## ##  #####\n#  ##  #        # # #    ## ###  # ### ## ###   ##.##.#####  #  ## # #\n##  ## ## ### #   # ## # #   ##### #   #  #...####.#..#   ## # ##    #\n###  #  ###   #####  # ### ### #   # ### ##.#...#..#.## #    #  ## ###\n# ## ##   #####   ## #   #     # ### #   ##.###...##.#  ### ###  #  ##\n# ##  ### #     #  # ## ######   # #   ###..# #####..# ## #   ## ##  #\n#  # ## # # ###### # ## #    ##### #####  .##....##.## ## ## ##   ## #\n##      #        #    #   ##             #....##....#      #    #    #\n######################################################################\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n27 90\n##########################################################################################\n#I      #          #       #    #    #           #  # #   #   ## # ##   ##             F##\n####### ## ### ###   ##### ## # ## #   ### ##### ##   # #   #    # #  #  ## #### ######  #\n#     #  ###   # ##### ##  #  #  # #####   #     #  # # ## ##### #   ###  # ## # #    ## #\n# ## ###  ### ##     #    ### ## ####    #### ##### ###  #    #    #  #####  # # # ####  #\n# ##   ##     #  ##### ####   #     # ####  # #   #     ## ## #########   ##   # #  ##  ##\n#  ## ##########       #    #######   ## # ## # #   # #  ###      ##    #  # ### ##    ###\n# ##    # ##   # ######## #  #    #####  #    ##########  ##### #    #####    ##  # # ## #\n#  ####   #  #   #    # # ## # ##   #   ## ####        ####   ### ##   # ####  ## ###  # #\n## #  ###   ###### ##      #    ### ## ##  #  ## #####   ## #   ###  ###   #####    ##   #\n#  ##   ##### #    ####### ######   #     ### ## #  ####    ###   ####   #    ## # ##### #\n# #### ## #   # ####    ####   ### ### ####   #  ##    ###### ###      ######  # #  #  # #\n#   ##      # #  ##  # ##    #     # #  # ###   #### # # #  #   #########   ## # ## ##   #\n## ##  # #### ##  ####  # ########## ##   ##  ###    #   # ## #      ##   # #  # ##  # ###\n#  #  ##  ##   ##    ## #     #  ##   ###    ## ### ####   ## ###### #  # # # ##  ## #   #\n## # #### #  ###### ##  ##### ##    ### ######   #  #    ###  ##       ###### ###  # ### #\n#  #    # # ##   #     ##   # ### # #          #   #######   ##  # #####   #   ### #  ## #\n# ##### # #### #   # #    ### #   # # ### #### #####    #  ###  ####   # #   ### ####  ###\n# #     #  ##  # # #########  ## ## #   # #     #    # ## ###  ###   #   #####      ##   #\n# ## #####  # ## ###       # ##  #  ## ## ### # # ####    # # ## # ####### #   ### ##  # #\n# #     ###    ###   #####   ### # ##   #   ##### #  ###### # #  #    ##     # #   #  ## #\n# # # #  ##### #   ####  #####   #### #####       ##     #  #   #### ##  ## #### ### ### #\n# ### ## #   # # # #  # ##  ## #  ##   # ###############   ####   #  #  ##  # #  #     # #\n#   #### # # ### ####      ##  ##  ### # # #       #   # #    ###   ####### # # ## # ### #\n# #    ### #     ##   ## ###  ####   # #   # #####   #   #### # #####   # # #    #####   #\n# ## #     # # # #  #  #     ##    #     #   #     # # # #            #     # ##       # #\n##########################################################################################\n======== EXPECT\n##########################################################################################\n#.......#     .....#.......# ...#    #    .......#  # #   #   ## # ##   ##      ........##\n#######.## ###.###...#####.##.#.## #   ###.#####.##   # #   #    # #  #  ## ####.######  #\n#.... #..### ..# ##### ##..# .#..# #####...# ....#  # # ## ##### #   ###  # ## #.#    ## #\n#.##.###..###.##     #....###.##.####....####.##### ###  #    #    #  #####  # #.# ####  #\n#.##.. ##.....#  #####.####...# ....#.####  #.#   #     ## ## #########   ##   #.#  ##  ##\n#. ##.##########.......#   .#######...## # ##.# #   # #  ###      ##    #  # ###.##    ###\n#.## ...# ##...#.######## #..#....#####  #....##########  ##### #    #####    ##..# # ## #\n#..####...#..#...#    # # ##.#.##...#   ##.#### .......####...### ##   # ####  ##.###  # #\n##.#  ###...###### ##      #... ###.## ##..#  ##.#####...##.#...###  ###...##### .. ##   #\n#..##   ##### #    ####### ###### ..# ....### ##.#  ####....###...####...#....## #.##### #\n#.#### ## #   # ####    ####...###.###.####   #..##    ###### ###......######..# #..#  # #\n#.. ##      # #  ##  # ##....#.....# #..# ###...#### # # #  #...#########   ##.# ##.##   #\n##.##  # #### ##  ####  #.########## ##...##..###    #   # ##.#......##   # #..# ##..# ###\n# .#  ##  ##   ##    ## #.....#  ##   ###....## ### ####   ##.######.#  # # #.##  ##.#   #\n##.# #### #  ###### ##  #####.##    ### ######   #  #    ###..##.....  ######.###  #.### #\n#..#    # # ##   #     ##   #.### # #.....     #   #######...##..# #####...#.. ### #..## #\n#.##### # #### #   # #    ###.#   # #.###.#### #####... #..###..####...#.#...### ####..###\n#.#     #  ##  # # #########..## ## #.. #.#     #....#.##.###..###...#...#####..... ##...#\n#.## #####  # ## ###.......#.##  #  ##.##.### # #.####....# #.## #.####### #...###.##  #.#\n#.#     ###    ###...#####...### # ##.. #...#####.#  ###### #.#  #... ##   ..# #...#  ##.#\n#.# # #  ##### #...####  #####   ####.#####.......##     #  #...####.##  ##.####.### ###.#\n#.### ## #...# #.# #  # ##  ## #  ## ..# ###############...####...#..#  ## .# #..#     #.#\n#...#### #.#.###.####      ##  ##  ###.# # #.......#...#.#....###...#######.# #.## # ###.#\n# #....###.#.....##   ## ###  ####   #.#...#.#####...#...####.# #####...# #.#  ..#####...#\n# ## #.....# # # #  #  #     ##    #  ...#...#     # # # #   .........#.....# ##.......# #\n##########################################################################################\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {}
}
