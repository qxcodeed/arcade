{
    "title": "@list_basic: Lista Simplesmente Encadeada - CPP",
    "description": "# Lista Simplesmente Encadeada - CPP\n\nNesse exerc\u00edcio, implementaremos nossa primeira estrutura encadeada: Lista Simplesmente Encadeada.\n\nUma lista simplesmente encadeada \u00e9 uma estrutura de dados que consiste em uma sequ\u00eancia de elementos, onde cada elemento (chamado de N\u00f3) cont\u00e9m dois componentes: uma informa\u00e7\u00e3o do elemento e um ponteiro para o pr\u00f3ximo N\u00f3 na sequ\u00eancia.\n\nPor simplicidade, implementaremos as informa\u00e7\u00f5es como apenas um inteiro.\n\nNo arquivo lib.cpp, se encontra a classe SLinkedList que possui os seguintes m\u00e9todos:\n\n- SLinkedList();\n- ~SLinkedList();\n- bool hasInfo(int info);\n- int get(int index);\n- int operator[](int index);\n- void push_front(int info);\n- void push_back(int info);\n- ~~void pop_front();~~\n- void pop_back();\n- void clear();\n- int length();\n- bool empty();\n- ~~Node\\* sucessor(Node* node);~~\n- Node\\* predecessor(Node* node);\n- ~~void print();~~\n\nM\u00e9todos riscados j\u00e1 est\u00e3o implementados, voc\u00ea precisa implementar os demais.\nA funcionalidade de cada m\u00e9todo est\u00e1 descrita em coment\u00e1rios no pr\u00f3prio arquivo lib.cpp. Sua tarefa \u00e9 alterar o arquivo lib.cpp, implementando as funcionalidades faltantes citadas. Seu c\u00f3digo deve passar no caso de teste para ser considerado correto.\n\nOBS.: N\u00e3o altere os m\u00e9todos j\u00e1 implementados.\n\nOBS.2: N\u00e3o precisa escrever a main() nem alterar o arquivo main.cpp.\n\n<!-- links .cache/draft -->\n<!-- links -->",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": "",
            "type": "hide"
        }
    ],
    "draft": {}
}
