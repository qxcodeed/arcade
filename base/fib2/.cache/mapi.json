{
    "title": "@fib2: Coelhos procriando e morrendo",
    "description": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>@fib2: Coelhos procriando e morrendo</title>\n    <style>\n        body { font-family: sans-serif; line-height: 1.6; margin: 20px; }\n        pre { background-color: #f4f4f4; padding: 10px; border-radius: 5px; overflow-x: auto; }\n        code { font-family: monospace; }\n        table { border-collapse: collapse; width: 100%; }\n        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }\n        th { background-color: #f2f2f2; }\n        /* Estilos b\u00e1sicos para o destaque de sintaxe (gerado pelo pygments via pymdownx.highlight) */\n        .highlight .hll { background-color: #ffffcc }\n        .highlight .c { color: #999988; font-style: italic } /* Comment */\n        .highlight .err { color: #a61717; background-color: #e3d2d2 } /* Error */\n        .highlight .k { color: #000000; font-weight: bold } /* Keyword */\n        .highlight .o { color: #000000; font-weight: bold } /* Operator */\n        .highlight .ch { color: #999988; font-style: italic } /* Comment.Hashbang */\n        .highlight .cm { color: #999988; font-style: italic } /* Comment.Multiline */\n        .highlight .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */\n        .highlight .cpf { color: #999988; font-style: italic } /* Comment.PreprocFile */\n        .highlight .c1 { color: #999988; font-style: italic } /* Comment.Single */\n        .highlight .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */\n        .highlight .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */\n        .highlight .ge { color: #000000; font-style: italic } /* Generic.Emph */\n        .highlight .gr { color: #aa0000 } /* Generic.Error */\n        .highlight .gh { color: #999999 } /* Generic.Heading */\n        .highlight .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */\n        .highlight .go { color: #888888 } /* Generic.Output */\n        .highlight .gp { color: #555555 } /* Generic.Prompt */\n        .highlight .gs { font-weight: bold } /* Generic.Strong */\n        .highlight .gu { color: #aaaaaa } /* Generic.Subheading */\n        .highlight .gt { color: #aa0000 } /* Generic.Traceback */\n        .highlight .kc { color: #000000; font-weight: bold } /* Keyword.Constant */\n        .highlight .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */\n        .highlight .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */\n        .highlight .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */\n        .highlight .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */\n        .highlight .kt { color: #445588; font-weight: bold } /* Keyword.Type */\n        .highlight .m { color: #009999 } /* Literal.Number */\n        .highlight .s { color: #dd1144 } /* Literal.String */\n        .highlight .na { color: #008080 } /* Name.Attribute */\n        .highlight .nb { color: #0086B3 } /* Name.Builtin */\n        .highlight .nc { color: #445588; font-weight: bold } /* Name.Class */\n        .highlight .no { color: #008080 } /* Name.Constant */\n        .highlight .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */\n        .highlight .ni { color: #800080 } /* Name.Entity */\n        .highlight .ne { color: #990000; font-weight: bold } /* Name.Exception */\n        .highlight .nf { color: #990000; font-weight: bold } /* Name.Function */\n        .highlight .nl { color: #990000; font-weight: bold } /* Name.Label */\n        .highlight .nn { color: #555555; font-weight: bold } /* Name.Namespace */\n        .highlight .nx { color: #990000; font-weight: bold } /* Name.Other */\n        .highlight .py { color: #009999 } /* Name.Property */\n        .highlight .p { color: #000000 } /* Name.Punctuation */\n        .highlight .nv { color: #008080 } /* Name.Variable */\n        .highlight .ow { color: #000000; font-weight: bold } /* Operator.Word */\n        .highlight .w { color: #bbbbbb } /* Text.Whitespace */\n        .highlight .mf { color: #009999 } /* Literal.Number.Float */\n        .highlight .mh { color: #009999 } /* Literal.Number.Hex */\n        .highlight .mi { color: #009999 } /* Literal.Number.Integer */\n        .highlight .mo { color: #009999 } /* Literal.Number.Oct */\n        .highlight .sb { color: #dd1144 } /* Literal.String.Backtick */\n        .highlight .sc { color: #dd1144 } /* Literal.String.Char */\n        .highlight .sd { color: #dd1144 } /* Literal.String.Doc */\n        .highlight .s2 { color: #dd1144 } /* Literal.String.Double */\n        .highlight .se { color: #dd1144 } /* Literal.String.Escape */\n        .highlight .sh { color: #dd1144 } /* Literal.String.Heredoc */\n        .highlight .si { color: #dd1144 } /* Literal.String.Interpol */\n        .highlight .sx { color: #dd1144 } /* Literal.String.Other */\n        .highlight .sr { color: #009926 } /* Literal.String.Regex */\n        .highlight .s1 { color: #dd1144 } /* Literal.String.Single */\n        .highlight .ss { color: #dd1144 } /* Literal.String.Symbol */\n        .highlight .bp { color: #0086B3 } /* Name.Builtin.Pseudo */\n        .highlight .vc { color: #008080 } /* Name.Variable.Class */\n        .highlight .vg { color: #008080 } /* Name.Variable.Global */\n        .highlight .vi { color: #008080 } /* Name.Variable.Instance */\n        .highlight .il { color: #009999 } /* Literal.Number.Integer.Long */\n    </style>\n    <script type=\"text/javascript\" async\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML\">\n    </script>\n</head>\n<body>\n<h1>Coelhos procriando e morrendo</h1>\n<!-- toch -->\n<table>\n<thead>\n<tr>\n<th><a href=\"#intro\">Intro</a></th>\n<th><a href=\"#draft\">Draft</a></th>\n<th><a href=\"#tests\">Tests</a></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<!-- toch -->\n\n<h2>Intro</h2>\n<p>Suponha agora os nossos coelhos n\u00e3o vivam para sempre e morrem depois de 3 meses. Contudo, os coelhos acasalam com um m\u00eas de idade e cada f\u00eamea produz um novo par de coelhos a cada m\u00eas a partir do segundo m\u00eas.</p>\n<p><img alt=\"Fibonacci\" src=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/fib2/Fibonacci.png\" /></p>\n<p>A imagem mostra que ao final de seis meses teremos apenas 4 pares de coelhos considerando que os coelhos morrem ap\u00f3s 3 meses. Quantos pares de coelhos teremos ao final de <span class=\"arithmatex\">\\(n\\)</span> meses?</p>\n<p>Desenvolva uma fun\u00e7\u00e3o recursiva <span class=\"arithmatex\">\\(f(n)\\)</span> que devolve o n\u00famero de pares de coelhos ap\u00f3s n meses considerando que os coelhos morrem depois de 3 meses.</p>\n<h2>Draft</h2>\n<ul>\n<li>Voc\u00ea deve implementar de forma recursiva a fun\u00e7\u00e3o <code>f</code> no arquivo <code>main.cpp</code>.</li>\n</ul>\n<!-- links .cache/draft -->\n<ul>\n<li>cpp<ul>\n<li><a href=\"https://github.com/qxcodeed/arcade/blob/master/base/fib2/.cache/draft/cpp/main.cpp\">main.cpp</a></li>\n</ul>\n</li>\n</ul>\n<!-- links -->\n\n<h2>Tests</h2>\n<ul>\n<li>\n<p>Entrada</p>\n<ul>\n<li>A entrada \u00e9 composta por uma \u00fanica linha contendo um \u00fanico inteiro correspondente ao m\u00eas desejado (<span class=\"arithmatex\">\\(1 \\leq n \\leq 40\\)</span>).</li>\n</ul>\n</li>\n<li>\n<p>Sa\u00edda</p>\n<ul>\n<li>A sa\u00edda \u00e9 composta por uma \u00fanica linha contendo o n\u00famero total de pares de coelhos que est\u00e3o presentes ap\u00f3s n meses, se come\u00e7armos com 1 par e em cada gera\u00e7\u00e3o, cada par de coelhos em idade reprodutiva produz um par de coelhos e eles morrem depois de 3 meses.</li>\n</ul>\n</li>\n</ul>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n6\n========\n4\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n<div class=\"language-text highlight\"><pre><span></span><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n40\n========\n55405\n&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;\n</code></pre></div>\n</body>\n</html>\n",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT\n6\n======== EXPECT\n4\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n40\n======== EXPECT\n55405\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n1\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n2\n======== EXPECT\n1\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n3\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n4\n======== EXPECT\n2\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n5\n======== EXPECT\n3\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n7\n======== EXPECT\n5\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n8\n======== EXPECT\n7\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n9\n======== EXPECT\n9\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n10\n======== EXPECT\n12\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n11\n======== EXPECT\n16\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n12\n======== EXPECT\n21\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n13\n======== EXPECT\n28\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n14\n======== EXPECT\n37\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n15\n======== EXPECT\n49\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n16\n======== EXPECT\n65\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n17\n======== EXPECT\n86\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n18\n======== EXPECT\n114\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n19\n======== EXPECT\n151\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n20\n======== EXPECT\n200\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n21\n======== EXPECT\n265\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n22\n======== EXPECT\n351\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n23\n======== EXPECT\n465\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n24\n======== EXPECT\n616\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n25\n======== EXPECT\n816\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n26\n======== EXPECT\n1081\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n27\n======== EXPECT\n1432\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n28\n======== EXPECT\n1897\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n29\n======== EXPECT\n2513\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n30\n======== EXPECT\n3329\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n31\n======== EXPECT\n4410\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n32\n======== EXPECT\n5842\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n33\n======== EXPECT\n7739\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n34\n======== EXPECT\n10252\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n35\n======== EXPECT\n13581\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n36\n======== EXPECT\n17991\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n37\n======== EXPECT\n23833\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n38\n======== EXPECT\n31572\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT\n39\n======== EXPECT\n41824\n<<<<<<<< FINISH\n\n",
            "type": "hide"
        }
    ],
    "draft": {
        "cpp": [
            {
                "name": "main.cpp",
                "contents": "#include <iostream>\n\nint f (int n) {\n    (void) n;\n    return 0;\n}\n\nint main() {\n    int n;\n    std::cin >> n;\n    std::cout << f(n) << std::endl;\n}\n",
                "type": "show"
            }
        ]
    }
}
