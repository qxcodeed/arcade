{
    "title": "@multiset: MultiSet usando vetor din\u00e2mico",
    "description": "<!DOCTYPE html>\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"\" xml:lang=\"\">\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"generator\" content=\"pandoc\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=yes\" />\n  <title>@multiset: MultiSet usando vetor din\u00e2mico</title>\n  <style>\n    code{white-space: pre-wrap;}\n    span.smallcaps{font-variant: small-caps;}\n    div.columns{display: flex; gap: min(4vw, 1.5em);}\n    div.column{flex: auto; overflow-x: auto;}\n    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\n    /* The extra [class] is a hack that increases specificity enough to\n       override a similar rule in reveal.js */\n    ul.task-list[class]{list-style: none;}\n    ul.task-list li input[type=\"checkbox\"] {\n      font-size: inherit;\n      width: 0.8em;\n      margin: 0 0.8em 0.2em -1.6em;\n      vertical-align: middle;\n    }\n    /* CSS for syntax highlighting */\n    html { -webkit-text-size-adjust: 100%; }\n    pre > code.sourceCode { white-space: pre; position: relative; }\n    pre > code.sourceCode > span { display: inline-block; line-height: 1.25; }\n    pre > code.sourceCode > span:empty { height: 1.2em; }\n    .sourceCode { overflow: visible; }\n    code.sourceCode > span { color: inherit; text-decoration: inherit; }\n    div.sourceCode { margin: 1em 0; }\n    pre.sourceCode { margin: 0; }\n    @media screen {\n    div.sourceCode { overflow: auto; }\n    }\n    @media print {\n    pre > code.sourceCode { white-space: pre-wrap; }\n    pre > code.sourceCode > span { text-indent: -5em; padding-left: 5em; }\n    }\n    pre.numberSource code\n      { counter-reset: source-line 0; }\n    pre.numberSource code > span\n      { position: relative; left: -4em; counter-increment: source-line; }\n    pre.numberSource code > span > a:first-child::before\n      { content: counter(source-line);\n        position: relative; left: -1em; text-align: right; vertical-align: baseline;\n        border: none; display: inline-block;\n        -webkit-touch-callout: none; -webkit-user-select: none;\n        -khtml-user-select: none; -moz-user-select: none;\n        -ms-user-select: none; user-select: none;\n        padding: 0 4px; width: 4em;\n        color: #aaaaaa;\n      }\n    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }\n    div.sourceCode\n      {   }\n    @media screen {\n    pre > code.sourceCode > span > a:first-child::before { text-decoration: underline; }\n    }\n    code span.al { color: #ff0000; font-weight: bold; } /* Alert */\n    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */\n    code span.at { color: #7d9029; } /* Attribute */\n    code span.bn { color: #40a070; } /* BaseN */\n    code span.bu { color: #008000; } /* BuiltIn */\n    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */\n    code span.ch { color: #4070a0; } /* Char */\n    code span.cn { color: #880000; } /* Constant */\n    code span.co { color: #60a0b0; font-style: italic; } /* Comment */\n    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */\n    code span.do { color: #ba2121; font-style: italic; } /* Documentation */\n    code span.dt { color: #902000; } /* DataType */\n    code span.dv { color: #40a070; } /* DecVal */\n    code span.er { color: #ff0000; font-weight: bold; } /* Error */\n    code span.ex { } /* Extension */\n    code span.fl { color: #40a070; } /* Float */\n    code span.fu { color: #06287e; } /* Function */\n    code span.im { color: #008000; font-weight: bold; } /* Import */\n    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */\n    code span.kw { color: #007020; font-weight: bold; } /* Keyword */\n    code span.op { color: #666666; } /* Operator */\n    code span.ot { color: #007020; } /* Other */\n    code span.pp { color: #bc7a00; } /* Preprocessor */\n    code span.sc { color: #4070a0; } /* SpecialChar */\n    code span.ss { color: #bb6688; } /* SpecialString */\n    code span.st { color: #4070a0; } /* String */\n    code span.va { color: #19177c; } /* Variable */\n    code span.vs { color: #4070a0; } /* VerbatimString */\n    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */\n  </style>\n</head>\n<body>\n<h1 id=\"multiset-usando-vetor-din\u00e2mico\">MultiSet usando vetor\ndin\u00e2mico</h1>\n<ul>\n<li>Um MultiSet \u00e9 um conjunto que permite a repeti\u00e7\u00e3o de elementos.\n<ul>\n<li>Ele normalmente \u00e9 implementado com uma tabela hash ou \u00e1rvores.</li>\n<li>Mas vamos implementar um MultiSet usando uma lista sequencial\nordenada.</li>\n<li>Um multiset \u00e9 equivalente a um mapa[chave, valor] onde a chave \u00e9 o\nelemento e o valor \u00e9 a contagem de ocorr\u00eancias do elemento.</li>\n</ul></li>\n<li>Inser\u00e7\u00e3o - O(n)\n<ul>\n<li>A lista sequencial ordenada \u00e9 uma lista que mant\u00e9m os elementos em\nordem crescente e permite repeti\u00e7\u00e3o de valores.</li>\n<li>Vamos ter um vetor din\u00e2mico que vai armazenar os elementos.</li>\n<li>O vetor din\u00e2mico vai ser redimensionado quando necess\u00e1rio.</li>\n<li>O vetor din\u00e2mico vai ter um tamanho inicial padr\u00e3o.</li>\n<li>Vamos ter um custo de O(n) para inser\u00e7\u00e3o pela necessidade de\ndeslocar os elementos.</li>\n</ul></li>\n<li>Busca - O(log n)\n<ul>\n<li>Como os dados est\u00e3o em um vetor ordenado, podemos fazer uma busca\nbin\u00e1ria para encontrar o elemento.</li>\n<li>A busca bin\u00e1ria tem um custo de O(log n).</li>\n</ul></li>\n<li>Remo\u00e7\u00e3o - O(n)\n<ul>\n<li>A remo\u00e7\u00e3o de um elemento tamb\u00e9m tem um custo de O(n) pela\nnecessidade de deslocar os elementos.</li>\n<li>Como existe possibilidade de repeti\u00e7\u00e3o, remover um elemento remove\napenas uma ocorr\u00eancia do elemento.</li>\n<li>Se o elemento n\u00e3o existir, deve retornar uma mensagem de erro.</li>\n</ul></li>\n<li>Contagem - O(log n)\n<ul>\n<li>Retorna o n\u00famero de ocorr\u00eancias do elemento na lista.</li>\n<li>Ap\u00f3s encontrar o elemento com a busca bin\u00e1ria, percorre a lista para\ncontar as ocorr\u00eancias.</li>\n</ul></li>\n<li>ContarDiferentes - O(n)\n<ul>\n<li>Retorna o n\u00famero de elementos diferentes na lista.</li>\n<li>Percorre a lista uma \u00fanica vez e conta os elementos diferentes.</li>\n<li>Observe que podemos utilizar o fato de o vetor estar ordenado para\ncontar os elementos diferentes.</li>\n</ul></li>\n</ul>\n<figure>\n<img\nsrc=\"https://raw.githubusercontent.com/qxcodeed/arcade/master/base/multiset/cover.jpg\"\nalt=\"_\" />\n<figcaption aria-hidden=\"true\">_</figcaption>\n</figure>\n<p>Implemente a classe do vetor din\u00e2mico.</p>\n<ul>\n<li><p>Cada linguagem vai ter um arquivo <code>extra.md</code> com\norienta\u00e7\u00f5es sobre a implementa\u00e7\u00e3o.</p></li>\n<li><p>Voc\u00ea deve criar a classe e implementar os m\u00e9todos conforme as\norienta\u00e7\u00f5es.</p></li>\n<li><p>Depois de implementar um m\u00e9todo, descomente e ajuste a entrada do\nm\u00e9todo na fun\u00e7\u00e3o main.</p></li>\n<li><p>Implemente apenas os m\u00e9todos necess\u00e1rios para passar no primeiro\nteste.</p></li>\n<li><p>Depois de passar no primeiro teste, implemente os m\u00e9todos\nnecess\u00e1rios para passar no segundo teste.</p></li>\n<li><p>Continue assim at\u00e9 passar em todos os testes.</p></li>\n<li><p>Os seguintes testes mostrar o comportamento esperado da classe\npara cada invoca\u00e7\u00e3o de m\u00e9todo.</p></li>\n</ul>\n<h2 id=\"testes\">Testes</h2>\n<div class=\"sourceCode\" id=\"cb1\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb1-1\"><a href=\"#cb1-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#__case insert and show with repetitions</span></span>\n<span id=\"cb1-2\"><a href=\"#cb1-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 2</span>\n<span id=\"cb1-3\"><a href=\"#cb1-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 3 1 2 2 3 4 3</span>\n<span id=\"cb1-4\"><a href=\"#cb1-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb1-5\"><a href=\"#cb1-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[1,</span> 2, 2, 3, 3, 3, 4]</span>\n<span id=\"cb1-6\"><a href=\"#cb1-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb2\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb2-1\"><a href=\"#cb2-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#__case contains true and false</span></span>\n<span id=\"cb2-2\"><a href=\"#cb2-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 5</span>\n<span id=\"cb2-3\"><a href=\"#cb2-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 5 1 5 3</span>\n<span id=\"cb2-4\"><a href=\"#cb2-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb2-5\"><a href=\"#cb2-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[1,</span> 3, 5, 5]</span>\n<span id=\"cb2-6\"><a href=\"#cb2-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$contains</span> 3</span>\n<span id=\"cb2-7\"><a href=\"#cb2-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">true</span></span>\n<span id=\"cb2-8\"><a href=\"#cb2-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$contains</span> 5</span>\n<span id=\"cb2-9\"><a href=\"#cb2-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">true</span></span>\n<span id=\"cb2-10\"><a href=\"#cb2-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$contains</span> 2</span>\n<span id=\"cb2-11\"><a href=\"#cb2-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"fu\">false</span></span>\n<span id=\"cb2-12\"><a href=\"#cb2-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb3\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb3-1\"><a href=\"#cb3-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#__case erase one occurrence at a time</span></span>\n<span id=\"cb3-2\"><a href=\"#cb3-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 5</span>\n<span id=\"cb3-3\"><a href=\"#cb3-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 2 2 2 3</span>\n<span id=\"cb3-4\"><a href=\"#cb3-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-5\"><a href=\"#cb3-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[2,</span> 2, 2, 3]</span>\n<span id=\"cb3-6\"><a href=\"#cb3-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$erase</span> 2</span>\n<span id=\"cb3-7\"><a href=\"#cb3-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-8\"><a href=\"#cb3-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[2,</span> 2, 3]</span>\n<span id=\"cb3-9\"><a href=\"#cb3-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$erase</span> 2</span>\n<span id=\"cb3-10\"><a href=\"#cb3-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-11\"><a href=\"#cb3-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[2,</span> 3]</span>\n<span id=\"cb3-12\"><a href=\"#cb3-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$erase</span> 2</span>\n<span id=\"cb3-13\"><a href=\"#cb3-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb3-14\"><a href=\"#cb3-14\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[3]</span></span>\n<span id=\"cb3-15\"><a href=\"#cb3-15\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$erase</span> 2</span>\n<span id=\"cb3-16\"><a href=\"#cb3-16\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">value</span> not found</span>\n<span id=\"cb3-17\"><a href=\"#cb3-17\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb4\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb4-1\"><a href=\"#cb4-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#__case count</span></span>\n<span id=\"cb4-2\"><a href=\"#cb4-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 5</span>\n<span id=\"cb4-3\"><a href=\"#cb4-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 1 2 2 2 3 3 4</span>\n<span id=\"cb4-4\"><a href=\"#cb4-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$count</span> 2</span>\n<span id=\"cb4-5\"><a href=\"#cb4-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">3</span></span>\n<span id=\"cb4-6\"><a href=\"#cb4-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$count</span> 3</span>\n<span id=\"cb4-7\"><a href=\"#cb4-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">2</span></span>\n<span id=\"cb4-8\"><a href=\"#cb4-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$count</span> 4</span>\n<span id=\"cb4-9\"><a href=\"#cb4-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">1</span></span>\n<span id=\"cb4-10\"><a href=\"#cb4-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$count</span> 5</span>\n<span id=\"cb4-11\"><a href=\"#cb4-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">0</span></span>\n<span id=\"cb4-12\"><a href=\"#cb4-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb5\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb5-1\"><a href=\"#cb5-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#__case unique</span></span>\n<span id=\"cb5-2\"><a href=\"#cb5-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 10</span>\n<span id=\"cb5-3\"><a href=\"#cb5-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 5 5 5 1 2 2 3 3 3 3</span>\n<span id=\"cb5-4\"><a href=\"#cb5-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb5-5\"><a href=\"#cb5-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[1,</span> 2, 2, 3, 3, 3, 3, 5, 5, 5]</span>\n<span id=\"cb5-6\"><a href=\"#cb5-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$unique</span></span>\n<span id=\"cb5-7\"><a href=\"#cb5-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">4</span></span>\n<span id=\"cb5-8\"><a href=\"#cb5-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 4</span>\n<span id=\"cb5-9\"><a href=\"#cb5-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$unique</span></span>\n<span id=\"cb5-10\"><a href=\"#cb5-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">5</span></span>\n<span id=\"cb5-11\"><a href=\"#cb5-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n<div class=\"sourceCode\" id=\"cb6\"><pre\nclass=\"sourceCode bash\"><code class=\"sourceCode bash\"><span id=\"cb6-1\"><a href=\"#cb6-1\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"co\">#__case clear</span></span>\n<span id=\"cb6-2\"><a href=\"#cb6-2\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$init</span> 3</span>\n<span id=\"cb6-3\"><a href=\"#cb6-3\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$insert</span> 1 1 2 3</span>\n<span id=\"cb6-4\"><a href=\"#cb6-4\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb6-5\"><a href=\"#cb6-5\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[1,</span> 1, 2, 3]</span>\n<span id=\"cb6-6\"><a href=\"#cb6-6\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$clear</span></span>\n<span id=\"cb6-7\"><a href=\"#cb6-7\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$show</span></span>\n<span id=\"cb6-8\"><a href=\"#cb6-8\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">[]</span></span>\n<span id=\"cb6-9\"><a href=\"#cb6-9\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$count</span> 1</span>\n<span id=\"cb6-10\"><a href=\"#cb6-10\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">0</span></span>\n<span id=\"cb6-11\"><a href=\"#cb6-11\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$unique</span></span>\n<span id=\"cb6-12\"><a href=\"#cb6-12\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"ex\">0</span></span>\n<span id=\"cb6-13\"><a href=\"#cb6-13\" aria-hidden=\"true\" tabindex=\"-1\"></a><span class=\"va\">$end</span></span></code></pre></div>\n</body>\n</html>",
    "upload": [
        {
            "name": "vpl_evaluate.cases",
            "contents": ">>>>>>>> INSERT insert and show with repetitions\ninit 2\ninsert 3 1 2 2 3 4 3\nshow\nend\n======== EXPECT\n$init 2\n$insert 3 1 2 2 3 4 3\n$show\n[1, 2, 2, 3, 3, 3, 4]\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT contains true and false\ninit 5\ninsert 5 1 5 3\nshow\ncontains 3\ncontains 5\ncontains 2\nend\n======== EXPECT\n$init 5\n$insert 5 1 5 3\n$show\n[1, 3, 5, 5]\n$contains 3\ntrue\n$contains 5\ntrue\n$contains 2\nfalse\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT erase one occurrence at a time\ninit 5\ninsert 2 2 2 3\nshow\nerase 2\nshow\nerase 2\nshow\nerase 2\nshow\nerase 2\nend\n======== EXPECT\n$init 5\n$insert 2 2 2 3\n$show\n[2, 2, 2, 3]\n$erase 2\n$show\n[2, 2, 3]\n$erase 2\n$show\n[2, 3]\n$erase 2\n$show\n[3]\n$erase 2\nvalue not found\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT count\ninit 5\ninsert 1 2 2 2 3 3 4\ncount 2\ncount 3\ncount 4\ncount 5\nend\n======== EXPECT\n$init 5\n$insert 1 2 2 2 3 3 4\n$count 2\n3\n$count 3\n2\n$count 4\n1\n$count 5\n0\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT unique\ninit 10\ninsert 5 5 5 1 2 2 3 3 3 3\nshow\nunique\ninsert 4\nunique\nend\n======== EXPECT\n$init 10\n$insert 5 5 5 1 2 2 3 3 3 3\n$show\n[1, 2, 2, 3, 3, 3, 3, 5, 5, 5]\n$unique\n4\n$insert 4\n$unique\n5\n$end\n<<<<<<<< FINISH\n\n\n>>>>>>>> INSERT clear\ninit 3\ninsert 1 1 2 3\nshow\nclear\nshow\ncount 1\nunique\nend\n======== EXPECT\n$init 3\n$insert 1 1 2 3\n$show\n[1, 1, 2, 3]\n$clear\n$show\n[]\n$count 1\n0\n$unique\n0\n$end\n<<<<<<<< FINISH\n\n",
            "encoding": 0
        }
    ],
    "keep": [],
    "required": [],
    "draft": {
        "go": [
            {
                "name": "extra.md",
                "contents": "# Multiset\n\n```ts\nclass MultiSet {\n  - data: []int                             ' Guarda os elementos do multiconjunto (ordenados, com repeti\u00e7\u00f5es)\n  - size: int                               ' N\u00famero atual de elementos no multiconjunto\n  - capacity: int                           ' Capacidade alocada do vetor data\n  --\n  + NewMultiSet(capacity: int): *MultiSet   ' Cria um novo multiconjunto com a capacidade especificada\n  - expand(): void                          ' Aumenta a capacidade do vetor quando necess\u00e1rio (dobrando ou iniciando)\n  --\n  + magicSearch(value: int): int            ' Retorna o \u00edndice da \u00faltima ocorr\u00eancia de value ou onde deve ser inserido\n  - match(index: int, value: int): bool     ' Verifica se o valor no \u00edndice corresponde ao valor dado\n  --\n  + Insert(value: int): void                ' Insere o valor na posi\u00e7\u00e3o correta, mantendo a ordem e permitindo repeti\u00e7\u00f5es\n  - insert(value: int, index: int): error   ' Insere value no \u00edndice indicado, deslocando os elementos \u00e0 direita\n  --\n  + Erase(value: int): error                ' Remove uma ocorr\u00eancia do valor, se existir; retorna erro caso n\u00e3o exista\n  - erase(index: int): error                ' Remove o elemento na posi\u00e7\u00e3o index, deslocando os demais\n  --\n  + Contains(value: int): bool              ' Retorna true se o valor estiver presente no multiconjunto\n  + Count(value: int): int                  ' Retorna o n\u00famero de ocorr\u00eancias do valor no multiconjunto\n  + Unique(): int                           ' Retorna o n\u00famero de valores distintos no multiconjunto\n  + Clear(): void                           ' Remove todos os elementos do multiconjunto\n  + String(): string                        ' Retorna uma representa\u00e7\u00e3o textual dos elementos do multiconjunto\n}\n```\n",
                "encoding": 0
            },
            {
                "name": "main.go",
                "contents": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n)\n\nfunc Join(slice []int, sep string) string {\n\tif len(slice) == 0 {\n\t\treturn \"\"\n\t}\n\tresult := fmt.Sprintf(\"%d\", slice[0])\n\tfor _, value := range slice[1:] {\n\t\tresult += sep + fmt.Sprintf(\"%d\", value)\n\t}\n\treturn result\n}\n\nfunc main() {\n\tvar line, cmd string\n\tscanner := bufio.NewScanner(os.Stdin)\n\t// ms := NewMultiSet(0)\n\n\tfor scanner.Scan() {\n\t\tfmt.Print(\"$\")\n\t\tline = scanner.Text()\n\t\targs := strings.Fields(line)\n\t\tfmt.Println(line)\n\t\tif len(args) == 0 {\n\t\t\tcontinue\n\t\t}\n\t\tcmd = args[0]\n\n\t\tswitch cmd {\n\t\tcase \"end\":\n\t\t\treturn\n\t\tcase \"init\":\n\t\t\t// value, _ := strconv.Atoi(args[1])\n\t\t\t// ms = NewMultiSet(value)\n\t\tcase \"insert\":\n\t\t\t// for _, part := range args[1:] {\n\t\t\t// \tvalue, _ := strconv.Atoi(part)\n\t\t\t// }\n\t\tcase \"show\":\n\t\tcase \"erase\":\n\t\t\t// value, _ := strconv.Atoi(args[1])\n\t\tcase \"contains\":\n\t\t\t// value, _ := strconv.Atoi(args[1])\n\t\tcase \"count\":\n\t\t\t// value, _ := strconv.Atoi(args[1])\n\t\tcase \"unique\":\n\t\tcase \"clear\":\n\t\tdefault:\n\t\t\tfmt.Println(\"fail: comando invalido\")\n\t\t}\n\t}\n}\n",
                "encoding": 0
            }
        ]
    }
}
